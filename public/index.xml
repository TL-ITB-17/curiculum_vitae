<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Environmental Data Modeling on Environmental Data Modeling</title>
    <link>/</link>
    <description>Recent content in Environmental Data Modeling on Environmental Data Modeling</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Mar 2019 00:00:00 +0700</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>3. Manajemen Data R</title>
      <link>/tutorial/03_manajemen-data-r/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0700</pubDate>
      
      <guid>/tutorial/03_manajemen-data-r/</guid>
      <description>


&lt;blockquote&gt;
&lt;h2 id=&#34;daftar-isi&#34;&gt;Daftar Isi:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#3-1-import-file&#34;&gt;Import File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-2-eksport-file&#34;&gt;Eksport File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-3-tibble-data-format&#34;&gt;Tibble Data Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-4-merapikan-data&#34;&gt;Merapikan Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-5-transformasi-data&#34;&gt;Transformasi Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;import-file&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.1 Import File&lt;/h2&gt;
&lt;p&gt;Pada sesi bagian ini penulis akan menjelaskan cara mengimport file pada &lt;code&gt;R&lt;/code&gt;. File yang diimport ke dalam &lt;code&gt;R&lt;/code&gt; terdiri atas file yang sering digunakan pada saat akan melakukan analisis data, antara lain: TXT, CSv, Excel, SPSS, SAS, dan STATA.&lt;/p&gt;
&lt;p&gt;Pada bagian ini akan dijelaskan pula bagaimana melakukan import data menggunakan library &lt;code&gt;readr&lt;/code&gt; serta kelebihan dari metode import data yang digunakan. Berikut adalah cara mengimport data berbagai format pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Pastikan kita telah mengatur lokasi &lt;em&gt;working directory&lt;/em&gt; pada tempat dimana lokasi file yang akan kita baca berada untuk mempermudah dalam melakukan import file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;import-file-menggunakan-fungsi-bawaan-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.1.1 Import File Menggunakan Fungsi Bawaan R&lt;/h3&gt;
&lt;p&gt;Fungsi bawaan &lt;code&gt;R&lt;/code&gt; secara umum hanya dapat membaca data dengan format TXT dan CSV. Pada &lt;code&gt;RStudio&lt;/code&gt; fungsi ini bertambah dengan adanya library tambahan yang telah terinstall di &lt;code&gt;RStudio&lt;/code&gt; untuk membaca file dengan format EXCEL, SPSS, SAS dan STATA.&lt;/p&gt;
&lt;p&gt;Secara umum fungsi yang digunakan untuk membaca data dengan format tabel seperti TXT dan CSV adalah fungsi&lt;code&gt;read.table()&lt;/code&gt;. Berikut adalah list fungsi dasar lainnya untuk membaca file dengan format TXT dan CSV pada &lt;code&gt;R&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;read.csv()&lt;/strong&gt;: untuk membaca file dengan format &lt;em&gt;comma separated value&lt;/em&gt;(“.csv”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;read.csv2()&lt;/strong&gt;: varian yang digunakan jika pada file “.csv” yang akan dibaca mengandung koma (“,”) sebagai desimal dan semicolon (“;”) sebagai pemisah antar variabel atau kolom.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;read.delim()&lt;/strong&gt;: untuk membaca file dengan format &lt;em&gt;tab-separated value&lt;/em&gt;(“.txt”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;read.delim2()&lt;/strong&gt;: membaca file dengan format “.txt” dengan tanda koma (“,”) sebagai penujuk bilangan desimal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Masing-masing fungsi diatas dapat dituliskan kedalam &lt;code&gt;R&lt;/code&gt; dengan format sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membaca tabular data pada  R
read.table(file, header = FALSE, sep = &amp;quot;&amp;quot;, dec = &amp;quot;.&amp;quot;)
# Membaca&amp;quot;comma separated value&amp;quot; files (&amp;quot;.csv&amp;quot;)
read.csv(file, header = TRUE, sep = &amp;quot;,&amp;quot;, dec = &amp;quot;.&amp;quot;, ...)
# atau gunakan read.csv2 jika tanda desimal pada data adalah &amp;quot;,&amp;quot; dan pemisah kolom adalah &amp;quot;;&amp;quot;
read.csv2(file, header = TRUE, sep = &amp;quot;;&amp;quot;, dec = &amp;quot;,&amp;quot;, ...)
# MembacaTAB delimited files
read.delim(file, header = TRUE, sep = &amp;quot;\t&amp;quot;, dec = &amp;quot;.&amp;quot;, ...)
read.delim2(file, header = TRUE, sep = &amp;quot;\t&amp;quot;, dec = &amp;quot;,&amp;quot;, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: nama file diakhiri dengan format file (misal: “nama_file.txt”) yang akan di import ke dalam file. Dapat pula diisi lokasi file tersebut berada, misal:(C:/Users/My PC/Documents/nama_file.txt atau .csv)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sep&lt;/strong&gt;: pemisah antar kolom. “” digunakan untuk tab-delimited file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;header&lt;/strong&gt;: nilai logik. jika TRUE, maka &lt;code&gt;read.table()&lt;/code&gt; akan menganggap bahwa file yang akan dibaca pada baris pertama file merupakan header data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dec&lt;/strong&gt;: karakter yang digunakan sebagai penunjuk desimal pada data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Untuk info lebih lanjut terkait fungsi-fungsi tersebut dan contoh bagaimana menggunakannya, pembaca dapat mengakses fitur batuan dari fungsi tersebut menggunakan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengakses menu bantuan
?read.table
?read.csv
?read.csv2
?read.delim
?read.delim2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Misalkan penulis memiliki data pada file bernama “mtcars.csv” dengan desimal berupa titik pada datanya. Penulsi ingin membaca file tersebut, maka penulis akan menuliskan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read.csv(&amp;quot;mtcars.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Secara default perintah tersebut akan membaca baris pertama data sebagai header serta data berupa karakter menjadi factor. Untuk mencegah agar data berupa karakter menjadi faktor, perintah tersebut dapat ditambahkan parameter &lt;code&gt;stringAsFactor = FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Kita juga dapat memilih file yang akan kita baca secara interakti. Misal pada &lt;em&gt;working directory&lt;/em&gt; terdapat beberapa file yang akan kita baca. Kita ingin melihat file dengan format tertentu yang hendak kita baca, namun kita malas mengecek file explorer pada windows. Untuk mengatasi masalah tersebut, kita dapat menggunakan fungsi &lt;code&gt;file.choose()&lt;/code&gt; pada &lt;code&gt;R&lt;/code&gt;. Fungsi tersebut akan menampilkan jendela windows explores sehingga kita dapat memilih file apa yang hendak dibaca. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read.csv(file.choose())&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; pastikan format file yang dibaca sama dengan fungsi import yang digunakan.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kita juga dapat membaca file dari internet. Untuk melakukannya kit hanya perlu meng-copy url file tersebut. Berikut adalah contoh file yang dibaca dari internet:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membaca file dari internet
data &amp;lt;- read.delim(&amp;quot;http://www.sthda.com/upload/boxplot_format.txt&amp;quot;)

# mengecek 6 observasi awal
head(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Nom variable Group
## 1 IND1       10     A
## 2 IND2        7     A
## 3 IND3       20     A
## 4 IND4       14     A
## 5 IND5       14     A
## 6 IND6       12     A&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;membaca-file-csv-dan-txt-menggunakan-library-readr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.1.2 Membaca File CSV dan TXT Menggunakan Library readr&lt;/h3&gt;
&lt;p&gt;Pada bagian sebelumnya kita telah belajar bagaimana cara membaca file dengan format CSV dan TXT menggunakan paket dasar &lt;code&gt;R&lt;/code&gt;. Pada bagian ini penulis akan menjelaskan bagaimana cara membaca file dengan format TXT dan CSV pada &lt;code&gt;R&lt;/code&gt; menggunakan paket &lt;code&gt;readr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;readr&lt;/code&gt; dikembangkan oleh Hadley Wickham. paket &lt;code&gt;readr&lt;/code&gt; memberikan solusi cepat dan ramah untuk membaca delimited file ke dalam &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dibandingkan dengan paket dasar &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;readr&lt;/code&gt; memiliki kelebihan sebagai berikut:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mampu membaca file 10x lebih cepat dibandingkan pada paket bawaan &lt;code&gt;R&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Menampilkan &lt;em&gt;progress bar&lt;/em&gt; yang bermanfaat jika proses pemuatan berlangsung agak lama.&lt;/li&gt;
&lt;li&gt;semua fungsi bekerja dengan cara yang persis sama dengan paket bawaan &lt;code&gt;R&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Untuk dapat menggunakan &lt;code&gt;readr&lt;/code&gt;, kita perlu menginstall paketnya terlebih dahulu. Untuk melakukannya jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menginstall paket
install.packages(&amp;quot;readr&amp;quot;)

# Memuat paket
library(readr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah format bebrapa fungsi yang dapat digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fungsi umum (membaca TXT dan CSV) dapat juga membaca flat file dan tsv
read_delim(file, delim, col_names = TRUE)
# Membaca comma (&amp;quot;,&amp;quot;) separated values
read_csv(file, col_names = TRUE)
# Membaca semicolon (&amp;quot;;&amp;quot;) separated values
read_csv2(file, col_names = TRUE)
# Membaca tab separated values
read_tsv(file, col_names = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: path file, koneksi atau raw vector. File yang berakhiran .gz, .bz2, .xz, atau .zip akan secara otomatis tidak terkompresi. File yang dimulai dengan “http: //”, “https: //”, “ftp: //”, atau “ftps: //” akan diunduh secara otomatis. File gz jarak jauh juga dapat diunduh &amp;amp; didekompresi secara otomatis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delim&lt;/strong&gt;: karakter yang membatasi tiap nilai pada file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_names&lt;/strong&gt;: nilai logik. Jika TRUE, maka baris pertama akan menjadi header.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh bagaimana cara membaca file menggunakan fungsi pada paket &lt;code&gt;readr&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membaca file lokal
data &amp;lt;- read_csv(&amp;quot;mtcars.csv&amp;quot;)

# atau
data &amp;lt;- read_csv(file.choose())

# Membaca dari internet
data &amp;lt;- read_tsv(&amp;quot;http://www.sthda.com/upload/boxplot_format.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat menspesifikasi jenis data pada kolom yang akan dibaca. Keuntungan dari penentuan jenis kolom (tipe data) akan memastikan data yang telah dibaca tidak salah berdasarkan jenis data pada masing-masing kolom.&lt;/p&gt;
&lt;p&gt;Beberapa format jenis kolom yang tersedia pada &lt;code&gt;readr&lt;/code&gt; adalah sebagi berikut:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;col_integer()&lt;/strong&gt;: untuk menentukan integer (alias = “i”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_double()&lt;/strong&gt;: untuk menentukan kolom sebagai jenis data double (alias = “d”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_logical()&lt;/strong&gt;: untuk menentukan variabel logis (alias = “l”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_character()&lt;/strong&gt;: meninggalkan string apa adanya.Tidak mengonversinya menjadi faktor (alias = “c”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_factor()&lt;/strong&gt;: untuk menentukan variabel faktor (atau pengelompokan) (alias = “f”)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_skip()&lt;/strong&gt;: untuk mengabaikan kolom (alias = “-” atau “_“)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col_date()&lt;/strong&gt; (alias = “D”), &lt;strong&gt;col_datetime()&lt;/strong&gt; (alias = “T”) dan &lt;strong&gt;col_time()&lt;/strong&gt; (“t”) untuk menentukan tanggal, waktu tanggal, dan waktu.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read_csv(&amp;quot;my_file.csv&amp;quot;, col_types = cols(
  x = &amp;quot;i&amp;quot;, # kolom integer
  treatment = &amp;quot;c&amp;quot; # kolom karakter/string
))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;import-file-excel-pada-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.1.3 Import File Excel Pada R&lt;/h3&gt;
&lt;p&gt;Keunggulan penggunaan excel sebagai format penyimpan data adalah kita dapat menyimpan banyak data dan memisahkannya pada lembar (&lt;em&gt;sheet&lt;/em&gt;) yang berbeda sebagai suatu data yang independen dibandingkan pembacaan pada file csv yang hanya berisikan satu tabel data saja tiap file.&lt;/p&gt;
&lt;p&gt;Pada &lt;code&gt;R&lt;/code&gt; kita dapat melakukan pembacaan file menggunakan berbagai macam cara seperti menggunakan paket bawaan &lt;code&gt;R&lt;/code&gt; maupun menggunakan library yang perlu kita install. Berikut adalah beberapa cara membaca file excel pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;p&gt;Mengkonversi terlebih dahulu satu sheet excel yang akan kita baca menjadi format “.csv” maupun “.txt” sehingga dapat dibaca seperti pada sub-bab 3.1.1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Menyalin data dari excel dan mengimport data pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cara ini sedikit mirip dengan cara sebelumnya, dimana kita perlu membuka file excel dan melakukan &lt;strong&gt;select&lt;/strong&gt; dan &lt;strong&gt;copy&lt;/strong&gt; (ctrl+c) tabel data yang hendak dibaca. Data tersebut selanjutnya akan tersimpan pada &lt;strong&gt;clipboard&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Data yang telah tersalin selanjutnya diimport ke &lt;code&gt;R&lt;/code&gt; dengan mengetikkan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read.table(file= &amp;quot;clipboard&amp;quot;,
                   sep = &amp;quot;\t&amp;quot;, header = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cara ini merupakan cara yang paling sering penulis gunakan. Kelemahan penggunaan cara ini adalah ketika kita melakukan proses &lt;strong&gt;select&lt;/strong&gt; dan &lt;strong&gt;copy&lt;/strong&gt; (ctrl+c) tabel yang jumlahnya sangat banyak dan terdapat teks-teks penjelasan terkait tabel data pada lembar kerja excel yang tidak ingin kita sertakan akan memakan waktu yang lebih lama pada proses &lt;strong&gt;select&lt;/strong&gt;.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Mengimport data menggunakan library readxl.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Paket &lt;code&gt;readxl&lt;/code&gt;, yang dikembangkan oleh Hadley Wickham, dapat digunakan untuk dengan mudah mengimpor file Excel (xls | xlsx) ke &lt;code&gt;R&lt;/code&gt; tanpa ada ketergantungan eksternal.&lt;/p&gt;
&lt;p&gt;Untuk dapat menggunakan library &lt;code&gt;readxl&lt;/code&gt; kita harus menginstallnya terlebih dahulu menggunakan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Instal paket
install.packages(&amp;quot;readxl&amp;quot;)

# memuat paket
library(readxl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah contoh cara mengimport data dengan format xls atau xlsx pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tentukan sheet dengan nama sheet pada file
data &amp;lt;- read_excel(&amp;quot;my_file.xlsx&amp;quot;, sheet = &amp;quot;data&amp;quot;)

# Tentukan sheet berdasarkan indeks sheet
data &amp;lt;- read_excel(&amp;quot;my_file.xlsx&amp;quot;, sheet = 2) # membaca sheet ke-2&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Mengimport data menggunakan library xlsx&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Paket &lt;code&gt;xlsx&lt;/code&gt;, solusi berbasis &lt;code&gt;java&lt;/code&gt;, adalah salah satu paket &lt;code&gt;R&lt;/code&gt; yang ampuh untuk membaca, menulis, dan memformat file Excel. Untuk dapat menggunakannya kita harus menginstall dan memuatnya terlebih dahulu. Berikut sintaks yang digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menginstall paket
install.packages(&amp;quot;xlsx&amp;quot;)

# Memuat paket
library(xlsx)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Terdapat dua buah fungsi yang disediakan pada paket tersebut yaitu &lt;code&gt;read.xlsx()&lt;/code&gt; dan &lt;code&gt;read.xlsx2()&lt;/code&gt;. Perbedaan keduanya adalah &lt;code&gt;read.xlsx2()&lt;/code&gt; digunakan pada file data dengan ukuran yang besar serta proses pembacaan data yang lebih cepat dibandingkan dengan &lt;code&gt;read.xlsx()&lt;/code&gt;. Fromat yang digunakan untuk kedua fungsi tersebut disajikan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;read.xlsx(file, sheetIndex, header=TRUE)
read.xlsx2(file, sheetIndex, header=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: nama atau lokasi file berada&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sheetIndex&lt;/strong&gt;: Indeks dari sheet yang hendak dibaca&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;header&lt;/strong&gt;: nilai logik. Jika bernilai TRUE, maka baris pertama dari sheet menjadi header.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh penggunaanya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- read.xlsx(file.choose(), 1) # membaca sheet 1&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; kita juga dapat membaca file dari internet seperti pada sub-bab 3.1.1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;membaca-file-dari-format-aplikasi-statistik&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.1.4 Membaca File Dari Format Aplikasi Statistik&lt;/h3&gt;
&lt;p&gt;Untuk membaca file yang berasal dari format aplikasi statistik seperti SPSS, SAS, dan STATA kita perlu menginstal dan memuat paket-paket yang dibutuhkan sesuai dengan file yang akan kita install. Berikut adalah sintaks bagaimana cara mengimport file dari berbagai format aplikasi statistik.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membaca file SPSS
install.packages(&amp;quot;Hmisc&amp;quot;) # menginstall paket
library(Hmisc) # memuat paket
# simpan SPSS dataset pada transport format
get file=&amp;#39;c:\mydata.sav&amp;#39;.
export outfile=&amp;#39;c:\mydata.por&amp;#39;. 
data &amp;lt;- spss.get(&amp;quot;c:\mydata.por&amp;quot;, use.value.labels= TRUE) # use.value.labels digunakan untuk mengubah label menjadi factor


# membaca file SAS
install.packages(&amp;quot;Hmisc&amp;quot;) # menginstall paket
library(Hmisc) # memuat paket
# simpan SAS dataset pada transport format
libname out xport &amp;#39;c:/mydata.xpt&amp;#39;;
data out.mydata;
set sasuser.mydata;
run;
data &amp;lt;- sasxport.get(&amp;quot;c:/mydata.xpt&amp;quot;) # Variabel yang berupa karakter akan dikonversi menjadi factor


# membaca file STATA
install.packages(&amp;quot;foreign&amp;quot;) # menginstall paket
library(foreign) # memuat paket
data &amp;lt;- read.dta(&amp;quot;c:/mydata.dta&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;eksport-file&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.2 Eksport File&lt;/h2&gt;
&lt;p&gt;Setelah kita melakukan analisa dan telah memperoleh hasil yang kita inginkan dan memperoleh data frame berupa hasil prediksi suatu model atau data yang telah dibersihakan, kita ingin melakukan pelaporan dalam bentuk file dengan format seperti EXCEL, CSV atau TXT. Untuk melakukannya kita perlu melakukan eksport data yang telah dihasilkan.&lt;/p&gt;
&lt;p&gt;Pada bagian ini penulis akan menjelaskan bagaimana cara mengeksport data dari &lt;code&gt;R&lt;/code&gt; kedalam format TXT, CSV, maupun EXCEL. Sebenarnya &lt;code&gt;R&lt;/code&gt; memungkinkan untuk melakukan eksport dalam format lain seperti RDA maupun RDS yang tidak dibahas dalam buku ini karena berada diluar lingkup buku ini.&lt;/p&gt;
&lt;div id=&#34;eksport-data-menjadi-format-txt-dan-csv&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.2.1 Eksport Data Menjadi Format TXT dan CSV&lt;/h3&gt;
&lt;p&gt;Terdapat dua cara untuk melakukan ekport data dari &lt;code&gt;R&lt;/code&gt; menjadi format TXT atau CSV, yaitu melalui paket dasar &lt;code&gt;R&lt;/code&gt; maupun menggunakan library &lt;code&gt;readr&lt;/code&gt;. Kedua cara tersebut memiliki sejumlah kemiripan dari segi fungsi, namun berbeda dari segi kecepatan eksport.&lt;/p&gt;
&lt;p&gt;Fungsi dasar yang digunakan pada &lt;code&gt;R&lt;/code&gt; untuk melakukan eksport file kedalam format TXT dan CSv adalah &lt;code&gt;write.tabel()&lt;/code&gt;. Format umum yang digunakan adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write.table(x, file, sep= &amp;quot; &amp;quot;, dec = &amp;quot;,&amp;quot;,
            row.names = TRUE, col.names = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt;: matriks atau data frame yang akan ditulis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: karakter yang menentukan nama file yang dihasilkan.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sep&lt;/strong&gt;: string pemisah bidang atau kolom, mis., sep = “ t” (untuk nilai yang dipisahkan tab).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dec&lt;/strong&gt;: string yang akan digunakan sebagai pemisah desimal. Standarnya adalah “.”.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;row.names&lt;/strong&gt;: nilai logik yang menunjukkan apakah nama baris x harus ditulis bersama dengan x, atau vektor karakter nama baris yang akan ditulis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col.names&lt;/strong&gt;: baik nilai logik yang menunjukkan apakah nama kolom x harus ditulis bersama dengan x, atau vektor karakter nama kolom yang akan ditulis. Jika &lt;code&gt;col.names = NA&lt;/code&gt; dan &lt;code&gt;row.names = TRUE&lt;/code&gt; ditambahkan nama kolom kosong, yang merupakan konvensi yang digunakan untuk file CSV untuk dibaca oleh spreadsheet.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Selain menggunakan fungsi tersebut, untuk eksport ke dalam format CSV juga dapa menggunakan fungsi &lt;code&gt;write.csv()&lt;/code&gt; atau &lt;code&gt;write.csv2()&lt;/code&gt;. Berikut adalah format yang digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write.csv(data, file=&amp;quot;data.csv&amp;quot;)
write.csv2(data, file=&amp;quot;data.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Secara penampakan kedua fungsi tersebut pada dasarnya sama dengan fungsi &lt;code&gt;write.table()&lt;/code&gt;, bedanya adalah kedua fungsi tersebut spesifik digunakan untuk eksport file kedalam format CSV.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;write.csv()&lt;/strong&gt; menggunakan “.” sebagai titik desimal serta “,” sebagai pemisah antar kolom data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;write.csv2()&lt;/strong&gt; menggunakan “,” sebagai titik desimal serta “;” sebagai pemisah antar kolom data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Misalkan kita ingin melakukan eksport data objek &lt;code&gt;mtcars&lt;/code&gt; kedalam format CSV. Untuk melakukannya dapat dilakukan dengan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write.csv(mtcars, file=&amp;quot;mtcars.csv&amp;quot;, row.names = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Hasil ekspoet ditampilkan pada &lt;em&gt;working directory&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kita juga dapat menggunakan fungsi &lt;code&gt;write_delim()&lt;/code&gt; dari library &lt;code&gt;readr&lt;/code&gt; untuk melakukan eksport data kedalam format CSV atau TXT. Berdasarkan format file yang hendak dihasilkan kita juga dapat menggunakan fungsi &lt;code&gt;write_csv()&lt;/code&gt; atau &lt;code&gt;write_tsv()&lt;/code&gt;. Berikut adalah penjelasan terkait kedua fungsi tersebut:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;write_csv()&lt;/strong&gt;: untuk mengeksport kedalam format CSV.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;write_tsv()&lt;/strong&gt;: untuk mengeksport kedalam format TXT.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Format sederhana ketiga fungsi fungsi tersebut adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fungsi umum
write_delim(x, path, delim = &amp;quot; &amp;quot;)
# Write comma (&amp;quot;,&amp;quot;) separated value files
write_csv(file, path)
# Write tab (&amp;quot;\t&amp;quot;) separated value files
write_tsv(file, path)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt;: data frame yang akan ditulis&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: path ke file hasil (dapat berupa nama file disertai ekstensi file yang akan dibuat)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delim&lt;/strong&gt;: Delimiter digunakan untuk memisahkan nilai. Harus karakter tunggal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh penerapan dari fungsi tersebut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memuat mtcars data
data(mtcars)
library(readr)

# eksport mtcars menjadi tsv atau txt
write_tsv(mtcars, path = &amp;quot;mtcars.txt&amp;quot;)

# eksport mycars menjadi csv
write_csv(mtcars, path = &amp;quot;mtcars.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;eksport-data-menjadi-format-excel&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.2.2 Eksport Data Menjadi Format Excel&lt;/h3&gt;
&lt;p&gt;Untuk mengeksport data menjadi format EXCEL (“.xls” atau “.xlsx”) kita dapat menggunakan fungsi &lt;code&gt;write.xlsx()&lt;/code&gt; dan &lt;code&gt;write.xlsx2()&lt;/code&gt; dari library &lt;code&gt;xlsx&lt;/code&gt;. Berikut adalah format sederhana yanga digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;write.xlsx(x, file, sheetName = &amp;quot;Sheet1&amp;quot;, 
  col.names = TRUE, row.names = TRUE, append = FALSE)
write.xlsx2(x, file, sheetName = &amp;quot;Sheet1&amp;quot;,
  col.names = TRUE, row.names = TRUE, append = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;x&lt;/strong&gt;: sebuah data frame untuk ditulis ke dalam worksheet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;: path ke file output.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sheetName&lt;/strong&gt;: string karakter yang digunakan untuk nama sheet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col.names, row.names&lt;/strong&gt;: nilai logik yang menentukan apakah nama kolom / nama baris x akan ditulis ke file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;append&lt;/strong&gt;: nilai logis yang menunjukkan apakah x harus ditambahkan ke file yang ada.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(&amp;quot;xlsx&amp;quot;)
# Menuliskan dataset pertama pada workbook
write.xlsx(USArrests, file = &amp;quot;myworkbook.xlsx&amp;quot;,
      sheetName = &amp;quot;USA-ARRESTS&amp;quot;, append = FALSE)
# Menambahkan dataset kedua pada workbook
write.xlsx(mtcars, file = &amp;quot;myworkbook.xlsx&amp;quot;, 
           sheetName=&amp;quot;MTCARS&amp;quot;, append=TRUE)
# Menambahkan dataset kedua pada workbook
write.xlsx(iris, file = &amp;quot;myworkbook.xlsx&amp;quot;,
           sheetName=&amp;quot;IRIS&amp;quot;, append=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble-data-format&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.3 Tibble Data Format&lt;/h2&gt;
&lt;p&gt;Tibble adalah data frame yang menyediakan metode print yang lebih bagus, berguna saat bekerja dengan kumpulan data besar. Pada bagian ini penulis akan menjelaskan penggunaan tibble sebagai alternatif kita dalam berinteraksi dengan data frame.&lt;/p&gt;
&lt;p&gt;Untuk membuat tibble kita perlu menginstall dan memuat library &lt;code&gt;tibble&lt;/code&gt; yang dikembangkan oleh &lt;strong&gt;Hadley Wichham&lt;/strong&gt;. Berikut adalah sintaks yang digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# menginstall paket
install.packages(&amp;quot;tibble&amp;quot;)

# memuat paket
library(tibble)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;membuat-tibble&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.3.1 Membuat Tibble&lt;/h3&gt;
&lt;p&gt;Untuk dapat membuat tibble kita dapat melakukan konversi data frame yang sudah ada menjadi tibble menggunakan fungsi &lt;code&gt;as_tibble()&lt;/code&gt;. Berikut adalah contoh bagaimana membuat tibble mengunakan data &lt;code&gt;iris&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memuat data mtcars
data(&amp;quot;iris&amp;quot;)

# print
head(iris, 10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# konversi mtcars menjadi tibble
iris_tbl &amp;lt;- as_tibble(iris)

# print
iris_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 150 x 5
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
##  1          5.1         3.5          1.4         0.2 setosa 
##  2          4.9         3            1.4         0.2 setosa 
##  3          4.7         3.2          1.3         0.2 setosa 
##  4          4.6         3.1          1.5         0.2 setosa 
##  5          5           3.6          1.4         0.2 setosa 
##  6          5.4         3.9          1.7         0.4 setosa 
##  7          4.6         3.4          1.4         0.3 setosa 
##  8          5           3.4          1.5         0.2 setosa 
##  9          4.4         2.9          1.4         0.2 setosa 
## 10          4.9         3.1          1.5         0.1 setosa 
## # ... with 140 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Kita dapat mengkonversi tibble menjadi data frame menggunakan fungsi &lt;code&gt;as.data.frame()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Secara default saya kita print tibble, maka akan dimunculkan 10 observasi pertama. Pada data frame biasa jika kita print data tersebut maka seluruh observasi akan ditampilkan.&lt;/p&gt;
&lt;p&gt;Penggunaan tibble ini cenderung menguntungkan saat kita bekerja dengan jumlah data yang besar dan ingin mengecek observasi yang ada. Hal ini berbeda dengan data frame biasa dimana untuk mengecek observasi awal kita perlu menggunakan fungsi &lt;code&gt;head()&lt;/code&gt; agar seluruh data tidak ditampilkan. Sehingga penggunaan tibble cenderung membuat proses analisa menjadi lebih rapi.&lt;/p&gt;
&lt;p&gt;Kita juga dapat membuat tibble dari kumpulan sejumlah vektor menggunakan fungsi &lt;code&gt;tibble()&lt;/code&gt;. &lt;code&gt;tibble()&lt;/code&gt; akan secara otomatis mendaur ulang input dengan panjang 1 (variabel &lt;code&gt;y&lt;/code&gt;), dan memungkinkan kita untuk merujuk ke variabel yang baru saja kita buat, seperti yang ditunjukkan pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble(
  x = 1:20,
  y = 1,
  z = 2*x+5*y
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 x 3
##        x     y     z
##    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1     1     7
##  2     2     1     9
##  3     3     1    11
##  4     4     1    13
##  5     5     1    15
##  6     6     1    17
##  7     7     1    19
##  8     8     1    21
##  9     9     1    23
## 10    10     1    25
## 11    11     1    27
## 12    12     1    29
## 13    13     1    31
## 14    14     1    33
## 15    15     1    35
## 16    16     1    37
## 17    17     1    39
## 18    18     1    41
## 19    19     1    43
## 20    20     1    45&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika pembaca telah mulai familiar dengan fungsi &lt;code&gt;data.frame()&lt;/code&gt;, perlu diingat bahwa &lt;code&gt;tibble()&lt;/code&gt; melakukan lebih sedikit: tidak pernah mengubah jenis input (mis., tidak pernah mengubah string menjadi faktor!), tidak pernah mengubah nama variabel, dan tidak pernah membuat nama baris seperti yang biasa terjadi saat kita menggunakan fungsi &lt;code&gt;data.frame()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Cara lain yang dapat digunakan untuk membuat tibble adalah dengan menggunakan fungsi &lt;code&gt;tribble()&lt;/code&gt; yang merupakan singkatan dari &lt;em&gt;transposed tibble&lt;/em&gt;. &lt;code&gt;tribble()&lt;/code&gt; dikustomisasi untuk entri data dalam kode: judul kolom didefinisikan oleh rumus (yaitu, mereka mulai dengan ~), dan entri dipisahkan oleh koma. Hal ini memungkinkan untuk menata sejumlah kecil data dalam bentuk yang mudah dibaca. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tribble(
  ~x, ~y, ~z,
  #--/--/----
  &amp;quot;a&amp;quot;, 2, 5,
  &amp;quot;b&amp;quot;, 5, 7
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   x         y     z
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 a         2     5
## 2 b         5     7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Penambahahan komen (#–/–/—-) dilakukan untuk memperjelas posisi dari header sehingga meminimalisir kesalahan dalam input data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tibble-vs-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.3.2 Tibble vs Data Frame&lt;/h3&gt;
&lt;p&gt;terdapat dua buah perbedaan utama antara tibble dan data frame , yaitu: &lt;em&gt;printing&lt;/em&gt; dan &lt;em&gt;subsetting&lt;/em&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;Printing&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tibbles memiliki metode print halus yang hanya menampilkan 10 baris pertama observasi, dan semua kolom yang sesuai dengan lebar layar. Ini membuatnya lebih mudah untuk bekerja dengan data besar. Selain namanya, setiap kolom melaporkan jenis datanya, fitur bagus yang dipinjam dari fungsi &lt;code&gt;str()&lt;/code&gt;. Berikut adalah contohnya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tribble(
  ~x, ~y, ~z,
  #--/---/--------
  &amp;quot;a&amp;quot;, 2.1, FALSE,
  &amp;quot;b&amp;quot;, 5.5, TRUE
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   x         y z    
##   &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;
## 1 a       2.1 FALSE
## 2 b       5.5 TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tibbles dirancang agar kita tidak secara sengaja menampilkan data yang sangat banyak saat melakukan perintah &lt;code&gt;print()&lt;/code&gt;. Tetapi terkadang kita membutuhkan lebih banyak output daripada tampilan default. Ada beberapa opsi yang dapat membantu.&lt;/p&gt;
&lt;p&gt;Pertama, kita dapat secara eksplisit melakukan print data frame dan mengontrol jumlah baris (n) dan lebar tampilan. &lt;code&gt;width = Inf&lt;/code&gt; akan menampilkan semua kolom. Berikut adalah contoh penerapannya&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(iris_tbl, n=15, width=Inf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 150 x 5
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
##  1          5.1         3.5          1.4         0.2 setosa 
##  2          4.9         3            1.4         0.2 setosa 
##  3          4.7         3.2          1.3         0.2 setosa 
##  4          4.6         3.1          1.5         0.2 setosa 
##  5          5           3.6          1.4         0.2 setosa 
##  6          5.4         3.9          1.7         0.4 setosa 
##  7          4.6         3.4          1.4         0.3 setosa 
##  8          5           3.4          1.5         0.2 setosa 
##  9          4.4         2.9          1.4         0.2 setosa 
## 10          4.9         3.1          1.5         0.1 setosa 
## 11          5.4         3.7          1.5         0.2 setosa 
## 12          4.8         3.4          1.6         0.2 setosa 
## 13          4.8         3            1.4         0.1 setosa 
## 14          4.3         3            1.1         0.1 setosa 
## 15          5.8         4            1.2         0.2 setosa 
## # ... with 135 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat mengontrol print default dengan melakukan pengaturan menggunakan fungsi &lt;code&gt;options()&lt;/code&gt;. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options(tibble.print_max= n, tibble.print_min= m)&lt;/strong&gt;: jika terdapat lebih dari “m” baris, print hanya sejumlah “n” baris.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;options(dplyr.print_min = Inf)&lt;/strong&gt;: untuk selalu menampilkan seluruh baris. Perlu diingat fungsi ini dapat digunakan saat kita telah memuat library &lt;code&gt;dplyr&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;options(tibble.width = Inf)&lt;/strong&gt;: menampilkan seluruh kolom tanpa mempedulikan lebar tampilan layar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cara terakhir untuk menampilkan seluruh observasi adalh dengan fungsi &lt;code&gt;view()&lt;/code&gt;. Berikut adalah contoh penerapannya pada data &lt;code&gt;iris_tbl&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;view(iris_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;strong&gt;Subsetting&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sejauh ini semua alat yang kita pelajari telah bekerja dengan data frame yang lengkap. Jika kita ingin mengeluarkan variabel tunggal, kita memerlukan beberapa alat baru, dollar sign (&lt;code&gt;$&lt;/code&gt;) dan [[. [[dapat mengekstraksi berdasarkan nama atau posisi; &lt;code&gt;$&lt;/code&gt; hanya mengekstraksi berdasarkan nama. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# print tibble
iris_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 150 x 5
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
##  1          5.1         3.5          1.4         0.2 setosa 
##  2          4.9         3            1.4         0.2 setosa 
##  3          4.7         3.2          1.3         0.2 setosa 
##  4          4.6         3.1          1.5         0.2 setosa 
##  5          5           3.6          1.4         0.2 setosa 
##  6          5.4         3.9          1.7         0.4 setosa 
##  7          4.6         3.4          1.4         0.3 setosa 
##  8          5           3.4          1.5         0.2 setosa 
##  9          4.4         2.9          1.4         0.2 setosa 
## 10          4.9         3.1          1.5         0.1 setosa 
## # ... with 140 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset berdasarkan nama kolom
iris_tbl$Sepal.Length&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4
##  [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5
##  [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0
##  [52] 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8
##  [69] 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4
##  [86] 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8
## [103] 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7
## [120] 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7
## [137] 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#subset berdasarkan posisi
iris_tbl[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4
##  [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5
##  [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0
##  [52] 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8
##  [69] 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4
##  [86] 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8
## [103] 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7
## [120] 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7
## [137] 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dibandingkan dengan data frame, tibble lebih ketat: tibble tidak pernah melakukan &lt;em&gt;partial matching&lt;/em&gt;, dan mereka akan menghasilkan peringatan jika kolom yang kita coba akses tidak ada.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;merapikan-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.4 Merapikan Data&lt;/h2&gt;
&lt;p&gt;Sebelum memulai analisa terhadap data yang kita miliki, umumnya kita akan merapikan data yang akan kita gunakan. Tujuannya adalah agar data yang akan digunakan sudah siap untuk dilakukan analisa dengan software tertentu seperti &lt;code&gt;R&lt;/code&gt;, dimana pada dataset perlu jelas antara variabel dan nilai (&lt;em&gt;value&lt;/em&gt;), serta untuk mempermudah dalah memperoleh informasi pada data. Berikut adalah beberapa contoh dataset yang dapat pembaca cermati terkait manakah data yang telah rapi (&lt;em&gt;tidy data&lt;/em&gt;) dan mana yang belum (&lt;em&gt;messy data&lt;/em&gt;):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Install paket dataset EDAWR
# install.packages(&amp;quot;devtools&amp;quot;)
# devtools::install_github(&amp;quot;rstudio/EDAWR&amp;quot;)

# hilangkan tanda # jika pembaca belum menginstall&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(EDAWR)
# memuat dataset
storms&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     storm wind pressure       date
## 1 Alberto  110     1007 2000-08-03
## 2    Alex   45     1009 1998-07-27
## 3 Allison   65     1005 1995-06-03
## 4     Ana   40     1013 1997-06-30
## 5  Arlene   50     1010 1999-06-11
## 6  Arthur   45     1010 1996-06-17&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cases&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   country  2011  2012  2013
## 1      FR  7000  6900  7000
## 2      DE  5800  6000  6200
## 3      US 15000 14000 13000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pollution&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       city  size amount
## 1 New York large     23
## 2 New York small     14
## 3   London large     22
## 4   London small     16
## 5  Beijing large    121
## 6  Beijing small     56&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sebelum kita melakukan analisa di dataset tersebut, kita harus tahu terlebih dahulu apa saja syarat suatu dataset dikatakan rapi (&lt;em&gt;tidy&lt;/em&gt;). Berikut adalah syaratnya:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Setiap variabel harus memiliki kolomnya sendiri&lt;/li&gt;
&lt;li&gt;Setiap observasi harus memiliki barisnya sendiri&lt;/li&gt;
&lt;li&gt;Setiap nilai berada pada sel tersendiri&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ketiga syarat tersebut saling berhubungan sehingga jika salah satu syarat tersebut tidak terpenuhi, maka dataset belum bisa dikatakan &lt;em&gt;tidy&lt;/em&gt;. Ketiga syarat tersebut dapat divisualisasikan melalui Figure &lt;a href=&#34;#fig:tidy&#34;&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:tidy&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/tidy.png&#34; alt=&#34;Visualisasi 3 rule tidy data&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Visualisasi 3 rule tidy data
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Pada dataset &lt;code&gt;storms&lt;/code&gt; terdapat 4 buah kolom dan 6 buah baris. Masing-masing kolom menyatakan variabel pada masing-masing observasi seperti nama badai , kecepatan angin, tekanan dan waktu . Ketiga syarat kerapihan data sudah terpenuhi pada data tersebut sehingga kita bisa melakukan analisa terhadap data tersebut, misalnya kecepatan angin dan tekanan pada masing-masing badai. Selain itu kita juga dapat dengan mudah menginput variabel baru pada dataset tersebut, misal: rasio (kecepatan angin/tekanan).&lt;/p&gt;
&lt;p&gt;Berikut adalah contoh bagaimana kita dapat dengan mudah menarik nilai variabel pada masing-masing kolom dan membentuk variabel baru pada dataset tersebut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset variabel
storms$storm&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Alberto&amp;quot; &amp;quot;Alex&amp;quot;    &amp;quot;Allison&amp;quot; &amp;quot;Ana&amp;quot;     &amp;quot;Arlene&amp;quot;  &amp;quot;Arthur&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;storms$wind&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 110  45  65  40  50  45&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;storms$pressure&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1007 1009 1005 1013 1010 1010&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;storms$date&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2000-08-03&amp;quot; &amp;quot;1998-07-27&amp;quot; &amp;quot;1995-06-03&amp;quot; &amp;quot;1997-06-30&amp;quot; &amp;quot;1999-06-11&amp;quot;
## [6] &amp;quot;1996-06-17&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat variabel baru
storms_new &amp;lt;- storms
storms_new$ratio &amp;lt;- storms_new$wind/storms_new$pressure
storms_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     storm wind pressure       date      ratio
## 1 Alberto  110     1007 2000-08-03 0.10923535
## 2    Alex   45     1009 1998-07-27 0.04459861
## 3 Allison   65     1005 1995-06-03 0.06467662
## 4     Ana   40     1013 1997-06-30 0.03948667
## 5  Arlene   50     1010 1999-06-11 0.04950495
## 6  Arthur   45     1010 1996-06-17 0.04455446&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pada dataset &lt;code&gt;cases&lt;/code&gt; terdapat 3 buah kolom dan 3 baris. Pada kolom pertama berupa kode Negara, sedangkan kolom sisanya merupakan tahun. Jika kita perhatikan dengan seksama dataset tersebut merupakan sebuah &lt;em&gt;contingency table&lt;/em&gt; dimana tabel tersebut menyatakan frekuensi kejadian pada tahun tertentu dan negara tertentu. Dataset tersebut belum dapat dikatan &lt;em&gt;tidy&lt;/em&gt; karena kolom &lt;code&gt;2011&lt;/code&gt; sampai &lt;code&gt;2013&lt;/code&gt; merupakan sebuah nilai dari observasi dan bukan sebuah variabel sehingga dataset tersebut masih tergolong dataset &lt;em&gt;messy&lt;/em&gt;. Selain itu sangat sulit untuk dilakukan penarikan terhadap nilai pada setiap kolom serta pembentukan variabel baru sebagai pendukung analisa juga sulit dilakukan. Berikut adalah contoh melakukan penarikan nilai / subset pada masing variabel:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cases$country&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;FR&amp;quot; &amp;quot;DE&amp;quot; &amp;quot;US&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(cases[-1])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2011&amp;quot; &amp;quot;2012&amp;quot; &amp;quot;2013&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unlist(cases[1:3, 2:4])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 20111 20112 20113 20121 20122 20123 20131 20132 20133 
##  7000  5800 15000  6900  6000 14000  7000  6200 13000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pada dataset &lt;code&gt;pollution&lt;/code&gt;terdapat 3 buah kolom dan 6 baris. Masing-masing kolom menyatakan lokasi berupa nama kota, keterangan ukuran partikel, serta nilai dari ukuran partikel. Beberapa dari kita mungkin menganggap dataset ini telah memenuhi syarat kerapihan data. Namun, coba kita cermati jika mita ingin membuat variabel baru terkait dengan berapa rentang ukuran partikel (range ukuran partikel) pada masing-masing kota. Hal tersebut tentu sangat sulit dilakukan pada dataset tersebut, namun dataset tersebut memungkinkan kita dengan mudah mengambil nilai dari masing-masing variabelnya seperti contoh berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pollution$city&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;New York&amp;quot; &amp;quot;New York&amp;quot; &amp;quot;London&amp;quot;   &amp;quot;London&amp;quot;   &amp;quot;Beijing&amp;quot;  &amp;quot;Beijing&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pollution$size&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;large&amp;quot; &amp;quot;small&amp;quot; &amp;quot;large&amp;quot; &amp;quot;small&amp;quot; &amp;quot;large&amp;quot; &amp;quot;small&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pollution$amount&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  23  14  22  16 121  56&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan contoh-contoh tersebut pada pembahasan kali ini penulis akan menjelaskan bagaiman cara melakukan perapihan data menggunakan library &lt;code&gt;tidyr&lt;/code&gt;. Sebelum kita melakukannya berikut adalah sintaks untuk menginstall library tersebut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memasang paket
install.packages(&amp;quot;tidyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memuat paket
library(tidyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tidyr&amp;#39; was built under R version 3.5.3&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;gather&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.4.1 Gather&lt;/h3&gt;
&lt;p&gt;Pada dataset &lt;code&gt;cases&lt;/code&gt; kolom &lt;code&gt;2011&lt;/code&gt; sampai &lt;code&gt;2013&lt;/code&gt; perlu dijadikan satu variabel yaitu tahun. untuk melakukannya kita dapat menggunakan fungsi &lt;code&gt;gather()&lt;/code&gt;. Secara sederhana fungsi tersebut dapat dituliskan dengan format sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gather(data, key, value, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: data frame&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key, value&lt;/strong&gt;: nama kunci dan kolom nilai yang akan dibuat di output&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;…&lt;/strong&gt;: Spesifikasi kolom untuk dikumpulkan. Nilai yang diizinkan adalah:
&lt;ul&gt;
&lt;li&gt;nama variabel&lt;/li&gt;
&lt;li&gt;jika kita ingin memilih semua variabel antara a dan e, gunakan a:e&lt;/li&gt;
&lt;li&gt;jika kita ingin mengecualikan nama kolom y gunakan -y&lt;/li&gt;
&lt;li&gt;untuk opsi lainnya, lihat: &lt;code&gt;dplyr::select()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh penerapannya pada dataset &lt;code&gt;cases&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah dataset cases menjadi tibble simpan sebagai objek cases_new
library(tibble)
cases_tbl &amp;lt;- as_tibble(cases)

# print
cases_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##   country `2011` `2012` `2013`
##   &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 FR        7000   6900   7000
## 2 DE        5800   6000   6200
## 3 US       15000  14000  13000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# gather
cases_new &amp;lt;- gather(cases_tbl, 
                    # variabel kunci
                    key = &amp;quot;year&amp;quot;,
                    # nilai variabel
                    value = &amp;quot;frequency&amp;quot;,
                    # kecualikan kolom country
                    -country)

# print
cases_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 3
##   country year  frequency
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 FR      2011       7000
## 2 DE      2011       5800
## 3 US      2011      15000
## 4 FR      2012       6900
## 5 DE      2012       6000
## 6 US      2012      14000
## 7 FR      2013       7000
## 8 DE      2013       6200
## 9 US      2013      13000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan hasil yang diperoleh terlihat bahwa variabel tahun memiliki jenis data karakter. Jenis data ini masih belum sesuai sehingga perlu dikonversi agar menjadi jenis data numerik (&lt;em&gt;dbl = double&lt;/em&gt;). Untuk melakukannya jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah jenis variabel tahun menjadi numerik
cases_new$year &amp;lt;- as.numeric(cases_new$year)
cases_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 3
##   country  year frequency
##   &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 FR       2011      7000
## 2 DE       2011      5800
## 3 US       2011     15000
## 4 FR       2012      6900
## 5 DE       2012      6000
## 6 US       2012     14000
## 7 FR       2013      7000
## 8 DE       2013      6200
## 9 US       2013     13000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Data yang diperoleh sekaran telah rapi (&lt;em&gt;tidy&lt;/em&gt;), sehingga sudah siap untuk dilakukan analisa data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spread&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.4.2 Spread&lt;/h3&gt;
&lt;p&gt;Fungsi &lt;code&gt;spread()&lt;/code&gt; berkebalikan dengan &lt;code&gt;gather()&lt;/code&gt;. Fungsi &lt;code&gt;gather()&lt;/code&gt; menggabungkan beberapa kolom menjadi 2 buah kolom kolom kunci sedangkan &lt;code&gt;spread()&lt;/code&gt; merubah dua kolom menjadi beberapa kolom. Format sederhanya adalah sebagai berikut:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: data frame&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: nama kolom yang akan dijadikan heading pada kolom baru&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: nama kolom yang nilainya akan mengisi setiap sel&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pada contoh kasus pada data &lt;code&gt;pollution&lt;/code&gt;, kita dapat memisahkan kolom 2 menjadi kolom baru yaitu kolom &lt;code&gt;big size&lt;/code&gt; dan &lt;code&gt;small size&lt;/code&gt;. Untuk melakukannya jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# merubah objek pollution menjadi tibble
pollution_tbl &amp;lt;- as_tibble(pollution)

# print
pollution_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   city     size  amount
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 New York large     23
## 2 New York small     14
## 3 London   large     22
## 4 London   small     16
## 5 Beijing  large    121
## 6 Beijing  small     56&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# spread
pollution_new &amp;lt;- spread(pollution_tbl,
                        key = size,
                        value = amount)

#print
pollution_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   city     large small
##   &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Beijing    121    56
## 2 London      22    16
## 3 New York    23    14&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Terlihat bahwa data &lt;code&gt;pollution&lt;/code&gt; tampak memnuhi syarat kerapihan data (&lt;em&gt;tidy&lt;/em&gt;). Kita sekarang dapat menginput variabel baru dan melakukan analisa terhadap data tersebut. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# input variabel range (large-small)
pollution_new$range &amp;lt;- pollution_new$large - pollution_new$small

# print
pollution_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##   city     large small range
##   &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 Beijing    121    56    65
## 2 London      22    16     6
## 3 New York    23    14     9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan hasil yang diperoleh diketahui bahwa nilai range ukuran partikel terbesar berada di Kota Beijing.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;separate&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.4.3 Separate&lt;/h3&gt;
&lt;p&gt;Fungsi &lt;code&gt;separate()&lt;/code&gt; merupakan fungsi yang digunakan untuk memisahkan sejumlah nilai pada sebuah kolom menjadi beberapa kolom berdasarkan karakter pemisah yang ada di dalam nilai suatu kolom. Fungsi ini berbeda dengan fungsi sebelumnya seperti &lt;code&gt;gather()&lt;/code&gt; dan &lt;code&gt;spread()&lt;/code&gt; yang menggabung atau memisahkan 2 atau beberapa kolom. Format sederhana fungsi &lt;code&gt;separate()&lt;/code&gt; adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;separate(data, col, into, sep = &amp;quot;[^[:alnum:]]+&amp;quot;, convert= TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: data frame.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col&lt;/strong&gt;: Nama kolom yang tidak dikutip.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;into&lt;/strong&gt;: Vektor karakter menentukan nama variabel baru yang akan dibuat.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sep&lt;/strong&gt;: Pemisah antar kolom:&lt;/li&gt;
&lt;li&gt;Jika karakter, diartikan sebagai ekspresi reguler. Jika numerik, diartikan sebagai posisi untuk dibelah. Nilai-nilai positif mulai dari 1 di ujung kiri string; nilai negatif mulai dari -1 di ujung kanan string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;convert&lt;/strong&gt;: nilai logik. Jika bernilai TRUE maka kolom baru yang akan diperoleh akan dikonversi berdasarkan jenis data yang seharusnya.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pada dataset &lt;code&gt;storms&lt;/code&gt; kita ingin memisahkan kolom &lt;code&gt;date&lt;/code&gt; menjadi beberapa kolom seperti &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, dan &lt;code&gt;day&lt;/code&gt;, Kita dapat menggunakan fungsi &lt;code&gt;separate()&lt;/code&gt; untuk memisahkan nilai pada kolom tersebut berdasarkan karakter pemisah pada nilai kolom tersebut dalam hal ini adalah “-”. Berikut adalah cara melakukannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# merubah storms menjadi tibble
storms_tbl &amp;lt;- as_tibble(storms)

# print
storms_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 4
##   storm    wind pressure date      
##   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;date&amp;gt;    
## 1 Alberto   110     1007 2000-08-03
## 2 Alex       45     1009 1998-07-27
## 3 Allison    65     1005 1995-06-03
## 4 Ana        40     1013 1997-06-30
## 5 Arlene     50     1010 1999-06-11
## 6 Arthur     45     1010 1996-06-17&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# separate
storms_new &amp;lt;- separate(storms_tbl,
                       col = date,
                       into = c(&amp;quot;year&amp;quot;,&amp;quot;month&amp;quot;,&amp;quot;days&amp;quot;),
                       sep = &amp;quot;-&amp;quot;,
                       convert = TRUE)

# print
storms_new&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   storm    wind pressure  year month  days
##   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
## 1 Alberto   110     1007  2000     8     3
## 2 Alex       45     1009  1998     7    27
## 3 Allison    65     1005  1995     6     3
## 4 Ana        40     1013  1997     6    30
## 5 Arlene     50     1010  1999     6    11
## 6 Arthur     45     1010  1996     6    17&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan hasil yang diperoleh terlihat bahwa data telah terpisah dengan benar yang ditunjukkan dari nilai yang terpisah dan jenis data yang dihasilkan.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;unite&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.4.4 Unite&lt;/h3&gt;
&lt;p&gt;Fungsi &lt;code&gt;unite()&lt;/code&gt; merupakan kebalikan dari fungsi &lt;code&gt;separate()&lt;/code&gt;, dimana fungsi ini menggabungkan sejumlah kolom menjadi 1 kolom. Format sederhana untuk melakukanya disajikan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unite(data, col, ..., sep = &amp;quot;_&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: data frame.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;col&lt;/strong&gt;: nama kolom baru (tanpa tanda kutip) untuk ditambahkan.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sep&lt;/strong&gt;: pemisah yang akan digunakan pada antar nilai.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pada dataset &lt;code&gt;storms_new&lt;/code&gt; kita ingin menggabungkan kembali kolom &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, dan &lt;code&gt;days&lt;/code&gt; dengan karakter pemisah “/”. Berikut adalah cara melakukannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# unite
storms_old &amp;lt;- unite(storms_new,
                   col = &amp;quot;date&amp;quot;,
                   year, month, days,
                   sep = &amp;quot;-&amp;quot;)

# print
storms_old&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 4
##   storm    wind pressure date     
##   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    
## 1 Alberto   110     1007 2000-8-3 
## 2 Alex       45     1009 1998-7-27
## 3 Allison    65     1005 1995-6-3 
## 4 Ana        40     1013 1997-6-30
## 5 Arlene     50     1010 1999-6-11
## 6 Arthur     45     1010 1996-6-17&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ubah jenis kolom menjadi date
storms_old$date &amp;lt;- as.Date(storms_old$date)

# print
storms_old&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 4
##   storm    wind pressure date      
##   &amp;lt;chr&amp;gt;   &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;date&amp;gt;    
## 1 Alberto   110     1007 2000-08-03
## 2 Alex       45     1009 1998-07-27
## 3 Allison    65     1005 1995-06-03
## 4 Ana        40     1013 1997-06-30
## 5 Arlene     50     1010 1999-06-11
## 6 Arthur     45     1010 1996-06-17&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;transformasi-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3.5 Transformasi Data&lt;/h2&gt;
&lt;p&gt;Data frame merupakan struktur data utama dalam statistik dan dalam &lt;code&gt;R&lt;/code&gt;. Struktur dasar data frame ialah ada satu observasi tiap baris dan setiap kolom mewakili variabel, ukuran, fitur, atau karakteristik pengamatan itu yang telah dijelaskan pada bagian sebelumya. &lt;code&gt;R&lt;/code&gt; memiliki implementasi internal data frame yang kemungkinan besar akan kita gunakan paling sering. Namun, ada paket di CRAN yang mengimplementasikan data frame layaknya basis data relasional yang memungkinkan kita untuk beroperasi pada data frame yang sangat besar.&lt;/p&gt;
&lt;p&gt;Mengingat pentingnya mengelola dat frame, penting bagi kita untuk memiliki alat yang baik untuk melakukannya. &lt;code&gt;R&lt;/code&gt; memiliki beberapa paket seperti fungsi &lt;code&gt;subset()&lt;/code&gt; dan penggunaan operator “[” dan “$” untuk mengekstrak himpunan bagian dari frame data. Namun, operasi lain, seperti pemfilteran, pengurutan, dan pengelompokan data, seringkali dapat menjadi operasi yang membosankan di &lt;code&gt;R&lt;/code&gt; yang sintaksisnya tidak terlalu intuitif. Paket &lt;code&gt;dplyr&lt;/code&gt; dirancang untuk mengurangi banyak masalah ini dan menyediakan serangkaian rutinitas yang dioptimalkan secara khusus untuk menangani data frame.&lt;/p&gt;
&lt;div id=&#34;paket-dplyr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.5.1 Paket dplyr&lt;/h3&gt;
&lt;p&gt;Paket &lt;code&gt;dplyr&lt;/code&gt; dikembangkan oleh &lt;strong&gt;Hadley Wickham&lt;/strong&gt; dari &lt;strong&gt;RStudio&lt;/strong&gt; dan merupakan versi yang dioptimalkan dari paket &lt;code&gt;plyr&lt;/code&gt;-nya. Paket &lt;code&gt;dplyr&lt;/code&gt; tidak menyediakan fungsionalitas baru untuk &lt;code&gt;R&lt;/code&gt; sendiri, dalam arti bahwa semua yang dilakukan &lt;code&gt;dplyr&lt;/code&gt; sudah dapat dilakukan dengan fungsi basis &lt;code&gt;R&lt;/code&gt;, tetapi sangat menyederhanakan fungsi yang ada di &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Salah satu kontribusi penting dari paket &lt;code&gt;dplyr&lt;/code&gt; adalah ia menyediakan “&lt;em&gt;grammar&lt;/em&gt;” (khususnya, kata kerja) untuk manipulasi data dan untuk beroperasi pada data frame. Melalui &lt;em&gt;grammar&lt;/em&gt; ini, kita dapat berkomunikasi dengan masuk akal apa yang telah kita lakukan terhadap data frame dapat pula dipahami orang lain (dengan asumsi mereka juga tahu &lt;em&gt;grammar&lt;/em&gt;-nya). Hal ini berguna karena memberikan abstraksi untuk manipulasi data yang sebelumnya tidak ada. Kontribusi lain yang bermanfaat adalah bahwa fungsi &lt;code&gt;dplyr&lt;/code&gt; sangat cepat, karena banyak operasi utama dikodekan dalam C++.&lt;/p&gt;
&lt;p&gt;Pada bagian ini pembaca akan belajar &lt;strong&gt;6&lt;/strong&gt; fungsi utama yang ada pada paket &lt;code&gt;dplyr&lt;/code&gt;. Fungsi tersebut antara lain:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Mengambil sejumlah observasi berdasarkan nilainya (&lt;code&gt;filter()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Mengurutkan kembali baris data frame berdasarkan nilai pada sebuah atau beberapa variabel (&lt;code&gt;arrange()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Mengambil atau subset terhadap sebuah atau beberapa variabel berdasarkan nama variabel/kolom (&lt;code&gt;select()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Membuat variabel baru atau menambahkan kolom baru (&lt;code&gt;mutate()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Membuat ringkasan terhadap data frame (&lt;code&gt;summarize()&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Mengelompokkan operasi kelima fungsi diatas masing-masing berdasarkan grup data (&lt;code&gt;group_by()&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Keseluruhan fungsi tersebut format fungsi yang seragam, yaitu:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Argumen pertama adalah data frame.&lt;/li&gt;
&lt;li&gt;Argumen selanjutnya adalah deskripsi yang akan dilakukan terhadap data frame (filter, pengurutan kembali, membuat ringkasan, dll) menggunakan nama variabel (tanpa tanda kutip).&lt;/li&gt;
&lt;li&gt;Hasil operasi yang diperoleh adalah data frame baru.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Untuk menginstall dan memuat paket &lt;code&gt;dplyr&lt;/code&gt; jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Memasang paket
install.packages(&amp;quot;dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memuat paket
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;filter&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.5.2 filter()&lt;/h3&gt;
&lt;p&gt;Fungsi &lt;code&gt;filter()&lt;/code&gt; digunakan untuk mengekstrak himpunan bagian (subset) baris dari data frame. Fungsi ini mirip dengan fungsi &lt;code&gt;subset()&lt;/code&gt; yang ada di &lt;code&gt;R&lt;/code&gt;. Secara sederhana format fungsi &lt;code&gt;filter()&lt;/code&gt; dapat dituliskan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(data, ....)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; : data frame&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;….&lt;/strong&gt; : Predikat logis didefinisikan dalam istilah variabel dalam &lt;strong&gt;data&lt;/strong&gt;. Beberapa kondisi digabungkan dengan &amp;amp; (lihat Chapter 2 opeator relasi dan operator logika. Hanya baris tempat kondisi bernilai TRUE disimpan.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Misalkan kita akan melakukan melakukan filter terhadap data frame &lt;code&gt;pollution_tbl&lt;/code&gt; terhadap variabel &lt;code&gt;size&lt;/code&gt; dengan kriteria &lt;code&gt;large&lt;/code&gt; dan &lt;code&gt;amount&lt;/code&gt; &amp;gt; 12. Berikut adalah sintaks yang digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(pollution_tbl, size==&amp;quot;large&amp;quot; &amp;amp; amount &amp;gt; 12)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   city     size  amount
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 New York large     23
## 2 London   large     22
## 3 Beijing  large    121&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika menggunakan paket dasar &lt;code&gt;R&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;subset(pollution_tbl,size==&amp;quot;large&amp;quot; &amp;amp; amount &amp;gt; 12)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   city     size  amount
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 New York large     23
## 2 London   large     22
## 3 Beijing  large    121&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Operator “&amp;gt;” merupakan operator relasi (lihat chapter 2: operator relasi). Operator tersebut banyak digunakan untuk melakukan filter terhadap variabel/kolom yang mengandung nilai numerik.&lt;/p&gt;
&lt;p&gt;Operator “==” merupakan operator logika (lihat chapter 2: operator logika). Operator tersebut digunakan untuk melakukan filter terhadap sejumlah syarat atau kondisi yang kita tetapkan. Jika nilai yang dihasilkan TRUE, maka hanya observasi tersebut yang akan ditampilkan. Untuk lebih memahami penerapan masing-masing operator logika pada proses filter perhatikan Figure &lt;a href=&#34;#fig:filter&#34;&gt;2&lt;/a&gt; berikut:&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:filter&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/filter.png&#34; alt=&#34;Diagram operasi Boolean&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Diagram operasi Boolean
&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Bagian yang di arsir adalah observasi yang akan ditampilkan pada output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Salah satu bagian terpenting dan paling sering penulis gunakan pada fungsi ini memfilter &lt;em&gt;missing value&lt;/em&gt; (melihat observasi yang mengandung &lt;em&gt;missing value&lt;/em&gt; atau tidak melibatkan &lt;em&gt;missing value&lt;/em&gt;). Berikut adalah contoh filter terhadap data pada &lt;code&gt;pollution_tbl&lt;/code&gt; yang tidak mengandung &lt;em&gt;missing value&lt;/em&gt; dan nilai &lt;code&gt;amount&lt;/code&gt;&amp;gt;0.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(pollution_tbl,!(is.na(amount)|amount&amp;lt;=0))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   city     size  amount
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt;
## 1 New York large     23
## 2 New York small     14
## 3 London   large     22
## 4 London   small     16
## 5 Beijing  large    121
## 6 Beijing  small     56&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan hasil yang diperoleh seluruh data tidak ada yang di drop sehingga dapat disimpulkan bahwa data tersebut tidak mengandung &lt;em&gt;missing value&lt;/em&gt; dan nol.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;arrange&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3.5.3 arrange()&lt;/h3&gt;
&lt;p&gt;Fungsi &lt;code&gt;arrange()&lt;/code&gt; bekerja mirip dengan fungsi &lt;code&gt;filter()&lt;/code&gt; kecuali bahwa alih-alih memilih baris, fungsi ini mengubah urutan observasinya (mengurutkan dari yang terbesar atau sebaliknya). Dibutuhkan data frame dan sekumpulan nama kolom (atau ekspresi yang lebih rumit) untuk dipesan. Jika kita memberikan lebih dari satu nama kolom pada fungsi, setiap kolom tambahan akan digunakan untuk menentukan urutan nilai yang sama berdasarkan nilai kolom sebelumnya.&lt;/p&gt;
&lt;p&gt;Fungsi &lt;code&gt;arrange()&lt;/code&gt; mirip dengan fungsi &lt;code&gt;order()&lt;/code&gt; pada paket dasar &lt;code&gt;R&lt;/code&gt;. Format sederhana fungsi ini adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrange(data, ....)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt; : data frame&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;….&lt;/strong&gt; : daftar nama variabel yang tidak dikutip yang dipisahkan tanda koma, atau ekspresi yang melibatkan nama variabel. Gunakan &lt;code&gt;desc()&lt;/code&gt; untuk mengurutkan variabel dalam urutan menurun.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Misalkan kita ingin melihat urutan mobil pada data &lt;code&gt;mtcars&lt;/code&gt; berdasarkan penggunaan bahan bakar (&lt;code&gt;mpg&lt;/code&gt;) dan bobot mobil (&lt;code&gt;wt&lt;/code&gt;) tersebut. Berikut adalah sintaks yang digunakan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars&amp;lt;- as_tibble(mtcars)
arrange(mtcars, mpg, wt)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4
##  2  10.4     8  460    215  3     5.42  17.8     0     0     3     4
##  3  13.3     8  350    245  3.73  3.84  15.4     0     0     3     4
##  4  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  5  14.7     8  440    230  3.23  5.34  17.4     0     0     3     4
##  6  15       8  301    335  3.54  3.57  14.6     0     1     5     8
##  7  15.2     8  304    150  3.15  3.44  17.3     0     0     3     2
##  8  15.2     8  276.   180  3.07  3.78  18       0     0     3     3
##  9  15.5     8  318    150  2.76  3.52  16.9     0     0     3     2
## 10  15.8     8  351    264  4.22  3.17  14.5     0     1     5     4
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika ingin urutan yang digunakan adalah dari yang terbesar ke terkecil untuk kedua variabel tersebut jalankan command berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrange(mtcars, desc(mpg), desc(wt))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1
##  2  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1
##  3  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2
##  4  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2
##  5  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1
##  6  26       4 120.     91  4.43  2.14  16.7     0     1     5     2
##  7  24.4     4 147.     62  3.69  3.19  20       1     0     4     2
##  8  22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2
##  9  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1
## 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika menggunakan fungsi &lt;code&gt;order()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attach(mtcars)
# urutan dari kecil ke besar
mtcars[order(mpg, wt), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4
##  2  10.4     8  460    215  3     5.42  17.8     0     0     3     4
##  3  13.3     8  350    245  3.73  3.84  15.4     0     0     3     4
##  4  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  5  14.7     8  440    230  3.23  5.34  17.4     0     0     3     4
##  6  15       8  301    335  3.54  3.57  14.6     0     1     5     8
##  7  15.2     8  304    150  3.15  3.44  17.3     0     0     3     2
##  8  15.2     8  276.   180  3.07  3.78  18       0     0     3     3
##  9  15.5     8  318    150  2.76  3.52  16.9     0     0     3     2
## 10  15.8     8  351    264  4.22  3.17  14.5     0     1     5     4
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# urutan dari besar ke kecil
mtcars[order(-mpg, -wt), ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1
##  2  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1
##  3  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2
##  4  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2
##  5  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1
##  6  26       4 120.     91  4.43  2.14  16.7     0     1     5     2
##  7  24.4     4 147.     62  3.69  3.19  20       1     0     4     2
##  8  22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2
##  9  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1
## 10  21.5     4 120.     97  3.7   2.46  20.0     1     0     3     1
## # ... with 22 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; &lt;em&gt;missing value&lt;/em&gt; akan selalu diurutkan pada observasi terakhir baik menggunakan urutan dari terbesar ke terkecil maupun sebaliknya.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>1. Mengenal Bahasa R</title>
      <link>/tutorial/01_mengenal-bahasa-r/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0700</pubDate>
      
      <guid>/tutorial/01_mengenal-bahasa-r/</guid>
      <description>


&lt;blockquote&gt;
&lt;h2 id=&#34;daftar-isi&#34;&gt;Daftar Isi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-1-sejarah-r&#34;&gt;Sejarah R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-2-fitur-dan-karakteristik-r&#34;&gt;Fitur dan Karakteristik R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-3-kelebihan-dan-kekurangan-r&#34;&gt;Kelebihan dan Kekurangan R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-4-rstudio&#34;&gt;RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-5-menginstall-r-dan-rstudio&#34;&gt;Menginstall R dan RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-6-working-directory&#34;&gt;Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-7-fasilitas-help&#34;&gt;Fasilitas Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;sejarah-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.1 Sejarah R&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; Merupakan bahasa yang digunakan dalam komputasi &lt;strong&gt;statistik&lt;/strong&gt; yang pertama kali dikembangkan oleh &lt;strong&gt;Ross Ihaka&lt;/strong&gt; dan &lt;strong&gt;Robert Gentlement&lt;/strong&gt; di University of Auckland New Zealand yang merupakan akronim dari nama depan kedua pembuatnya. Sebelum &lt;code&gt;R&lt;/code&gt; dikenal ada &lt;code&gt;S&lt;/code&gt; yang dikembangkan oleh &lt;strong&gt;John Chambers&lt;/strong&gt; dan rekan-rekan dari &lt;strong&gt;Bell Laboratories&lt;/strong&gt; yang memiliki fungsi yang sama untuk komputasi statistik. Hal yang membedakan antara keduanya adalah &lt;code&gt;R&lt;/code&gt; merupakan sistem komputasi yang bersifat gratis.Logo &lt;code&gt;R&lt;/code&gt; dapat dilihat pada Figure &lt;a href=&#34;#fig:Logo&#34;&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:Logo&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/r-icon.png&#34; alt=&#34;Logo R.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Logo R.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; dapat dibilang merupakan aplikasi sistem &lt;strong&gt;statistik&lt;/strong&gt; yang kaya. Hal ini disebabkan banyak sekali paket yang dikembangkan oleh pengembang dan komunitas untuk keperluan analisa statistik seperti &lt;em&gt;linear regression&lt;/em&gt;, &lt;em&gt;clustering&lt;/em&gt;, &lt;em&gt;statistical test&lt;/em&gt;, dll. Selain itu, &lt;code&gt;R&lt;/code&gt; juga dapat ditambahkan paket-paket lain yang dapat meningkatkan fiturnya.&lt;/p&gt;
&lt;p&gt;Sebagai sebuah bahasa pemrograman yang banyak digunakan untuk keperluan analisa data, &lt;code&gt;R&lt;/code&gt; dapat dioperasikan pada berbagai sistem operasi pada komputer. Adapun sistem operasi yang didukung antara lain: &lt;code&gt;UNIX&lt;/code&gt;, &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, dan &lt;code&gt;MacOS&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;fitur-dan-karakteristik-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.2 Fitur dan Karakteristik R&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; memiliki karakteristik yang berbeda dengan bahasa pemrograman lain seperti &lt;code&gt;C++&lt;/code&gt;,&lt;code&gt;python&lt;/code&gt;, dll. &lt;code&gt;R&lt;/code&gt; memiliki aturan/sintaks yang berbeda dengan bahasa pemrograman yang lain yang membuatnya memiliki ciri khas tersendiri dibanding bahasa pemrograman yang lain.&lt;/p&gt;
&lt;p&gt;Beberapa ciri dan fitur pada &lt;code&gt;R&lt;/code&gt; antara lain:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Bahasa &lt;code&gt;R&lt;/code&gt; bersifat case sensitif&lt;/strong&gt;. maksudnya adalah dalam proses input &lt;code&gt;R&lt;/code&gt; huruf besar dan kecil sangat diperhatikan. Sebagai contoh kita ingin melihat apakah objek A dan B pada sintaks berikut:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;A &amp;lt;- &amp;quot;Andi&amp;quot;
B &amp;lt;- &amp;quot;andi&amp;quot;

# cek kedua objek A dan B
A == B&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Kesimpulan : Kedua objek berbeda&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Segala sesuatu yang ada pada program &lt;code&gt;R&lt;/code&gt; akan diangap sebagai objek&lt;/strong&gt;. konsep objek ini sama dengan bahasa pemrograma berbasis objek yang lain seperti &lt;code&gt;Java&lt;/code&gt;, &lt;code&gt;C++&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;, dll.Perbedaannya adalah bahasa &lt;code&gt;R&lt;/code&gt; relatif lebih sederhana dibandingkan bahasa pemrograman berbasis obejk yang lain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;interpreted language atau script&lt;/strong&gt;. Bahasa &lt;code&gt;R&lt;/code&gt; memungkinkan pengguna untuk melakukan kerja pada &lt;code&gt;R&lt;/code&gt; tanpa perlu kompilasi kode program menjadi bahasa mesin.&lt;/li&gt;
&lt;li&gt;Mendukung proses &lt;strong&gt;loop&lt;/strong&gt;, &lt;strong&gt;decision making&lt;/strong&gt;, dan menyediakan berbagai jenis &lt;strong&gt;operstor&lt;/strong&gt; (aritmatika, logika, dll).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mendukung export dan import berbagai format file&lt;/strong&gt;, seperti:TXT, CSV, XLS, dll.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mudah ditingkatkan melalui penambahan fungsi atau paket&lt;/strong&gt;. Penambahan paket dapat dilakukan secara online melalui &lt;a href=&#34;https://cran.r-project.org/&#34;&gt;CRAN&lt;/a&gt; atau melalui sumber seperti &lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Menyedikan berbagai fungsi untuk keperluan visualisasi data&lt;/strong&gt;. Visualisasi data pada &lt;code&gt;R&lt;/code&gt; dapat menggunakan paket bawaan atau paket lain seperti &lt;code&gt;ggplo2&lt;/code&gt;,&lt;code&gt;ggvis&lt;/code&gt;, dll.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;kelebihan-dan-kekurangan-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.3 Kelebihan dan Kekurangan R&lt;/h2&gt;
&lt;p&gt;Selain karena &lt;code&gt;R&lt;/code&gt; dapat digunakan secara gratis terdapat &lt;strong&gt;kelebihan&lt;/strong&gt; lain yang ditawarkan, antara lain:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Protability&lt;/strong&gt;. Penggunaan software dapat digunakan kapanpun tanpa terikat oleh masa berakhirnya lisensi.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multiplatform&lt;/strong&gt;. &lt;code&gt;R&lt;/code&gt; bersifat &lt;em&gt;Multiplatform Operating Systems&lt;/em&gt;, dimana &lt;em&gt;software&lt;/em&gt; &lt;code&gt;R&lt;/code&gt; lebih kompatibel dibanding &lt;em&gt;software&lt;/em&gt; statistika lainnya. Hal in berdampak pada kemudahan dalam penyesuaian jika pengguna harus berpindah sistem operasi karena &lt;code&gt;R&lt;/code&gt; baik pada sistem operasi seperti &lt;code&gt;windows&lt;/code&gt; akan sama pengoperasiannya dengan yang ada di &lt;code&gt;Linux&lt;/code&gt; (paket yang digunakan sama).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; dan &lt;strong&gt;Cutting-edge&lt;/strong&gt;. Berbagai metode statistik baik metode klasik maupun baru telah diprogram kedalam &lt;code&gt;R&lt;/code&gt;. Dengan demikian &lt;em&gt;software&lt;/em&gt; ini dapat digunakan untuk analisis statistika dengan pendekatan klasik dan pendekatan modern.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Programable&lt;/strong&gt;. Pengguna dapat memprogram metode baru atau mengembangakan modifikasi dari analisis statistika yang telah ada pada sistem &lt;code&gt;R&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Berbasis analisis matriks&lt;/strong&gt;. Bahasa &lt;code&gt;R&lt;/code&gt; sangat baik digunakan untuk &lt;em&gt;programming&lt;/em&gt; dengan basis matriks.&lt;/li&gt;
&lt;li&gt;Fasiltas grafik yang lengkap.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Adapun kekurangan dari &lt;code&gt;R&lt;/code&gt; antara lain:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Point and Click GUI&lt;/strong&gt;. Interaksi utama dengan &lt;code&gt;R&lt;/code&gt; bersifat &lt;em&gt;CLI&lt;/em&gt; (&lt;em&gt;Command Line Interface&lt;/em&gt;), walaupun saat ini telah dikembangkan paket yang memungkinkan kita berinteraksi dengan &lt;code&gt;R&lt;/code&gt; menggunakan &lt;em&gt;GUI&lt;/em&gt; (&lt;em&gt;Graphical User Interface&lt;/em&gt;) sederhana menggunakan paket &lt;code&gt;R-Commander&lt;/code&gt; yang memiliki fungsi yang terbatas. &lt;code&gt;R- Commander&lt;/code&gt; sendiri merupakan &lt;em&gt;GUI&lt;/em&gt; yang diciptakan dengan tujuan untuk keperluan pengajaran sehingga analisis statistik yang disediakan adalah yang klasik. Meskipun terbatas paket ini berguna jika kita membutuhkan analisis statistik sederhana dengan cara yang simpel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Missing statistical function&lt;/strong&gt;. Meskipun analisis statistika dalam &lt;code&gt;R&lt;/code&gt; sudah cukup lengkap, namun tidak semua metode statistika telah diimplementasikan ke dalam &lt;code&gt;R&lt;/code&gt;. Namun karena &lt;code&gt;R&lt;/code&gt; merupakan &lt;em&gt;lingua franca&lt;/em&gt; untuk keperluan komputasi statistika modern staan ini, dapat dikatakan ketersediaan fungsi tambahan dalam bentuk paket hanya masalah waktu saja.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;rstudio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.4 RStudio&lt;/h2&gt;
&lt;p&gt;Aplikasi &lt;code&gt;R&lt;/code&gt; pada dasarnya berbasis teks atau &lt;em&gt;command line&lt;/em&gt; sehingga pengguna harus mengetikkan perintah-perintah tertentu dan harus hapal perintah-perintahnya. Setidaknya jika kita ingin melakukan kegiatan analisa data menggunakan &lt;code&gt;R&lt;/code&gt; kita harus selalu siap dengan perintah-perintah yang hendak digunakan sehingga buku manual menjadi sesuatu yang wajib adasaat berkeja dengan &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Kondisi ini sering kali membingunkan bagi pengguna pemula maupun pengguna mahir yang sudah terbiasa dengan aplikasi statistik lain seperti SAS, SPSS, Minitab, dll. Alasan itulah yang menyebabkan pengembang &lt;code&gt;R&lt;/code&gt; membuat berbagai &lt;em&gt;frontend&lt;/em&gt; untuk &lt;code&gt;R&lt;/code&gt; yang berguna untuk memudahkan dalam pengoperasian &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RStudio&lt;/code&gt; merupakan salah satu bentuk &lt;em&gt;frontend&lt;/em&gt; &lt;code&gt;R&lt;/code&gt; yang cukup populer dan nyaman digunakan. Selain nyaman digunakan, &lt;code&gt;RStudio&lt;/code&gt; memungkinkan kita melakukan penulisan laporan menggunakan &lt;code&gt;Rmarkdown&lt;/code&gt; atau &lt;code&gt;RNotebook&lt;/code&gt; serta membuat berbagai bentuk project seperti shyni, dll. Pada &lt;code&gt;R&lt;/code&gt; studio juga memungkinkan kita mengatur &lt;em&gt;working directory&lt;/em&gt; tanpa perlu mengetikkan sintaks pada Commander, yang diperlukan hanya memilihnya di menu &lt;code&gt;RStudio&lt;/code&gt;. Selain itu, kita juga dapat meng-import file berisikan data tanpa perlu mengetikkan pada Commander dengan cara memilih pada menu &lt;code&gt;Environment&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;menginstall-r-dan-rstudio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.5 Menginstall R dan RStudio&lt;/h2&gt;
&lt;p&gt;Pada tutorial ini hanya akan dijelaskan bagaimana menginstal &lt;code&gt;R&lt;/code&gt; dan &lt;code&gt;RStudio&lt;/code&gt; pada sistem operasi &lt;code&gt;windows&lt;/code&gt;. Sebelum memulai menginstal sebaiknya pembaca mengunduh terlebih dahulu &lt;em&gt;installer&lt;/em&gt; &lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34;&gt;R&lt;/a&gt; dan &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;RStudio&lt;/a&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Jalankan proses pemasangan dengan meng-klik &lt;em&gt;installer&lt;/em&gt; aplikasi &lt;code&gt;R&lt;/code&gt; dan &lt;code&gt;RStudio&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ikuti langkah proses pemasangan aplikasi yang ditampilkan dengan klik &lt;code&gt;OK&lt;/code&gt; atau &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Apabila pemasangan telah dilakukan, jalankan aplikasi yang telah terpasang untuk menguji jika aplikasi telah berjalan dengan baik.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Jendela aplikasi yang telah terpasang ditampilkan pada Figure &lt;a href=&#34;#fig:jendela-R&#34;&gt;2&lt;/a&gt; dan Figure &lt;a href=&#34;#fig:jendela-RStudio&#34;&gt;3&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:jendela-R&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/jendela_r.png&#34; alt=&#34;Jendela R.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Jendela R.
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:jendela-RStudio&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/jendela_rstudio.png&#34; alt=&#34;Jendela RStudio.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Jendela RStudio.
&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Sebaiknya install &lt;code&gt;R&lt;/code&gt; terlebih dahulu sebelum &lt;code&gt;RStudio&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.6 Working Directory&lt;/h2&gt;
&lt;p&gt;Setiap pengguna akan bekerja pada tempat khusus yang disebut sebagai &lt;em&gt;working directory&lt;/em&gt;. &lt;em&gt;working directory&lt;/em&gt; merupakan sebuah folder dimana &lt;code&gt;R&lt;/code&gt; akan membaca dan menyimpan file kerja kita. Pada pengguna &lt;code&gt;windows&lt;/code&gt;, &lt;em&gt;working directory&lt;/em&gt; secara default pada saat pertama kali menginstall &lt;code&gt;R&lt;/code&gt; terletak pada folder &lt;code&gt;c:\\Document&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;mengubah-lokasi-working-directory&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1.6.1 Mengubah Lokasi Working Directory&lt;/h3&gt;
&lt;p&gt;Kita dapat mengubah lokasi &lt;em&gt;working directory&lt;/em&gt; berdasarkan lokasi yang kita inginkan, misalnya letak data yang akan kita olah tidak ada pada folder default atau kita ingin pekerjaan kita terkait &lt;code&gt;R&lt;/code&gt; dapat berlangsung pada satu folder khusus.&lt;/p&gt;
&lt;p&gt;Berikut adalah cara mengubah &lt;em&gt;working directory&lt;/em&gt; pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Buatlah folder pada drive (kita bisa membuat folder pada selain drive c) dan namai dengan nama yang kalian inginkan. Pada tutorial ini penulis menggunakan nama folder &lt;code&gt;R&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Jika pengguna menggunakan &lt;code&gt;RStudio&lt;/code&gt;, pada menu &lt;code&gt;RStudio&lt;/code&gt; pilih &lt;strong&gt;Session &amp;gt; Set Working Directory &amp;gt; Chooses Directory&lt;/strong&gt;. Proses tersebut ditampilkan pada Figure &lt;a href=&#34;#fig:working&#34;&gt;4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pilih folder yang telah dibuat pada step 1 sebagai *working directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Data atau file yang hendak dibaca selama proses kerja pada &lt;code&gt;R&lt;/code&gt; harus selalu diletakkan pada working directory. Jika tidak maka data atau file tidak akan terbaca.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Untuk mengecek apakah proses perubahan telah terjadi, kita dapat mengeceknya dengan menjalankan perintah berikut untuk melihat lokasi &lt;em&gt;working directory&lt;/em&gt; kita yang baru.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getwd()&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:working&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/working.png&#34; alt=&#34;Mengubah working directory.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Mengubah working directory.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Selain itu kita dapat mengubah &lt;em&gt;working directory&lt;/em&gt; menggunakan perintah berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah working directori pada folder R
setwd(&amp;quot;/Documents/R&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Pada proses pengisian lokasi folder pastikan pemisah pada lokasi folder menggunakan tanda “/” bukan “&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;mengubah-lokasi-working-directory-default&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1.6.2 Mengubah Lokasi Working Directory Default&lt;/h3&gt;
&lt;p&gt;Pada proses yang telah penulis jelaskan sebelumnya. Proses perubahan &lt;em&gt;working directory&lt;/em&gt; hanya berlaku pada saat pekerjaan tersebut dilakukan. Setelah pekerjaan selesai dan kita menjalankan kembali &lt;code&gt;R&lt;/code&gt; maka &lt;em&gt;working directory&lt;/em&gt; akan kembali secara default pada working directory lama.&lt;/p&gt;
&lt;p&gt;Untuk membuat lokasi default &lt;em&gt;working directory&lt;/em&gt; pindah, kita dapat melakukannya dengan memilih pada menu: &lt;strong&gt;Tools &amp;gt; Global options &amp;gt; pada “General” klik pada “Browse” dan pilih lokasi working directory yang diinginkan&lt;/strong&gt;. Proses tersebut ditampilkan pada Figure &lt;a href=&#34;#fig:default&#34;&gt;5&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:default&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/default.png&#34; alt=&#34;Merubah working directory melalui Global options.&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 5: Merubah working directory melalui Global options.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;fasilitas-help&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.7 Fasilitas Help&lt;/h2&gt;
&lt;p&gt;Agar dapat menggunakan &lt;code&gt;R&lt;/code&gt; dengan secara lebih baik, pengetahuan untuk mengakses fasilitas &lt;em&gt;help&lt;/em&gt; in cukup penting untuk disampaikan. Adapun cara yang dapat digunakan adalah sebagai berikut.&lt;/p&gt;
&lt;div id=&#34;mencari-help-dari-suatu-perintah-tertentu&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1.7.1 Mencari Help dari Suatu Perintah Tertentu&lt;/h3&gt;
&lt;p&gt;Untuk memperoleh bantuan terkait suatu perintah tertentu kita dapat menggunakan fungsi &lt;code&gt;help()&lt;/code&gt;. Secara umum format yang digunakan adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help(nama_perintah)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;atau dapat juga menggunakan tanda tanya (?) pada awal &lt;code&gt;nama_perintah&lt;/code&gt; seperti berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;?nama_perintah&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Misalkan kita kebingungan terkait bagaimana cara menuliskan perintah untuk menghitung rata-rata suatu vektor. Kita dapat mengetikkan perintah berikut untuk mengakses fasilitas &lt;em&gt;help&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help(mean)

#atau
?mean&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Perintah tersebut akan memunculkan hasil berupa dokumentasi yang ditampilkan pada Figure &lt;a href=&#34;#fig:meandoc&#34;&gt;6&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:meandoc&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/meandoc.png&#34; alt=&#34;Jendela help dokumentasi fungsi mean().&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 6: Jendela help dokumentasi fungsi mean().
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Keterangan pada jendela pada Figure &lt;a href=&#34;#fig:meandoc&#34;&gt;6&lt;/a&gt; adalah sebagia berikut:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Pada bagian jendela kiri atas jendela &lt;em&gt;help&lt;/em&gt;, diberikan keterangan nama dari perintah yang sedang ditampilkan.&lt;/li&gt;
&lt;li&gt;Selanjutnya, pada bagian atas dokumen, ditampilkan infomasi terkait nama perintah, dan nama &lt;em&gt;library&lt;/em&gt; yang memuat perintah tersebut. Pada gambar diatas informasi terkait perintah dan nama &lt;em&gt;library&lt;/em&gt; ditunjukkan pada teks &lt;code&gt;mean {base}&lt;/code&gt; yang menunjukkan perintah &lt;code&gt;mean()&lt;/code&gt; pada paket (&lt;em&gt;library&lt;/em&gt;) &lt;em&gt;base&lt;/em&gt; (paket bawaan &lt;code&gt;R&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Setiap jendela &lt;em&gt;help&lt;/em&gt; dari suatu perintah tertentu selanjutnya akan memuat bagian-bagian berikut:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Description&lt;/em&gt; : deskripsi singkat tentang perintah.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Usage&lt;/em&gt; : menampilkan sintaks perintah untuk penggunaan perintah tersebut.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Arguments&lt;/em&gt; : keterangan mengenai &lt;em&gt;argument/input&lt;/em&gt;yang diperlukan pada perintah tersebut.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Details&lt;/em&gt; : keterangan lebih lengkap lengkap tentang perintah tersebut.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Value&lt;/em&gt; : keterangan tentang &lt;em&gt;output&lt;/em&gt; suatu perintah dapat diperoleh pada bagian ini.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Author(s)&lt;/em&gt; : memberikan keterangan tentang &lt;em&gt;Author&lt;/em&gt; dari perintah tersebut.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;References&lt;/em&gt; : seringkali referensi yang dapat digunakan untuk memperoleh keterangan lebih lanjut terhadap suatu perintah ditampilkan pada bagian ini.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;See also&lt;/em&gt;: bagian ini berisikan daftar perintah/fungsi yang berhubungan erat dengan perintah tersebut.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Example&lt;/em&gt; : berisikan contoh-contoh penggunaan perintah tersebut.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kita juga dapat melihat contoh penggunaan dari perintah tersebut. Untuk melakukannya kita dapat menggunakan fungsi &lt;code&gt;example()&lt;/code&gt;. Fungsi tersebut akan menampilkan contoh kode penerapan dari fungsi yang kita inginkan. Secara sederhana fungsi tersebut dapat dituliskan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example(nama_perintah)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengetahui contoh kode fungsi &lt;code&gt;mean()&lt;/code&gt;, ketikkan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example(mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## mean&amp;gt; x &amp;lt;- c(0:10, 50)
## 
## mean&amp;gt; xm &amp;lt;- mean(x)
## 
## mean&amp;gt; c(xm, mean(x, trim = 0.10))
## [1] 8.75 5.50&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;kita juga dapat mencoba kode yang dihasilkan pada console &lt;code&gt;R&lt;/code&gt;. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menghitung rata-rata bilangan 1 sampai 10 dan 50
# membuat vektor
x &amp;lt;- c(0:10, 50)

# Print
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  0  1  2  3  4  5  6  7  8  9 10 50&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mean
mean(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8.75&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pembaca dapat mencoba melakukanya sendiri dengan mengganti nilai yang telah ada serta mencoba contoh kode yang lain.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;general-help&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1.7.2 General Help&lt;/h3&gt;
&lt;p&gt;Kita juga dapat membaca beberapa dokumen manual yang ada pada &lt;code&gt;R&lt;/code&gt;. Untuk melakukannya jalankan perintah berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help.start()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Output yang dihasilkan berupa link pada sejumlah dokumen yang dapat kita klik. Tampilan halaman yang dihasilkan disajikan pada Figure &lt;a href=&#34;#fig:generalhelp&#34;&gt;7&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:generalhelp&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/generalhelp.png&#34; alt=&#34;Jendela general help dokumentasi fungsi mean().&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 7: Jendela general help dokumentasi fungsi mean().
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;fasilitas-help-lainnya&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1.7.3 Fasilitas Help Lainnya&lt;/h3&gt;
&lt;p&gt;Selain yang telah penulis sebutkan sebelumnya. Kita juga dapat memanfaatkan fasilitas &lt;em&gt;help&lt;/em&gt; lainnya melalui fungsi &lt;code&gt;apropos()&lt;/code&gt; dan &lt;code&gt;help.search()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apropos ()&lt;/code&gt;: mengembalikan daftar objek, berisi pola yang pembaca cari, dengan pencocokan sebagian. Ini berguna ketika pembaca tidak ingat persis nama fungsi yang akan digunakan. Berikut adalah contoh ketika penulis ingin mengetahui fungsi yang digunakan untuk menghitung median.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;apropos(&amp;quot;med&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;elNamed&amp;quot;        &amp;quot;elNamed&amp;lt;-&amp;quot;      &amp;quot;median&amp;quot;         &amp;quot;median.default&amp;quot;
## [5] &amp;quot;medpolish&amp;quot;      &amp;quot;runmed&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;List&lt;/em&gt; yang dihasilkan berupa fungsi-fungsi yang memiliki elemen kata “med”. Berdasarkan pencaria tersebut penulis dapat mencoba menggunakan fungsi “median” untuk menghitung median.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;help.search ()&lt;/code&gt; (sebagai alternatif ??): mencari dokumentasi yang cocok dengan karakter yang diberikan dengan cara yang berbeda. Ini mengembalikan daftar fungsi yang mengandung istilah yang pembaca cari dengan deskripsi singkat dari fungsi.&lt;/p&gt;
&lt;p&gt;Berikut adalah contoh penerapan dari fungsi tersebut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help.search(&amp;quot;mean&amp;quot;)

# atau
??mean&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*Output yang dihasilkan akan tampak seperti pada Figure &lt;a href=&#34;#fig:helpsearch&#34;&gt;8&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:helpsearch&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/helpsearch.png&#34; alt=&#34;Jendela help search dokumentasi fungsi mean().&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 8: Jendela help search dokumentasi fungsi mean().
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Referensi&lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Primartha, R. 2018. &lt;strong&gt;Belajar Machine Learning Teori dan Praktik&lt;/strong&gt;. Penerbit Informatika : Bandung&lt;/li&gt;
&lt;li&gt;Rosadi,D. 2016. &lt;strong&gt;Analisis Statistika dengan R&lt;/strong&gt;. Gadjah Mada University Press: Yogyakarta&lt;/li&gt;
&lt;li&gt;STHDA. Running RStudio and Setting Up Your Working Directory - Easy R Programming .&lt;a href=&#34;http://www.sthda.com/english/wiki/running-rstudio-and-setting-up-your-working-directory-easy-r-programming#set-your-working-directory&#34; class=&#34;uri&#34;&gt;http://www.sthda.com/english/wiki/running-rstudio-and-setting-up-your-working-directory-easy-r-programming#set-your-working-directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;STDHA. &lt;strong&gt;Getting Help With Functions In R Programming&lt;/strong&gt;. &lt;a href=&#34;http://www.sthda.com/english/wiki/getting-help-with-functions-in-r-programming&#34; class=&#34;uri&#34;&gt;http://www.sthda.com/english/wiki/getting-help-with-functions-in-r-programming&lt;/a&gt; .&lt;/li&gt;
&lt;li&gt;Venables, W.N. Smith D.M. and R Core Team. 2018. &lt;strong&gt;An Introduction to R&lt;/strong&gt;. R Manuals.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>2. Sintaks Bahasa R</title>
      <link>/tutorial/02_sintaks-bahasa-r/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0700</pubDate>
      
      <guid>/tutorial/02_sintaks-bahasa-r/</guid>
      <description>


&lt;blockquote&gt;
&lt;h2 id=&#34;daftar-isi&#34;&gt;Daftar Isi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#2-1-operator-aritmatika&#34;&gt;Operator Aritmatika&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-2-fungsi-aritmetik&#34;&gt;Fungsi Aritmetik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-3-operator-relasi&#34;&gt;Operator Relasi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-4-operator-logika&#34;&gt;Operator Logika&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-5-memasukkan-nilai-kedalam-variabel&#34;&gt;Memasukkan Nilai Kedalam Variabel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-6-tipe-data&#34;&gt;Tipe Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-7-vektor&#34;&gt;Vektor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-8-matriks&#34;&gt;Matriks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-9-faktor&#34;&gt;Faktor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-10-data-frames&#34;&gt;Data Frames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-11-list&#34;&gt;List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-12-loop&#34;&gt;Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-13-decision-making&#34;&gt;Decision Making&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-14-fungsi&#34;&gt;Fungsi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;operator-aritmatika&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.1 Operator Aritmatika&lt;/h2&gt;
&lt;p&gt;Proses perhitungan akan ditangani oleh fungsi khusus. &lt;code&gt;R&lt;/code&gt; akan memahami urutannya secara benar. Kecuali kita secara eksplisit menetapkan yang lain. Sebagai contoh jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;2+4*2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bandingkan dengan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(2+4)*2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 12&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; dapat digunakan sebagai kalkulator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berdasarkan kedua hasil tersebut dapat disimpulkan bahwa ketika kita tidak menetapkan urutan perhitungan menggunakan tanda kurung, &lt;code&gt;R&lt;/code&gt; akan secara otomatis akan menghitung terlebih dahulu perkalian atau pembangian.&lt;/p&gt;
&lt;p&gt;Operator aritmatika yang disediakan &lt;code&gt;R&lt;/code&gt; adalah sebagai berikut:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 1&lt;/strong&gt; Operator Aritmatika &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;15%&#34; /&gt;
&lt;col width=&#34;84%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Simbol&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Keterangan&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Addition&lt;/em&gt;, untuk operasi penjumlahan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Substraction&lt;/em&gt;, untuk operasi pengurangan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Multiplication&lt;/em&gt;, untuk operasi pembagian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Division&lt;/em&gt;, untuk operasi pembagian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Eksponentiation&lt;/em&gt;, untuk operasi pemangkatan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;%%&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Modulus&lt;/em&gt;, Untuk mencari sisa pembagian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;%/%&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Integer&lt;/em&gt;, Untuk mencari bilangan bulat hasil pembagian saja dan tanpa sisa pembagian&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Untuk lebih memahaminya berikut contoh sintaks penerapan operator tersebut.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Addition
5+3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Substraction
5-3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Multiplication
5*3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 15&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Division
5/3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1.666667&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Eksponetiation
5^3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 125&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Modulus
5%%3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Integer
5%/%3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: &lt;/em&gt; Pada &lt;code&gt;R&lt;/code&gt; tanda &lt;code&gt;#&lt;/code&gt; berfungsi menambahkan keterangan untuk menjelaskan sebuah sintaks pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;fungsi-aritmetik&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2 Fungsi Aritmetik&lt;/h2&gt;
&lt;p&gt;Selain fungsi operator aritmetik, pada &lt;code&gt;R&lt;/code&gt; juga telah tersedia fungsi aritmetik yang lain seperti logaritmik, ekponensial, trigonometri, dll.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Logaritma dan eksponensial&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Untuk contoh fungsi logaritmik dan eksponensial jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;log2(8) # logaritma basis 2 untuk 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;log10(8) # logaritma basis 10 untuk 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.90309&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp(8) # eksponensial 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2980.958&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Fungsi trigonometri&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;fungsi trigonometri yang ditampilkan seperti sin,cos, tan, dll.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cos(x) # cos x
sin(x) # Sin x
tan(x) # Tan x
acos(x) # arc-cos x
asin(x) # arc-sin x
atan(x) #arc-tan x&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; x dalam fungsi trigonometri memiliki satuan radian&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah salah satu contoh penggunaannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cos(pi)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] -1&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Fungsi matematik lainnya&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Fungsi lainnya yang dapat digunakan adalah fungsi absolut, akar kuadrat, dll. Berikut adalah contoh sintaks penggunaan fungsi absolut dan akar kuadrat.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;abs(-2) # nilai absolut -2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sqrt(4) # akar kuadrat 4&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;operator-relasi&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3 Operator Relasi&lt;/h2&gt;
&lt;p&gt;Operator relasi digunakan untuk membandingkan satu objek dengan objek lainnya. Operator yang disediakan &lt;code&gt;R&lt;/code&gt; disajikan pada Table 2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 2&lt;/strong&gt; Operator Relasi &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Simbol&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Keterangan&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;“&amp;gt;”&lt;/td&gt;
&lt;td&gt;Lebih besar dari&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;“&amp;lt;”&lt;/td&gt;
&lt;td&gt;Lebih Kecil dari&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;“==”&lt;/td&gt;
&lt;td&gt;Sama dengan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;“&amp;gt;=”&lt;/td&gt;
&lt;td&gt;Lebih besar sama dengan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;“&amp;lt;=”&lt;/td&gt;
&lt;td&gt;Lebih kecil sama dengan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;“!=”&lt;/td&gt;
&lt;td&gt;Tidak sama dengan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Berikut adalah penerapan operator pada tabel tersebut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 34
y &amp;lt;- 35

# Operator &amp;gt;
x &amp;gt; y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator &amp;lt;
x &amp;lt; y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# operator ==
x == y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator &amp;gt;=
x &amp;gt;= y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator &amp;lt;=
x &amp;lt;= y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator !=
x != y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;operator-logika&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.4 Operator Logika&lt;/h2&gt;
&lt;p&gt;Operator logika hanya berlaku pada vektor dengan tipe logical, numeric, atau complex. Semua angka bernilai 1 akan dianggap bernilai logika &lt;code&gt;TRUE&lt;/code&gt;. Operator logika yang disediakan &lt;code&gt;R&lt;/code&gt; dapat dilihat pada Table 3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 3&lt;/strong&gt; Operator logika &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Simbol&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Keterangan&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;Operator logika AND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;Opeartor logika NOT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;Operator logika AND element wise&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Operator logika OR element wise&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Penerapannya terdapat pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;v &amp;lt;- c(TRUE,TRUE, FALSE)
t &amp;lt;- c(FALSE,FALSE,FALSE)

# Operator &amp;amp;&amp;amp;
print(v&amp;amp;&amp;amp;t)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator ||
print(v||t)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator !
print(!v)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE  TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# operator &amp;amp;
print(v&amp;amp;t)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operator |
print(v|t)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE  TRUE FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;operator &amp;amp; dan | akan mengecek logika tiap elemen pada vektor secara berpesangan (sesuai urutan dari kiri ke kanan).&lt;/p&gt;
&lt;p&gt;Operator %% dan || hanya mengecek dari kiri ke kanan pada observasi pertama. Misal saat menggunakan &amp;amp;&amp;amp; jika observasi pertama TRUE maka observasi pertama pada vektor lainnya akan dicek, namun jika observasi pertama FALSE maka proses akan segera dihentikan dan menghasilkan FALSE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;memasukkan-nilai-kedalam-variabel&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.5 Memasukkan Nilai Kedalam Variabel&lt;/h2&gt;
&lt;p&gt;Variabel pada &lt;code&gt;R&lt;/code&gt; dapat digunakan untuk menyimpan nilai. Sebagai contoh jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Harga sebuah lemon adalah 500 rupiah
lemon &amp;lt;- 500

# Atau
500 -&amp;gt; lemon

# dapat juga menggunakan tanda &amp;quot;=&amp;quot;
lemon = 500&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;R&lt;/code&gt; memungkinkan penggunaan &amp;lt;-,-&amp;gt;, atau = sebagai perintah pengisi nilai variabel&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;R&lt;/code&gt; bersifat &lt;em&gt;case-sensitive&lt;/em&gt;. Maksudnya adalah variabel Lemon tidak sama dengan lemon (Besar kecil huruf berpengaruh)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Untuk mengetahui nilai dari objek &lt;code&gt;lemon&lt;/code&gt; kita dapat menggunakan fungsi &lt;code&gt;print()&lt;/code&gt; atau mengetikkan nama objeknya secara langsung.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menggunakan fungsi print()
print(lemon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 500&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Atau
lemon&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 500&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; akan menyimpan variabel &lt;code&gt;lemon&lt;/code&gt; sebagai objek pada memori. Sehingga kita dapat melakukan operasi terhadap objek tersebut seperti mengalikannya atau menjumlahkannya dengan bilangan lain. Sebagai contoh jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Operasi perkalian terhadap objek lemon
5*lemon&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2500&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita dapat juga mengubah nilai dari objek &lt;code&gt;lemon&lt;/code&gt; dengan cara menginput nilai baru terhadap objek yang sama. &lt;code&gt;R&lt;/code&gt; secara otomatis akan menggatikan nilai sebelumnya. Untuk lebih memahaminya jalankan sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lemon &amp;lt;- 1000

# Print lemon
print(lemon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk lebih memahaminya berikut adalah sintaks untuk menghitung volume suatu objek.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Dimensi objek
panjang &amp;lt;- 10
lebar &amp;lt;- 5
tinggi &amp;lt;- 5

# Menghitung volume
volume &amp;lt;- panjang*lebar*tinggi

# Print objek volume
print(volume)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 250&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengetahui objek apa saja yang telah kita buat sepanjang artikel ini kita dapang menggunakan fungsi &lt;code&gt;ls()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ls()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;lebar&amp;quot;   &amp;quot;lemon&amp;quot;   &amp;quot;panjang&amp;quot; &amp;quot;t&amp;quot;       &amp;quot;tinggi&amp;quot;  &amp;quot;v&amp;quot;       &amp;quot;volume&amp;quot; 
## [8] &amp;quot;x&amp;quot;       &amp;quot;y&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Kumpulan objek yang telah tersimpan dalam memori disebut sebagai &lt;strong&gt;workspace&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Untuk menghapus objek pada memori kita dapat menggunakan fungsi &lt;code&gt;rm()&lt;/code&gt;. Pada sintaks berikut penulis hendak menghapus objek &lt;code&gt;lemon&lt;/code&gt; dan &lt;code&gt;volume&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menghapus objek lemon dan volume
rm(lemon, volume)

# Tampilkan kembali objek yang tersisa
ls()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;lebar&amp;quot;   &amp;quot;panjang&amp;quot; &amp;quot;t&amp;quot;       &amp;quot;tinggi&amp;quot;  &amp;quot;v&amp;quot;       &amp;quot;x&amp;quot;       &amp;quot;y&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Setiap variabel atau objek yang dibuat akan menempati sejumlah memori pada komputer sehingga jika kita bekerja dengan jumlah data yang banyak pastikan kita menghapus seluruh objek pada memori sebelum memulai kerja.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;tipe-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.6 Tipe Data&lt;/h2&gt;
&lt;p&gt;Data pada &lt;code&gt;R&lt;/code&gt; dapat dikelompokan berdasarkan beberapa tipe. Tipe data pada &lt;code&gt;R&lt;/code&gt; disajikan pada Table 4.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 4&lt;/strong&gt; Tipe Data &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Tipe Data&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Contoh&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Keterangan&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Logical&lt;/td&gt;
&lt;td&gt;TRUE, FALSE&lt;/td&gt;
&lt;td&gt;Nilai Boolean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Numeric&lt;/td&gt;
&lt;td&gt;12.3, 5, 999&lt;/td&gt;
&lt;td&gt;Segala jenis angka&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;td&gt;23L, 97L, 3L&lt;/td&gt;
&lt;td&gt;Bilangan integer (bilangan bulat)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Complex&lt;/td&gt;
&lt;td&gt;2i, 3i, 9i&lt;/td&gt;
&lt;td&gt;Bilangan kompleks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Character&lt;/td&gt;
&lt;td&gt;‘a’, “b”, “123”&lt;/td&gt;
&lt;td&gt;Karakter dan string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Raw&lt;/td&gt;
&lt;td&gt;Identik dengan “hello”&lt;/td&gt;
&lt;td&gt;Segala jenis data yang disimpan sebagai raw bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Sintaks berikut adalah contoh dari tipe data pada &lt;code&gt;R&lt;/code&gt;. Untuk mengetahui tipa data suatu objek kita dapat menggunakan perintah &lt;code&gt;class()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Logical
apel &amp;lt;- TRUE
class(apel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;logical&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Numeric
x &amp;lt;- 2.3
class(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Integer
y &amp;lt;- 2L
class(y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Compleks
z &amp;lt;- 5+2i
class(z)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;complex&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# string
w &amp;lt;- &amp;quot;saya&amp;quot;
class(w)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Raw
xy &amp;lt;- charToRaw(&amp;quot;hello world&amp;quot;)
class(xy)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;raw&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Keenam jenis data tersebut disebut sebagai tipe data atomik. Hal ini disebabkan karena hanya dapat menangani satu tipe data saja. Misalnya hanya numeric atau hanya integer.&lt;/p&gt;
&lt;p&gt;Selain menggunakan fungsi &lt;code&gt;class()&lt;/code&gt;, kita dapat pula menggunakan fungsi &lt;code&gt;is_numeric()&lt;/code&gt;, &lt;code&gt;is.character()&lt;/code&gt;, &lt;code&gt;is.logical()&lt;/code&gt;, dan sebagainya berdasarkan jenis data apa yang ingin kita cek. Berbeda dengan fungsi &lt;code&gt;class()&lt;/code&gt;, ouput yang dihasilkan pada fungsi seperti &lt;code&gt;is_numeric()&lt;/code&gt; adalah nilai Boolean sehingga fungsi ini hanya digunakan untuk mengecek apakah jenis data pada objek sama seperti yang kita pikirkan. Sebagai contoh disajikan pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- 25

# Cek apakah objek berisi data numerik
is.numeric(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Cek apakah objek adalah karakter
is.character(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat mengubah jenis data menjadi jenis lainnya seperti integer menjadi numerik atau sebaliknya. Fungsi yang digunakan adalah &lt;code&gt;as.numeric()&lt;/code&gt; jika ingin mengubah suatu jenis data menjadi numerik. Fungsi lainnya juga dapat digunakan sesuai dengan kita ingin mengubah jenis data objek menjadi jenis data lainnya.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Integer
apel &amp;lt;- 2L

# Ubah menjadi numerik
as.numeric(apel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Cek
is.numeric(apel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Logical
nangka &amp;lt;- TRUE

# Ubah logical menjadi numeric
as.numeric(nangka)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Karakter
minum &amp;lt;- &amp;quot;minum&amp;quot;

# ubah karakter menjadi numerik
as.numeric(minum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: NAs introduced by coercion&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Konversi karakter menjadi numerik akan menghasilkan output NA (&lt;em&gt;not available&lt;/em&gt;). &lt;code&gt;R&lt;/code&gt; tidak mengetahui bagaimana cara merubah karakter menjadi bentuk numerik.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berdasarkan Tabel 2, vektor karakter dapat dibuat menggunakan tanda kurung baik &lt;em&gt;double quote&lt;/em&gt; (“”) maupun &lt;em&gt;single quote&lt;/em&gt; (’’).Jika pada teks yang kita tuliskan mengandung &lt;em&gt;quote&lt;/em&gt; maka kita harus menghentikannya menggunakan tanda (  ). Sbegai contoh kita ingin menuliskan `&lt;strong&gt;My friend’s name is “Adi”&lt;/strong&gt;, pada sintaks akan dituliskan:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;#39;My friend\`s name is &amp;quot;Adi&amp;quot;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;My friend`s name is \&amp;quot;Adi\&amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Atau

&amp;quot;My friend&amp;#39;s name \&amp;quot;Adi\&amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;My friend&amp;#39;s name \&amp;quot;Adi\&amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;vektor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.7 Vektor&lt;/h2&gt;
&lt;p&gt;Vektor merupakan kombinasi berbagai nilai (numerik, karakter, logical, dan sebagainya berdasarkan jenis input data) pada objek yang sma. Pada contoh kasus berikut, pembaca akan memiliki sesuai jenis data input yaitu&lt;strong&gt;vektor numerik&lt;/strong&gt;, &lt;strong&gt;vector karakter&lt;/strong&gt;, &lt;strong&gt;vektor logical&lt;/strong&gt;, dll.&lt;/p&gt;
&lt;div id=&#34;membuat-vektor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.7.1 Membuat vektor&lt;/h3&gt;
&lt;p&gt;Vektor dibuat dengan menggunakan fungsi &lt;code&gt;c()&lt;/code&gt;(concatenate) seperti yang disajikan pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor numerik
x &amp;lt;- c(3,3.5,4,7)
x # print vektor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3.0 3.5 4.0 7.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor karakter
y &amp;lt;- c(&amp;quot;Apel&amp;quot;, &amp;quot;Jeruk&amp;quot;, &amp;quot;Rambutan&amp;quot;, &amp;quot;Salak&amp;quot;)
y # print vektor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Apel&amp;quot;     &amp;quot;Jeruk&amp;quot;    &amp;quot;Rambutan&amp;quot; &amp;quot;Salak&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor logical
t &amp;lt;- c(&amp;quot;TRUE&amp;quot;, &amp;quot;FALSE&amp;quot;, &amp;quot;TRUE&amp;quot;)
t # print vektor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;TRUE&amp;quot;  &amp;quot;FALSE&amp;quot; &amp;quot;TRUE&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;selain menginput nilai pada vektor, kita juga dapat memberi nama nilai setiap vektor menggunakan fungsi &lt;code&gt;names()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membuat vektor jumlah buah yang dibeli
Jumlah &amp;lt;- c(5,5,6,7)
names(Jumlah) &amp;lt;- c(&amp;quot;Apel&amp;quot;, &amp;quot;Jeruk&amp;quot;, &amp;quot;Rambutan&amp;quot;, &amp;quot;Salak&amp;quot;)

# Atau
Jumlah &amp;lt;- c(Apel=5, Jeruk=5, Rambutan=6, Salak=7)

# Print
Jumlah&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel    Jeruk Rambutan    Salak 
##        5        5        6        7&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Vektor hanya dapat memuat satu buah jenis data. Vektor hanya dapat mengandung jenis data numerik saja, karakter saja, dll.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Untuk menentukan panjang sebuah vektor kita dapat menggunakan fungsi &lt;code&gt;lenght()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(Jumlah)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;missing-values&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.7.2 Missing Values&lt;/h3&gt;
&lt;p&gt;Seringkali nilai pada vektor kita tidak lengkap atau terdapat nilai yang hilang (&lt;em&gt;missing value&lt;/em&gt;) pada vektor. &lt;em&gt;Missing value&lt;/em&gt; pada &lt;code&gt;R&lt;/code&gt; dilambangkan oleh &lt;code&gt;NA&lt;/code&gt;(&lt;em&gt;not available&lt;/em&gt;). Berikut adalah contoh vektor dengan &lt;em&gt;missing value&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Jumlah &amp;lt;- c(Apel=5, Jeruk=NA, Rambutan=6, Salak=7)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengecek apakah dalam objek terdapat &lt;em&gt;missing value&lt;/em&gt; dapat menggunakan fungsi &lt;code&gt;is.na()&lt;/code&gt;. ouput dari fungsi tersebut adalah nilai Boolean. Jika terdapat &lt;em&gt;Missing value&lt;/em&gt;, maka output yang dihasilkan akan memberikan nilai &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;is.na(Jumlah)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel    Jeruk Rambutan    Salak 
##    FALSE     TRUE    FALSE    FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Selain NA terdapat NaN (&lt;em&gt;not a number&lt;/em&gt;) sebagai &lt;em&gt;missing value8&lt;/em&gt;. Nilai tersebut muncul ketika fungsi matematika yang digunakan pada proses perhitungan tidak bekerja sebagaimana mestinya. Contoh: 0/0 = NaN&lt;/p&gt;
&lt;p&gt;&lt;code&gt;is.na()&lt;/code&gt; juga akan menghasilkan nilai &lt;code&gt;TRUE&lt;/code&gt; pada NaN. Untuk membedakannya dengan NA dapat digunakan fungsi &lt;code&gt;is.nan()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;subset-pada-vektor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.7.3 Subset Pada Vektor&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Subseting vector&lt;/em&gt; terdiri atas tiga jenis, yaitu: &lt;em&gt;positive indexing&lt;/em&gt;, &lt;em&gt;Negative Indexing&lt;/em&gt;, dan .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Positive indexing&lt;/strong&gt;: memilih elemen vektor berdasarkan posisinya (indeks) dalam kurung siku.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset vektor pada urutan kedua
Jumlah[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Jeruk 
##    NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset vektor pada urutan 2 dan 4
Jumlah[c(2, 4)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Jeruk Salak 
##    NA     7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selain melalui urutan (indeks), kita juga dapat melakukan subset berdasarkan nama elemen vektornya.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Jumlah[&amp;quot;Jeruk&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Jeruk 
##    NA&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; Indeks pada &lt;code&gt;R&lt;/code&gt; dimulai dari 1. Sehingga kolom atau elemen pertama vektor dimulai dari [1]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Negative indexing&lt;/strong&gt;: mengecualikan (&lt;em&gt;exclude&lt;/em&gt;) elemen vektor.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengecualikan elemen vektor 2 dan 4
Jumlah[-c(2,4)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel Rambutan 
##        5        6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengecualikan elemen vektor 1 sampai 3
Jumlah[-c(1:3)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Salak 
##     7&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Subset berdasarkan vektor logical&lt;/strong&gt;: Hanya, elemen-elemen yang nilai yang bersesuaian dalam vektor pemilihan bernilai TRUE, akan disimpan dalam subset.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; panjang vektor yang digunakan untuk subset harus sama.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Jumlah &amp;lt;- c(Apel=5, Jeruk=NA, Rambutan=6, Salak=7)

# selecting vector
merah &amp;lt;- c(TRUE, FALSE, TRUE, FALSE)

# Subset
Jumlah[merah==TRUE]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel Rambutan 
##        5        6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset untuk elemen vektor bukan missing value
Jumlah[!is.na(Jumlah)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel Rambutan    Salak 
##        5        6        7&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;perhitungan-menggunakan-vektor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.7.4 Perhitungan Menggunakan Vektor&lt;/h3&gt;
&lt;p&gt;Jika Anda melakukan operasi dengan vektor, operasi akan diterapkan ke setiap elemen vektor. Contoh disediakan pada sintaks di bawah ini:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pendapatan &amp;lt;- c(2000, 1800, 2500, 3000)
names(pendapatan) &amp;lt;- c(&amp;quot;Andi&amp;quot;, &amp;quot;Joni&amp;quot;, &amp;quot;Lina&amp;quot;, &amp;quot;Rani&amp;quot;)
pendapatan&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Andi Joni Lina Rani 
## 2000 1800 2500 3000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Kalikan pendapatan dengan 3
pendapatan*3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Andi Joni Lina Rani 
## 6000 5400 7500 9000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seperti yang dapat dilihat, &lt;code&gt;R&lt;/code&gt; mengalikan setiap elemen dengan bilangan pengali.&lt;/p&gt;
&lt;p&gt;Kita juga dapat mengalikan vektor dengan vektor lainnya.Contohnya disajikan pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor dengan panjang sama dengan dengan vektor pendapatan
coefs &amp;lt;- c(2, 1.5, 1, 3)

# Mengalikan pendapatan dengan vektor coefs
pendapatan*coefs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Andi Joni Lina Rani 
## 4000 2700 2500 9000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berdasarkan sintaks tersebut dapat terlihat bahwa operasi matematik terhadap masing-masing vektor dapat berlangsung jika panjang vektornya sama.&lt;/p&gt;
&lt;p&gt;Berikut adalah fungsi lain yang dapat digunakan pada operasi matematika vektor.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(x) # memperoleh nilai maksimum x
min(x) # memperoleh nilai minimum x
range(x) # memperoleh range vektor x
length(x) # memperoleh jumlah elemen vektor x
sum(x) # memperoleh total penjumlahan elemen vektor x
prod(x) # memeperoleh produk elemen vektor x
mean(x) # memperoleh nilai rata-rata seluruh elemen vektor x
sd(x) # standar deviasi vektor x
var(x) # varian vektor x
sort(x) # mengurutkan elemen vektor x dari yang terbesar&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Contoh penggunaan fungsi tersebut disajikan beberapa pada sintaks berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menghitung range pendapatan
range(pendapatan)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1800 3000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# menghitung rata-rata dan standar deviasi pendapatan
mean(pendapatan)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2325&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sd(pendapatan)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 537.7422&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;matriks&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.8 Matriks&lt;/h2&gt;
&lt;p&gt;Matriks seperti Excel sheet yang berisi banyak baris dan kolom (kumpulan bebrapa vektor). Matriks digunakan untuk menggabungkan vektor dengan tipe yang sama, yang bisa berupa numerik, karakter, atau logis. Matriks digunakan untuk menyimpan tabel data dalam R. Baris-baris matriks pada umumnya adalah individu / pengamatan dan kolom adalah variabel.&lt;/p&gt;
&lt;div id=&#34;membuat-matriks&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.8.1 Membuat matriks&lt;/h3&gt;
&lt;p&gt;Untuk membuat matriks kita dapat menggunakan fungsi &lt;code&gt;cbind()&lt;/code&gt; atau &lt;code&gt;rbind()&lt;/code&gt;. Berikut adalah contoh sintaks untuk membuat matriks.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor numerik
col1 &amp;lt;- c(5, 6, 7, 8, 9)
col2 &amp;lt;- c(2, 4, 5, 9, 8)
col3 &amp;lt;- c(7, 3, 4, 8, 7)

# menggabungkan vektor berdasarkan kolom
my_data &amp;lt;- cbind(col1, col2, col3)
my_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## [1,]    5    2    7
## [2,]    6    4    3
## [3,]    7    5    4
## [4,]    8    9    8
## [5,]    9    8    7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Mengubah atau menambahkan nama baris
rownames(my_data) &amp;lt;- c(&amp;quot;row1&amp;quot;, &amp;quot;row2&amp;quot;, &amp;quot;row3&amp;quot;, &amp;quot;row4&amp;quot;, &amp;quot;row5&amp;quot;)
my_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## row1    5    2    7
## row2    6    4    3
## row3    7    5    4
## row4    8    9    8
## row5    9    8    7&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cbind()&lt;/strong&gt;: menggabungkan objek &lt;code&gt;R&lt;/code&gt; berdasarkan kolom&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rbind()&lt;/strong&gt;: menggabungkan objek &lt;code&gt;R&lt;/code&gt; berdasarkan baris&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rownames()&lt;/strong&gt;: mengambil atau menetapkan nama-nama baris dari objek seperti-matriks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;colnames()&lt;/strong&gt;: mengambil atau menetapkan nama-nama kolom dari objek seperti-matriks&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kita dapat melakukan tranpose (merotasi matriks sehingga kolom menjadi baris dan sebaliknya) menggunakan fungsi &lt;code&gt;t()&lt;/code&gt;. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      row1 row2 row3 row4 row5
## col1    5    6    7    8    9
## col2    2    4    5    9    8
## col3    7    3    4    8    7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selain melalui pembentukan sejumlah objek vektor, kita juga dapat membuat matriks menggunakan fungsi &lt;code&gt;matrix()&lt;/code&gt;. Secara sederhana fungsi tersebut dapat dituliskan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
       dimnames = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: vektor data opsional&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nrow&lt;/strong&gt;, &lt;strong&gt;ncol&lt;/strong&gt;: jumlah baris dan kolom yang diinginkan, masing-masing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;byrow&lt;/strong&gt;: nilai logis. Jika FALSE (default) matriks diisi oleh kolom, jika tidak, matriks diisi oleh baris.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dimnames&lt;/strong&gt;: Daftar dua vektor yang memberikan nama baris dan kolom masing-masing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dalam kode &lt;code&gt;R&lt;/code&gt; di bawah ini, data input memiliki panjang 6. Kita ingin membuat matriks dengan dua kolom. Kita tidak perlu menentukan jumlah baris (di sini &lt;code&gt;nrow = 3&lt;/code&gt;). &lt;code&gt;R&lt;/code&gt; akan menyimpulkan ini secara otomatis. Matriks diisi kolom demi kolom saat argumen &lt;code&gt;byrow = FALSE&lt;/code&gt;. Jika kita ingin mengisi matriks dengan baris, gunakan &lt;code&gt;byrow = TRUE&lt;/code&gt;. Berikut adalah contoh pembuatan matriks menggunakan fungsi &lt;code&gt;matrix()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- matrix(
           data = c(1,2,3, 11,12,13), 
           nrow = 2, byrow = TRUE,
           dimnames = list(c(&amp;quot;row1&amp;quot;, &amp;quot;row2&amp;quot;), c(&amp;quot;C.1&amp;quot;, &amp;quot;C.2&amp;quot;, &amp;quot;C.3&amp;quot;))
           )
data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      C.1 C.2 C.3
## row1   1   2   3
## row2  11  12  13&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengetahui dimensi dari suatu matriks, kita dapat menggunakan fungsi &lt;code&gt;ncol()&lt;/code&gt; untuk mengetahui jumlah kolom matriks dan &lt;code&gt;nrow()&lt;/code&gt; untuk mengetahui jumlah baris pada matriks. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengetahui jumlah kolom
ncol(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengetahui jumlah baris
nrow(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika ingin memperoleh ringkasan terkait dimensi matriks kita juga dapat mengunakan fungsi &lt;code&gt;dim()&lt;/code&gt; untuk mengetahui jumlah baris dan kolom matriks. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(my_data) # jumlah baris dan kolom&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;subset-pada-matriks&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.8.2 Subset Pada Matriks&lt;/h3&gt;
&lt;p&gt;Sama dengan vektor, subset juga dapat dilakukan pada matriks. Bedanya subset dilakukan berdasarkan baris dan kolom pada matriks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Memilih baris/kolom&lt;/strong&gt; berdasarkan pengindeksan positif&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;baris atau kolom dapat diseleksi menggunakan format &lt;code&gt;data[row, col]&lt;/code&gt;. Cara selesi ini sama dengan vektor, bedanya kita harus menetukan baris dan kolom dari data yang akan kita pilih. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris ke-2
my_data[2,]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## col1 col2 col3 
##    6    4    3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris 2 sampai 4
my_data[2:4,]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## row2    6    4    3
## row3    7    5    4
## row4    8    9    8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris 2 dan 4
my_data[c(2,4),]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## row2    6    4    3
## row4    8    9    8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris 2 dan kolom 3
my_data[2, 3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pilih berdasarkan nama baris/kolom&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Berikut adalah contoh subset berdasarkan nama baris atau kolom.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris 1 dan kolom 3
my_data[&amp;quot;row1&amp;quot;,&amp;quot;col3&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Pilih baris 1 sampai 4 dan kolom 3
baris &amp;lt;- c(&amp;quot;row1&amp;quot;,&amp;quot;row2&amp;quot;,&amp;quot;row3&amp;quot;)
my_data[baris, &amp;quot;col3&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## row1 row2 row3 
##    7    3    4&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kecualikan baris/kolom&lt;/strong&gt; dengan pengindeksan negatif&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sama seperti vektor pengecualian data dapat dilakukan di matriks menggunakan pengindeksan negatif. Berikut cara melakukannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Kecualikan baris 2 dan 3 serta kolom 3
my_data[-c(2,3), -3]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2
## row1    5    2
## row4    8    9
## row5    9    8&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pilihan dengan logik&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dalam kode &lt;code&gt;R&lt;/code&gt; di bawah ini, misalkan kita ingin hanya menyimpan baris di mana col3&amp;gt; = 4:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;col3 &amp;lt;- my_data[, &amp;quot;col3&amp;quot;]
my_data[col3 &amp;gt;= 4, ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## row1    5    2    7
## row3    7    5    4
## row4    8    9    8
## row5    9    8    7&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;perhitungan-menggunakan-matriks&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.8.3 Perhitungan Menggunakan Matriks&lt;/h3&gt;
&lt;p&gt;_ Kita juga dapat melakukan operasi matematika pada matriks. Pada operasi matematika pada matriks proses yang terjadi bisa lebih kompleks dibanding pada vektor, dimana kita dapat melakukan operasi untuk memperoleh gambaran data pada tiap kolom atau baris.&lt;/p&gt;
&lt;p&gt;Berikut adalah contoh operasi matematika sederhana pada matriks:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# mengalikan masing-masing elemen matriks dengan 2
my_data*2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      col1 col2 col3
## row1   10    4   14
## row2   12    8    6
## row3   14   10    8
## row4   16   18   16
## row5   18   16   14&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# memperoleh nilai log basis 2 pada masing-masing elemen matriks
log2(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          col1     col2     col3
## row1 2.321928 1.000000 2.807355
## row2 2.584963 2.000000 1.584963
## row3 2.807355 2.321928 2.000000
## row4 3.000000 3.169925 3.000000
## row5 3.169925 3.000000 2.807355&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seperti yang telah penulis jelaskan sebelumnya, kita juga dapat melakukan operasi matematika untuk memperoleh hasil penjumlahan elemen pada tiap baris atau kolom dengan menggunakan fungsi &lt;code&gt;rowSums()&lt;/code&gt; untuk baris dan &lt;code&gt;colSums()&lt;/code&gt; untuk kolom.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Total pada tiap kolom
colSums(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## col1 col2 col3 
##   35   28   29&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Total pada tiap baris
rowSums(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## row1 row2 row3 row4 row5 
##   14   13   16   25   24&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika kita tertarik untuk mencari nilai rata-rata tiap baris arau kolom kita juga dapat menggunakan fungsi &lt;code&gt;rowMeans()&lt;/code&gt; atau &lt;code&gt;colMeans()&lt;/code&gt;. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Rata-rata tiap baris
rowMeans(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     row1     row2     row3     row4     row5 
## 4.666667 4.333333 5.333333 8.333333 8.000000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Rata-rata tiap kolom
colMeans(my_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## col1 col2 col3 
##  7.0  5.6  5.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat melakukan perhitungan statistika lainnya menggunakan fungsi &lt;code&gt;apply()&lt;/code&gt;. Berikut adalah format sederhananya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;apply(x, MARGIN, FUN)&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x : data matriks&lt;/li&gt;
&lt;li&gt;MARGIN : Nilai yang dapat digunakan adalah 1 (untuk operasi pada baris) dan 2 (untuk operasi pada kolom)&lt;/li&gt;
&lt;li&gt;FUN : fungsi yang diterapkan pada baris atau kolom&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;untuk mengetahui fungsi (&lt;code&gt;FUN&lt;/code&gt;) apa saja yang dapat diterapkan pada fungsi &lt;code&gt;apply()&lt;/code&gt; jalankan sintaks bantuan berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;help(apply)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Rata-rata pada tiap baris
apply(my_data, 1, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     row1     row2     row3     row4     row5 
## 4.666667 4.333333 5.333333 8.333333 8.000000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Median pada tiap kolom
apply(my_data, 2, median)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## col1 col2 col3 
##    7    5    7&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;faktor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.9 Faktor&lt;/h2&gt;
&lt;p&gt;Dalam bahasa &lt;code&gt;R&lt;/code&gt; , faktor merupakan verktor dengan level. Level disimpan sebagai &lt;code&gt;R&lt;/code&gt; Character. Jika kita menggunakan SPSS maka factor ini akan sama dengan jenis data numerik atau ordinal.&lt;/p&gt;
&lt;p&gt;Faktor merepresentasikan kategori atau grup pada data. Untuk membuat faktor pada &lt;code&gt;R&lt;/code&gt;, kita dapat menggunakan fungsi &lt;code&gt;factor()&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;membuat-variabel-faktor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.9.1 Membuat Variabel Faktor&lt;/h3&gt;
&lt;p&gt;Berikut adalah contoh sintaks pembuatan variabel faktor.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat variabel faktor
faktor &amp;lt;- factor(c(1,2,1,2))
faktor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 1 2
## Levels: 1 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pada sintaks tersebut objek faktor terdiri atas dua buah kategori atau pada &lt;code&gt;R&lt;/code&gt; disebut sebagai &lt;strong&gt;factor levels&lt;/strong&gt;. Kita dapat mengecek factor levels menggunakan fungsi &lt;code&gt;levels()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;levels(faktor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1&amp;quot; &amp;quot;2&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat memberikan label atau mengubah level pada faktor. Berikut adalah contoh bagaimana kita melakukannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah level
levels(faktor) &amp;lt;- c(&amp;quot;baik&amp;quot;,&amp;quot;tidak_baik&amp;quot;)
faktor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] baik       tidak_baik baik       tidak_baik
## Levels: baik tidak_baik&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah urutan level
faktor &amp;lt;- factor(faktor,
                 levels = c(&amp;quot;tidak_baik&amp;quot;,&amp;quot;baik&amp;quot;))
faktor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] baik       tidak_baik baik       tidak_baik
## Levels: tidak_baik baik&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;is.factor()&lt;/code&gt; dapat digunakan untuk mengecek apakah sebuah variabel adalah faktor. Hasil yang dimunculkan dapat berupa TRUE (jika faktor) atau FALSE (jika bukan)&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;as.factor()&lt;/code&gt; dapat digunakan untuk merubah sebuah variabel menjadi faktor.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Cek jika objek faktor adalah faktor
is.factor(faktor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Cek jika objek Jumlah adalah faktor
is.factor(Jumlah)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ubah objek Jumlah menjadi faktor
as.factor(Jumlah)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     Apel    Jeruk Rambutan    Salak 
##        5     &amp;lt;NA&amp;gt;        6        7 
## Levels: 5 6 7&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;perhitungan-menggunakan-faktor&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.9.2 Perhitungan Menggunakan Faktor&lt;/h3&gt;
&lt;p&gt;Jika kita ingin mengetahui jumlah masing-masing observasi pada masing-masing faktor, kita dapat menggunakan fungsi &lt;code&gt;summary()&lt;/code&gt;. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(faktor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tidak_baik       baik 
##          2          2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pada contoh perhitungan menggunakan vektor kita telah membuat objek &lt;code&gt;pendapatan&lt;/code&gt;. Pada objek tersebut kita ingin menghitung nilai rata-rata pendapatan berdasarkan objek faktor. Untuk melakukannya kita dapat menggunakan fungsi &lt;code&gt;tapply()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pendapatan&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Andi Joni Lina Rani 
## 2000 1800 2500 3000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;faktor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] baik       tidak_baik baik       tidak_baik
## Levels: tidak_baik baik&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Rata-rata pendapatan dan simpan sebagai objek dengan nama:
# mean_pendapatan
mean_pendapatan &amp;lt;- tapply(pendapatan, faktor, mean)
mean_pendapatan&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tidak_baik       baik 
##       2400       2250&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Hitung ukuran/panjang masing-masing grup
tapply(pendapatan, faktor, length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## tidak_baik       baik 
##          2          2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengetahui jumlah masing-masing observasi masing-masing factor levels kita juga dapat menggunakan fungsi &lt;code&gt;table()&lt;/code&gt;. Fungsi tersebut akan membuat frekuensi tabel pada masing-masing factor levels atau yang dikenal sebagai &lt;em&gt;contingency table&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(faktor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## faktor
## tidak_baik       baik 
##          2          2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Cross-tabulation antara
# faktor dan pendapatan
table(pendapatan, faktor)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           faktor
## pendapatan tidak_baik baik
##       1800          1    0
##       2000          0    1
##       2500          0    1
##       3000          1    0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-frames&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.10 Data Frames&lt;/h2&gt;
&lt;p&gt;Data frame merupakan kumpulan vektor dengan panjang sama atau dapat pula dikatan sebagai matriks yang memiliki kolom dengan jenis data yang berbeda-beda (numerik, karakter, logical). Pada data frame terdapat baris dan kolom. Baris disebut sebagai observasi, sedangkan kolom disebut sebagai variabel. Sehingga dapat dikatakan bahwa setiap observasi akan memiliki satu atau beberapa variabel.&lt;/p&gt;
&lt;div id=&#34;membuat-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.10.1 Membuat Data Frame&lt;/h3&gt;
&lt;p&gt;Data frame dapat dibuat menggunakan fungsi &lt;code&gt;data.frame()&lt;/code&gt;. Berikut adalah contoh cara membuat data frame:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membuat data frame
nama &amp;lt;- c(&amp;quot;Andi&amp;quot;,&amp;quot;Rizal&amp;quot;,&amp;quot;Ani&amp;quot;,&amp;quot;Ina&amp;quot;)
pendapatan &amp;lt;- c(1000, 2000, 3500, 500)
tinggi &amp;lt;- c(160, 155, 170, 146)
usia &amp;lt;- c(35, 40, 25, 27)
menikah &amp;lt;- c(TRUE, FALSE, TRUE, TRUE)

data_teman &amp;lt;- data.frame(nama = nama,
                         gaji = pendapatan,
                         tinggi = tinggi,
                         menikah = menikah)

data_teman&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    nama gaji tinggi menikah
## 1  Andi 1000    160    TRUE
## 2 Rizal 2000    155   FALSE
## 3   Ani 3500    170    TRUE
## 4   Ina  500    146    TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengecek apakah objek &lt;code&gt;data_teman&lt;/code&gt; merupakan data frame, kita dapat menggunakan fungsi &lt;code&gt;is.data.frame()&lt;/code&gt;. Jika hasilnya TRUE, maka objek tersebut adalah data frame. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;is.data.frame(data_teman)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt; untuk konversi objek menjadi data frame, kita dapat menjalankan fungsi &lt;code&gt;as.data.frame()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;subset-pada-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.10.2 Subset Pada Data Frame&lt;/h3&gt;
&lt;p&gt;Subset pada data frame sebenarnya tidak berbeda dengan subset pada matriks. Bedanya adalah kita juga bisa melakukan subset langsung terhadap nama variabel menggunakan dollar sign. Untuk lebih memahaminya berikut adalah jenis subset pada data frame.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pengindeksan positif&lt;/strong&gt; menggunakan nama dan lokasi.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset menggunakan dollar sign
data_teman$nama&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] Andi  Rizal Ani   Ina  
## Levels: Andi Ani Ina Rizal&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# atau 
data_teman[, &amp;quot;nama&amp;quot;]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] Andi  Rizal Ani   Ina  
## Levels: Andi Ani Ina Rizal&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset baris 1 sampai 3 serta kolom 1 dan 3
data_teman[1:3, c(1,3)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    nama tinggi
## 1  Andi    160
## 2 Rizal    155
## 3   Ani    170&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pengindeksan negatif&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Kecualikan kolom nama
data_teman[,-1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   gaji tinggi menikah
## 1 1000    160    TRUE
## 2 2000    155   FALSE
## 3 3500    170    TRUE
## 4  500    146    TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pengideksan berdasarkan karakteristik&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kita ingin memilih data dengan kriteria teman yang telah menikah&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_teman[data_teman$menikah==TRUE, ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   nama gaji tinggi menikah
## 1 Andi 1000    160    TRUE
## 3  Ani 3500    170    TRUE
## 4  Ina  500    146    TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tampilkan hanya kolom nama dan gaji untuk yang telah menikah
data_teman[data_teman$menikah==TRUE, 1:2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   nama gaji
## 1 Andi 1000
## 3  Ani 3500
## 4  Ina  500&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;kita juga dapat menggunakan fungsi &lt;code&gt;subset()&lt;/code&gt; agar lebih mudah. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset terhadap teman yang berusia &amp;gt;=30 tahun
subset(data_teman, usia&amp;gt;=30)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    nama gaji tinggi menikah
## 1  Andi 1000    160    TRUE
## 2 Rizal 2000    155   FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Opsi lain adalah menggunakan fungsi &lt;code&gt;attach()&lt;/code&gt; dan &lt;code&gt;detach()&lt;/code&gt;. Fungsi &lt;code&gt;attach()&lt;/code&gt; mengambil data frame dan membuat kolomnya dapat diakses hanya dengan memberikan nama mereka.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# attach data frame
attach(data_teman)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked _by_ .GlobalEnv:
## 
##     menikah, nama, tinggi&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ==== memulai data manipulation ====
data_teman[usia&amp;gt;=30]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    nama gaji
## 1  Andi 1000
## 2 Rizal 2000
## 3   Ani 3500
## 4   Ina  500&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ==== mengakhiri data manipulation ====
# detach data frame

detach(data_teman)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;memperluas-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.10.3 Memperluas Data Frame&lt;/h3&gt;
&lt;p&gt;Kita dapat juga memperluas data frame dengan cara menambahkan variabel atau kolombaru pada data frame. Pada contoh kali ini penulis akan menambahkan kolom pendidikan terakhir pada objek &lt;code&gt;data_teman&lt;/code&gt;. Berikut adalah sintaks yang digunakan.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# membuat vektor pendidikan
pendidikan &amp;lt;- c(&amp;quot;S1&amp;quot;,&amp;quot;S2&amp;quot;,&amp;quot;D3&amp;quot;,&amp;quot;D1&amp;quot;)

# menambahkan variabel pendidikan pada data frame
data_teman$pendidikan &amp;lt;- pendidikan&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# atau
cbind(data_teman, pendidikan=pendidikan)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;perhitungan-pada-data-frame&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.10.4 Perhitungan Pada Data Frame&lt;/h3&gt;
&lt;p&gt;Perhitungan pada variabel numerik data frame pada dasarnya sama dengan perhitungan pada matriks. kita dapat menggunakan fungsi &lt;code&gt;rowSums()&lt;/code&gt;, &lt;code&gt;colSums()&lt;/code&gt;, &lt;code&gt;rowMeans()&lt;/code&gt; dan &lt;code&gt;apply()&lt;/code&gt;. Proses perhitungan dan manipulasi pada data frame akan dibahas pada sesi yang lain secara lebih detail.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;list&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.11 List&lt;/h2&gt;
&lt;p&gt;List adalah kumpulan objek yang diurutkan, yang dapat berupa vektor, matriks, data frame, dll. Dengan kata lain, daftar dapat berisi semua jenis objek &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;membuat-list&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.11.1 Membuat List&lt;/h3&gt;
&lt;p&gt;List dapat dibuat menggunakan fungsi &lt;code&gt;list()&lt;/code&gt;. Berikut disajikan contoh sebuah list sebuah keluarga:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membuat list keluarga
keluarga &amp;lt;- list(
  ayah = &amp;quot;Budi&amp;quot;,
  usia_ayah = 48,
  ibu  = &amp;quot;Ani&amp;quot;,
  usia_ibu = &amp;quot;47&amp;quot;,
  anak = c(&amp;quot;Andi&amp;quot;, &amp;quot;Adi&amp;quot;),
  usia_anak = c(15,10)
  )

# Print
keluarga&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $ayah
## [1] &amp;quot;Budi&amp;quot;
## 
## $usia_ayah
## [1] 48
## 
## $ibu
## [1] &amp;quot;Ani&amp;quot;
## 
## $usia_ibu
## [1] &amp;quot;47&amp;quot;
## 
## $anak
## [1] &amp;quot;Andi&amp;quot; &amp;quot;Adi&amp;quot; 
## 
## $usia_anak
## [1] 15 10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Nama elemen dalam list
names(keluarga)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;ayah&amp;quot;      &amp;quot;usia_ayah&amp;quot; &amp;quot;ibu&amp;quot;       &amp;quot;usia_ibu&amp;quot;  &amp;quot;anak&amp;quot;      &amp;quot;usia_anak&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Jumlah elemen pada list
length(keluarga)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;subset-list&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.11.2 Subset List&lt;/h3&gt;
&lt;p&gt;Kita dapat memilih sebuah elemen pada list dengan menggunakan nama elemen atau indeks dari elemen tersebut. Berikut adalah contoh penerapannya:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset berdasarkan nama
# mengambil elemen usia_ayah
keluarga$usia_ayah&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Atau
keluarga[[&amp;quot;usia_ayah&amp;quot;]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Subset berdasarkan indeks
keluarga[[2]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# subset elemen pertama pada keluarga[[5]]
keluarga[[5]][1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Andi&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;memperluas-list&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.11.3 Memperluas List&lt;/h3&gt;
&lt;p&gt;Kita juga dapat menambahkan elemen pada list yang telah kita buat. Pada contoh list sebelumnya penulis akan menambahkan elemen keluarga yang lain seperti berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Menambahkan kakek dan nenek pada list
keluarga$kakek &amp;lt;- &amp;quot;Suprapto&amp;quot;
keluarga$nenek &amp;lt;- &amp;quot;Sri&amp;quot;

# Print
keluarga&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $ayah
## [1] &amp;quot;Budi&amp;quot;
## 
## $usia_ayah
## [1] 48
## 
## $ibu
## [1] &amp;quot;Ani&amp;quot;
## 
## $usia_ibu
## [1] &amp;quot;47&amp;quot;
## 
## $anak
## [1] &amp;quot;Andi&amp;quot; &amp;quot;Adi&amp;quot; 
## 
## $usia_anak
## [1] 15 10
## 
## $kakek
## [1] &amp;quot;Suprapto&amp;quot;
## 
## $nenek
## [1] &amp;quot;Sri&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita juga dapat menggabungkan beberapa list menjadi satu. Berikut adalah format sederhana bagaimana cara menggabungkan beberapa list menjadi satu:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;list_baru &amp;lt;- c(list_a, list_b, list_c, ...)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;loop&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.12 Loop&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Loop&lt;/em&gt; merupakan kode program yang berulang-ulang. &lt;em&gt;Loop&lt;/em&gt; berguna saat kita ingin melakukan sebuah perintah yang perlu dijalankan berulang-ulang seperti melakukan perhitungan maupaun melakukan visualisasi terhadap banyak variabel secara serentak. Hal ini tentu saja membantu kita karena kita tidak perlu menulis sejumlah sintaks yang berulang-ulang. Kita hanya perlu mengatur &lt;em&gt;statement&lt;/em&gt; berdasarkan hasil yang kita harapkan.&lt;/p&gt;
&lt;p&gt;Pada &lt;code&gt;R&lt;/code&gt; bentuk &lt;em&gt;loop&lt;/em&gt; dapat bermacam-macam (“&lt;em&gt;for loop&lt;/em&gt;”,“&lt;em&gt;while loop&lt;/em&gt;”, dll). &lt;code&gt;R&lt;/code&gt; menyederhanakan bentuk &lt;em&gt;loop&lt;/em&gt; ini dengan menyediakan sejumlah fungsi seperti &lt;code&gt;apply()&lt;/code&gt;,&lt;code&gt;tapply()&lt;/code&gt;, dll. Sehingga &lt;code&gt;loop&lt;/code&gt; jarang sekali muncul dalam kode &lt;code&gt;R&lt;/code&gt;. Sehingga &lt;code&gt;R&lt;/code&gt; sering disebut sebagai &lt;em&gt;loopless loop&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Meski &lt;em&gt;loop&lt;/em&gt; jarang muncul bukan berarti kita tidak akan melakukannya. Terkadang saat kita melakukan komputasi statistik atau matematik dan belum terdapat paket yang mendukung proses tersebut, sering kali kita akan membuat sintaks sendiri berdasarkan algoritma metode tersebut. Pada algoritma tersebut sering pula terdapat &lt;em&gt;loop&lt;/em&gt; yang diperlukan selama proses perhitungan. Secara sederhana diagram umum loop ditampilkan pada Figure &lt;a href=&#34;#fig:loop&#34;&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:loop&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/skema_loop.png&#34; alt=&#34;Diagram umum loop (sumber: Primartha, 2018).&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Diagram umum loop (sumber: Primartha, 2018).
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;for-loop&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.12.1 For Loop&lt;/h3&gt;
&lt;p&gt;Mengulangi sebuah &lt;em&gt;statement&lt;/em&gt; atau sekelompok &lt;em&gt;statement&lt;/em&gt; sebanyak nilai yang ditentukan di awal. Jadi operasi akan terus dilakukan sampai dengan jumlah yang telah ditetapkan di awal atau dengan kata lain tes kondisi (Jika jumlah pengulangan telah cukup) hanya akan dilakukan di akhir. Secara sederhana bentuk dari &lt;em&gt;for loop&lt;/em&gt; dapat dituliskan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (value in vector){
  statements
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah contoh sintaks penerapan &lt;em&gt;for loop&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Membuat vektor numerik
vektor &amp;lt;- c(1:5)

# loop 
for(i in vektor){
  print(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Loop&lt;/em&gt; akan dimulai dari blok &lt;em&gt;statement for&lt;/em&gt; sampai dengan &lt;code&gt;print(i)&lt;/code&gt;. Berdasarkan &lt;em&gt;loop&lt;/em&gt; pada contoh tersebut, &lt;em&gt;loop&lt;/em&gt; hanya dilakukan sebanyak 5 kali sesuai dengan jumlah vektor yang ada.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;while-loop&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.12.2 While Loop&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;While loop&lt;/em&gt; merupakan loop yang digunakan ketika kita telah menetapkan &lt;em&gt;stop condition&lt;/em&gt; sebelumnya. Blok &lt;em&gt;statement&lt;/em&gt;/kode yang sama akan terus dijalankan sampai &lt;em&gt;stop condition&lt;/em&gt; ini tercapai. &lt;em&gt;Stop condition&lt;/em&gt; akan di cek sebelum melakukan proses &lt;em&gt;loop&lt;/em&gt;. Berikut adalah pola dari &lt;em&gt;while loop&lt;/em&gt; dapat dituliskan sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;while (test_expression){
  statement
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah contoh penerapan dari &lt;em&gt;while loop&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coba &amp;lt;- c(&amp;quot;Contoh&amp;quot;)
counter &amp;lt;- 1

# loop
while (counter&amp;lt;5){
  # print vektor
  print(coba)
  # tambahkan nilai counter sehingga proses terus berlangsung sampai counter = 5 
  counter &amp;lt;- counter + 1
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Contoh&amp;quot;
## [1] &amp;quot;Contoh&amp;quot;
## [1] &amp;quot;Contoh&amp;quot;
## [1] &amp;quot;Contoh&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Loop&lt;/em&gt; akan dimulai dari blok &lt;em&gt;statement while&lt;/em&gt; sampai dengan &lt;em&gt;counter&lt;/em&gt; &amp;lt;- 1. &lt;em&gt;Loop&lt;/em&gt; hanya akan dilakukan sepanjang nilai &lt;em&gt;counter&lt;/em&gt; &amp;lt; 5.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;repeat-loop&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.12.3 Repeat Loop&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Repeat loop&lt;/em&gt; akan menjalankan &lt;em&gt;statement&lt;/em&gt;/kode yang sama berulang-ulang hingga &lt;em&gt;stop condition&lt;/em&gt; tercapai. Berikut adalah pola dari &lt;em&gt;repeat loop&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;repeat {
  commands
  if(condition){
    break
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut adalah contoh penerapan dari &lt;em&gt;repeat loop&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coba &amp;lt;- c(&amp;quot;contoh&amp;quot;)
counter &amp;lt;- 1
repeat {
  print(coba)
  counter &amp;lt;- counter + 1
  if(counter &amp;lt; 5){
break
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;contoh&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Loop&lt;/em&gt; akan dimulai dari blok &lt;em&gt;statement while&lt;/em&gt; sampai dengan &lt;em&gt;break&lt;/em&gt;. &lt;em&gt;Loop&lt;/em&gt; hanya akan dilakukan sepanjang nilai &lt;em&gt;counter&lt;/em&gt; &amp;lt; 5. Hasil yang diperoleh berbeda dengan &lt;em&gt;while loop&lt;/em&gt;, dimana kita memperoleh 4 buah kata “contoh”. Hal ini disebabkan karena &lt;em&gt;repeat loop&lt;/em&gt; melakukan pengecekan &lt;em&gt;stop condition&lt;/em&gt; tidak di awal loop seperti &lt;em&gt;while loop&lt;/em&gt; sehingga berapapun nilainya, selama nilainya sesuai dengan &lt;em&gt;stop condition&lt;/em&gt; maka &lt;em&gt;loop&lt;/em&gt; akan dihentikan. Hal ini berbeda dengan &lt;em&gt;while loop&lt;/em&gt; dimana proses dilakukan berulang-ulang sampai jumlahnya mendekati &lt;em&gt;stop condition&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;break&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.12.4 Break&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Break&lt;/em&gt; sebenarnya bukan bagian dari &lt;em&gt;loop&lt;/em&gt;, namun sering digunakan dalam &lt;em&gt;loop&lt;/em&gt;. &lt;em&gt;Break&lt;/em&gt; dapat digunakan pada &lt;em&gt;loop&lt;/em&gt; manakala dirasa perlu, yaitu saat kondisi yang disyaratkan pada &lt;em&gt;break&lt;/em&gt; tercapai.&lt;/p&gt;
&lt;p&gt;Berikut adalah contoh penerapan &lt;em&gt;break&lt;/em&gt; pada beberapa jenis &lt;em&gt;loop&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# for loop
a = c(2,4,6,8,10,12,14)
for(i in a){
  if(i&amp;gt;8){
    break
  }
  print(i)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2
## [1] 4
## [1] 6
## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# while loop
a = 2
b = 4
while(a&amp;lt;7){
  print(a)
  a = a +1
  if(b+a&amp;gt;10){
    break
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2
## [1] 3
## [1] 4
## [1] 5
## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# repeat loop
a = 1
repeat{
  print(a)
  a = a+1
  if(a&amp;gt;6){
    break
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5
## [1] 6&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;decision-making&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.13 Decision Making&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Decicion Making&lt;/em&gt; atau sering disebut sebagai &lt;em&gt;if then else statement&lt;/em&gt; merupakan bentuk percabagan yang digunakan manakala kita ingin agar program dapat melakukan pengujian terhadap syarat kondisi tertentu. Pada Table 5 disajikan daftar percabangan yang digunakan pada &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table 5&lt;/strong&gt; Daftar percabangan pada &lt;code&gt;R&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;16%&#34; /&gt;
&lt;col width=&#34;83%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Statement&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Keterangan&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;em&gt;if statement&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;if statement&lt;/em&gt; hanya terdiri atas sebuah ekspresi &lt;em&gt;Boolean&lt;/em&gt;, dan diikuti satu atau lebih &lt;em&gt;statement&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;em&gt;if…else statement&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;if else statement&lt;/em&gt; terdiri atas beberapa buah ekspresi &lt;em&gt;Boolean&lt;/em&gt;. Ekspressi &lt;em&gt;Boolean&lt;/em&gt; berikutnya akan dijalankan jika ekspresi *Boolan sebelumnya bernilai FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;em&gt;switch statement&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;switch statement&lt;/em&gt; digunakan untuk mengevaluasi sebuah variabel beberapa pilihan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;if-statement&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.13.1 if statement&lt;/h3&gt;
&lt;p&gt;Pola &lt;em&gt;if statement&lt;/em&gt; disajikan pada Figure &lt;a href=&#34;#fig:ifstatement&#34;&gt;2&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:ifstatement&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/ifstatement.png&#34; alt=&#34;Diagram if statement (sumber: Primartha, 2018).&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Diagram if statement (sumber: Primartha, 2018).
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Berikut adalah contoh penerapan &lt;em&gt;if statement&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(1:5)
if(is.vector(x)){
  print(&amp;quot;x adalah sebuah vector&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;x adalah sebuah vector&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;if-else-statement&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.13.2 if else statement&lt;/h3&gt;
&lt;p&gt;Pola dari &lt;em&gt;if else statement&lt;/em&gt; disajikan pada Figure &lt;a href=&#34;#fig:ifelse&#34;&gt;3&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:ifelse&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/ifelse.png&#34; alt=&#34;Diagram if else statement (sumber: Primartha, 2018).&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Diagram if else statement (sumber: Primartha, 2018).
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Berikut adalah contoh penerapan &lt;em&gt;if else statement&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(&amp;quot;Andi&amp;quot;,&amp;quot;Iwan&amp;quot;, &amp;quot;Adi&amp;quot;)
if(&amp;quot;Rina&amp;quot; %in% x){
  print(&amp;quot;Rina ditemukan&amp;quot;)
} else if(&amp;quot;Adi&amp;quot; %in% x){
  print(&amp;quot;Adi ditemukan&amp;quot;)
} else{
  print(&amp;quot;tidak ada yang ditemukan&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Adi ditemukan&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;switch-statement&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2.13.3 switch statement&lt;/h3&gt;
&lt;p&gt;Pola dari &lt;em&gt;switch statement&lt;/em&gt; disajikan pada Figure &lt;a href=&#34;#fig:switch&#34;&gt;4&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:switch&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/switch.png&#34; alt=&#34;Diagram switch statement (sumber: Primartha, 2018).&#34;  /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Diagram switch statement (sumber: Primartha, 2018).
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Berikut adalah contoh penerapan &lt;em&gt;switch statement&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y = 3

x = switch(
  y,
  &amp;quot;Selamat Pagi&amp;quot;,
  &amp;quot;Selamat Siang&amp;quot;,
  &amp;quot;Selamat Sore&amp;quot;,
  &amp;quot;Selamat Malam&amp;quot;
)

print(x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Selamat Sore&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;fungsi&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.14 Fungsi&lt;/h2&gt;
&lt;p&gt;Fungsi merupakan sekumpulan instruksi atau &lt;em&gt;statement&lt;/em&gt; yang dapat melakukan tugas khusus. Sebagai contoh fungsi perkalian untuk menyelesaikan operasi perkalian, fungsi pemangkatan hanya untuk operasi pemangkatan, dll.&lt;/p&gt;
&lt;p&gt;Pada &lt;code&gt;R&lt;/code&gt; terdapat 2 jenis fungsi, yaitu: &lt;em&gt;build in fuction&lt;/em&gt; dan &lt;em&gt;user define function&lt;/em&gt;. &lt;em&gt;build in fnction&lt;/em&gt; merupakan fungsi bawaan &lt;code&gt;R&lt;/code&gt; saat pertama kita menginstall &lt;code&gt;R&lt;/code&gt;. Contohnya adalah &lt;code&gt;mean()&lt;/code&gt;, &lt;code&gt;sum()&lt;/code&gt;, &lt;code&gt;ls()&lt;/code&gt;, &lt;code&gt;rm()&lt;/code&gt;, dll. Sedangkan &lt;em&gt;user define fuction&lt;/em&gt; merupakan fungsi-fungsi yang dibuat sendiri oleh pengguna.&lt;/p&gt;
&lt;p&gt;Fungsi-fungsi buatan pengguna haruslah dideklarasikan (dibuat) terlebih dahulu sebelum dapat dijalankan. Pola pembentukan fungsi adalah sebagai berikut:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;function_name &amp;lt;- function(argument_1, argument_2, ...){
  function body
}&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;function_name&lt;/strong&gt; : Nama dari fungsi &lt;code&gt;R&lt;/code&gt;. &lt;code&gt;R&lt;/code&gt; akan menyimpan fungsi tersebut sebagai objek&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;argument_1, argument_2,…&lt;/strong&gt; : &lt;em&gt;Argument&lt;/em&gt; bersifat opsional (tidak wajib). &lt;em&gt;Argument&lt;/em&gt; dapat digunakan untuk memberi inputan kepada fungsi&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;function body&lt;/strong&gt; : Merupakan inti dari fungsi. Fuction body dapat terdiri atas 0 statement (kosong) hingga banyak statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt; : Fungsi ada yang memiliki &lt;em&gt;output&lt;/em&gt; atau &lt;em&gt;return value&lt;/em&gt; ada juga yang tidak. Jika fungsi memiliki &lt;em&gt;return value&lt;/em&gt; maka &lt;em&gt;return value&lt;/em&gt; dapat diproses lebih lanjut&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Berikut adalah contoh penerapan &lt;em&gt;user define function&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fungsi tanpa argument
bilang &amp;lt;- function(){
  print(&amp;quot;Hello World!!&amp;quot;)
}

# Print
bilang()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Hello World!!&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fungsi dengan argumen
tambah &amp;lt;- function(a,b){
  print(a+b)
}

# Print
tambah(5,3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Fungsi dengan return value
kali &amp;lt;- function(a,b){
  return(a*b)
}

# Print
kali(4,3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Referensi&lt;/strong&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Primartha, R. 2018. &lt;strong&gt;Belajar Machine Learning Teori dan Praktik&lt;/strong&gt;. Penerbit Informatika : Bandung.&lt;/li&gt;
&lt;li&gt;Rosadi,D. 2016. &lt;strong&gt;Analisis Statistika dengan R&lt;/strong&gt;. Gadjah Mada University Press: Yogyakarta.&lt;/li&gt;
&lt;li&gt;STHDA. &lt;strong&gt;Easy R Programming Basics&lt;/strong&gt;. &lt;a href=&#34;http://www.sthda.com/english/wiki/easy-r-programming-basics&#34; class=&#34;uri&#34;&gt;http://www.sthda.com/english/wiki/easy-r-programming-basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Venables, W.N. Smith D.M. and R Core Team. 2018. &lt;strong&gt;An Introduction to R&lt;/strong&gt;. R Manuals.&lt;/li&gt;
&lt;li&gt;The R Core Team. 2018. &lt;strong&gt;R: A Language and Environment for Statistical Computing&lt;/strong&gt;. R Manuals.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mengenal Lebih Jauh R Melalui Tutorial</title>
      <link>/post/mengenal-r/mengenal-lebih-jauh-r/</link>
      <pubDate>Sat, 02 Mar 2019 21:13:14 -0500</pubDate>
      
      <guid>/post/mengenal-r/mengenal-lebih-jauh-r/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;/Restaurant-Website-Analytics.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; merupakan bahasa pemrograman yang banyak digunakan untuk melakukan analisa statistik. Penggunaannya yang mudah, jumlah paket yang banyak, serta dapat digunakan oleh seluruh kalangan secara gratis membuatnya menjadi salah satu bahasa pemrograman yang paling banyak digunakan. Untuk itu sayang sekali jika kita tidak menggunakannya karena &lt;code&gt;R&lt;/code&gt; merupakan bahasa pemrograman yang sangat powerfull.&lt;/p&gt;
&lt;p&gt;Alasan tersebut membuat penulis sadar bahwa pbetapa pentingnya untuk menyajikan panduan lengkap penggunaan R untuk aplikasinya dalam bidang statistik bahkan lebih jauh dapat digunakan untuk analisa lain seperti membuat model matematik dan optimasi sistem meskipun &lt;code&gt;R&lt;/code&gt; tidak didesain untuk melakukannya.&lt;/p&gt;
&lt;p&gt;Penulis telah membuat tutorial langkah-langkah penggunaan &lt;code&gt;R&lt;/code&gt; yang dapat dibaca pada section &lt;code&gt;Tutorial&lt;/code&gt; yang akan diupdate setiap minggu. Adapun tema yang akan dibahas mengenai &lt;code&gt;R&lt;/code&gt; antara lain penerapannya dalam bidang: 1. Statistik 2. Visualisasi Data 3. Model Matematik 4. Model Sistem Dinamik 5. Optimasi (mis: linear Programming)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/jupyter/</guid>
      <description>

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./academic_0_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-python-and-jupyter&#34;&gt;Install Python and Jupyter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and Jupyter notebook.&lt;/p&gt;

&lt;p&gt;Otherwise, for advanced users, install Jupyter notebook with &lt;code&gt;pip3 install jupyter&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-blog-post-as-usual-https-sourcethemes-com-academic-docs-managing-content-create-a-blog-post&#34;&gt;Create a new blog post &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34; target=&#34;_blank&#34;&gt;as usual&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY_WEBSITE_FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;my-post&lt;/code&gt; with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;
hugo new  --kind post post/my-post
cd &amp;lt;MY_WEBSITE_FOLDER&amp;gt;/content/post/my-post/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;

&lt;p&gt;Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (&lt;em&gt;New &amp;gt; Python Notebook&lt;/em&gt;) or upload a notebook.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=.

# Copy the contents of Untitled.md and append it to index.md:
cat Untitled.md | tee -a index.md

# Remove the temporary file:
rm Untitled.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;index.md&lt;/code&gt; in your text editor and edit the title etc. in the &lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34;&gt;front matter&lt;/a&gt; according to your preference.&lt;/p&gt;

&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;

&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0700</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0700</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.&lt;/p&gt;

  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;em&gt;Slides&lt;/em&gt; feature and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Environmental Learning Website Project</title>
      <link>/project/environmental-learning-website/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0700</pubDate>
      
      <guid>/project/environmental-learning-website/</guid>
      <description>&lt;p&gt;This project is a website in the form of a collection of topics related to data analysis and modeling in the environmental field. This website is structured in such a way as to contain a number of material related to statistics, advanced mathematics, environmental engineering modeling, and operations research in the field of environmental engineering.&lt;/p&gt;

&lt;p&gt;The website is updated every week where each author update will share on the author&amp;rsquo;s social media account. Readers can continue to follow the writing on the website by visiting the site environmental &lt;code&gt;learning.wordpress.com&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0700</pubDate>
      
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Academic: the website designer for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0700</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Academic&lt;/strong&gt; makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.&lt;/p&gt;

&lt;p&gt;Follow our easy &lt;a href=&#34;https://sourcethemes.com/academic/docs/install/&#34; target=&#34;_blank&#34;&gt;step by step guide&lt;/a&gt; to learn how to build your own free website with Academic. &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Check out the personal demo&lt;/a&gt; or the &lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;business demo&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;View the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Ask a question&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;Request a feature or report a bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updating? View the &lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support development of Academic:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paypal.me/cushen&#34; target=&#34;_blank&#34;&gt;Donate a coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.patreon.com/cushen&#34; target=&#34;_blank&#34;&gt;Become a backer on Patreon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redbubble.com/people/neutreno/works/34387919-academic&#34; target=&#34;_blank&#34;&gt;Decorate your laptop or journal with an Academic sticker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academic.threadless.com/&#34; target=&#34;_blank&#34;&gt;Wear the T-shirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage various content including homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Extensible via &lt;strong&gt;color themes&lt;/strong&gt; and &lt;strong&gt;widgets/plugins&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Multilingual and easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic is available in different color themes and font themes.&lt;/p&gt;





&lt;div class=&#34;gallery&#34;&gt;

  
  
  
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-1950s.png&#34; data-caption=&#34;1950s&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-1950s_huaf5482f8cea0c5a703a328640e3b7509_21614_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-apogee.png&#34; data-caption=&#34;Apogee&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-apogee_hu4b45d99db97150df01464c393bfd17d4_24119_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-coffee-playfair.png&#34; data-caption=&#34;Coffee theme with Playfair font&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-coffee-playfair_hu446a8f670cc5622adcc77b97ba95f6c5_22462_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-cupcake.png&#34; data-caption=&#34;Cupcake&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-cupcake_hueba8cfa8cfbc7543924fcbf387a99e92_23986_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-dark.png&#34; data-caption=&#34;Dark&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-dark_hu1e8601ecc47f58eada7743fdcd709d3d_21456_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-default.png&#34; data-caption=&#34;Default&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-default_huba6228b7bdf30e2f03f12ea91b2cba0d_21751_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-forest.png&#34; data-caption=&#34;Forest&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-forest_hu4f093a1c683134431456584193ea41ee_21797_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  
    
    
    
    
    
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
    
  &lt;a data-fancybox=&#34;gallery-gallery&#34; href=&#34;/post/getting-started/gallery/theme-ocean.png&#34; data-caption=&#34;Ocean&#34;&gt;
  &lt;img src=&#34;/post/getting-started/gallery/theme-ocean_hu14831ccafc2219f30a7a096fa7617e01_21760_0x190_resize_lanczos_2.png&#34; alt=&#34;&#34;&gt;
  &lt;/a&gt;
  

  
&lt;/div&gt;

&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-admin&#34; target=&#34;_blank&#34;&gt;Academic Admin&lt;/a&gt;:&lt;/strong&gt; An admin tool to import publications from BibTeX or import assets for an offline site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-scripts&#34; target=&#34;_blank&#34;&gt;Academic Scripts&lt;/a&gt;:&lt;/strong&gt; Scripts to help migrate content to new versions of Academic&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one-click install using your web browser (recommended)&lt;/li&gt;
&lt;li&gt;install on your computer using Git with the Command Prompt/Terminal app&lt;/li&gt;
&lt;li&gt;install on your computer by downloading the ZIP files&lt;/li&gt;
&lt;li&gt;install on your computer with RStudio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quick-install-using-your-web-browser&#34;&gt;Quick install using your web browser&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34;&gt;Install Academic with Netlify&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Netlify will provide you with a customizable URL to access your new site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On GitHub, go to your newly created &lt;code&gt;academic-kickstart&lt;/code&gt; repository and edit &lt;code&gt;config.toml&lt;/code&gt; to personalize your site. Shortly after saving the file, your site will automatically update&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-git&#34;&gt;Install with Git&lt;/h3&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;Download and install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34;&gt;Fork&lt;/a&gt; the &lt;em&gt;Academic Kickstart&lt;/em&gt; repository and clone your fork with Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sourcethemes/academic-kickstart.git My_Website
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace &lt;code&gt;sourcethemes&lt;/code&gt; with your GitHub username.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize the theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd My_Website
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-zip&#34;&gt;Install with ZIP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract &lt;em&gt;Academic Kickstart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract the &lt;em&gt;Academic theme&lt;/em&gt; to the &lt;code&gt;themes/academic/&lt;/code&gt; folder from the above step&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-rstudio&#34;&gt;Install with RStudio&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;View the guide to installing Academic with RStudio&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you installed on your computer, view your new website by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt; or Netlify (refer to the first installation method). Alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as a university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of updates and check out the &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;release notes&lt;/a&gt; prior to updating your site.&lt;/p&gt;

&lt;p&gt;Before updating the framework, it is recommended to make a backup of your entire website directory (or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory) and record your current version number.&lt;/p&gt;

&lt;p&gt;By default, Academic is installed as a Git submodule which can be updated by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --remote --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Check out the update guide&lt;/a&gt; for full instructions and alternative methods.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For support, head over to the &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/cv/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Moh Rosidi - Curriculum Vitae&lt;/title&gt;

&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width&#34;/&gt;
&lt;meta name=&#34;description&#34; content=&#34;The Curriculum Vitae of Joe Bloggs.&#34;/&gt;
&lt;meta charset=&#34;UTF-8&#34;&gt; 

&lt;link type=&#34;text/css&#34; rel=&#34;stylesheet&#34; href=&#34;style.css&#34;&gt;
&lt;link href=&#39;http://fonts.googleapis.com/css?family=Rokkitt:400,700|Lato:400,300&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;

&lt;!--[if lt IE 9]&gt;
&lt;script src=&#34;//html5shiv.googlecode.com/svn/trunk/html5.js&#34;&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;/head&gt;
&lt;body id=&#34;top&#34;&gt;
&lt;div id=&#34;cv&#34; class=&#34;instaFade&#34;&gt;
	&lt;div class=&#34;mainDetails&#34;&gt;
		&lt;div id=&#34;headshot&#34; class=&#34;quickFade&#34;&gt;
			&lt;img src=&#34;headshot.jpg&#34; alt=&#34;Alan Smith&#34; /&gt;
		&lt;/div&gt;
		
		&lt;div id=&#34;name&#34;&gt;
			&lt;h1 class=&#34;quickFade delayTwo&#34;&gt;Moh. Rosidi&lt;/h1&gt;
			&lt;h2 class=&#34;quickFade delayThree&#34;&gt;Master Student&lt;/h2&gt;
		&lt;/div&gt;
		
		&lt;div id=&#34;contactDetails&#34; class=&#34;quickFade delayFour&#34;&gt;
			&lt;ul&gt;
				&lt;li&gt;e: &lt;a href=&#34;mailto:rosidi.mohammad@yahoo.com&#34; target=&#34;_blank&#34;&gt;rosidi.mohammad@yahoo.com&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;w: &lt;a href=&#34;https://environmental-data-modeling.netlify.com/&#34;&gt;environmental-data-modeling.netlify.com/&lt;/a&gt;&lt;/li&gt;
				&lt;li&gt;m: 082128770438&lt;/li&gt;
			&lt;/ul&gt;
		&lt;/div&gt;
		&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
	&lt;/div&gt;
	
	&lt;div id=&#34;mainArea&#34; class=&#34;quickFade delayFive&#34;&gt;
		&lt;section&gt;
			&lt;article&gt;
				&lt;div class=&#34;sectionTitle&#34;&gt;
					&lt;h1&gt;Personal Profile&lt;/h1&gt;
				&lt;/div&gt;
				
				&lt;div class=&#34;sectionContent&#34;&gt;
					&lt;p&gt;I am a master’s student in Environmental Engineering, Institut Teknologi Bandung with fields of Technology and Environmental Management. Currently active writers in communities such as R Indonesia and Machine Learning ID. Besides being active in the community, I also active in writing blogs. The theme of the blog is related to data analytics and environmental modeling.&lt;/p&gt;
				&lt;/div&gt;
			&lt;/article&gt;
			&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
		&lt;/section&gt;
		
		
		&lt;section&gt;
			&lt;div class=&#34;sectionTitle&#34;&gt;
				&lt;h1&gt;Work Experience&lt;/h1&gt;
			&lt;/div&gt;
			
			&lt;div class=&#34;sectionContent&#34;&gt;
				&lt;article&gt;
					&lt;h2&gt;PROPER Assessment Assistant KLHK&lt;/h2&gt;
					&lt;p class=&#34;subDetails&#34;&gt;August 2017 - August 2017&lt;/p&gt;
					&lt;p&gt;Responsibilities include:
- Check and evaluate company environmental management reports
- make reports regarding the management and PROPER rating of the company (eg: black, red, or blue)&lt;/p&gt;
				&lt;/article&gt;
				
				&lt;article&gt;
					&lt;h2&gt;Member of the Field Surveyor Team Dinas PU Cipta Karya&lt;/h2&gt;
					&lt;p class=&#34;subDetails&#34;&gt;August 2017 - September 2017&lt;/p&gt;
					&lt;p&gt;Responsibilities include:
- Conduct field surveys to verify data on homes that do not have defecation facilities
- Make technology recommendations (eg individual septic tanks, communal septic tanks, or local waste treatment plants) based on the results of field surveys&lt;/p&gt;
				&lt;/article&gt;
				
				&lt;article&gt;
					&lt;h2&gt;Assistant Professor at ITS&lt;/h2&gt;
					&lt;p class=&#34;subDetails&#34;&gt;August 2017 - August 2018&lt;/p&gt;
					&lt;p&gt;Responsibilities include:
- Helping lecturer research
- Assist the process of preparing teaching books&lt;/p&gt;
				&lt;/article&gt;
			&lt;/div&gt;
			&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
		&lt;/section&gt;
		
		
		&lt;section&gt;
			&lt;div class=&#34;sectionTitle&#34;&gt;
				&lt;h1&gt;Key Skills&lt;/h1&gt;
			&lt;/div&gt;
			
			&lt;div class=&#34;sectionContent&#34;&gt;
				&lt;ul class=&#34;keySkills&#34;&gt;
					&lt;li&gt;Environmental Management&lt;/li&gt;
					&lt;li&gt;Environmental Modeling&lt;/li&gt;
					&lt;li&gt;Data Analytics&lt;/li&gt;
					&lt;li&gt;R&lt;/li&gt;
					&lt;li&gt;SPSS&lt;/li&gt;
					&lt;li&gt;System Dynamic&lt;/li&gt;
					&lt;li&gt;MS. Office&lt;/li&gt;
					&lt;li&gt;Statistics&lt;/li&gt;
				&lt;/ul&gt;
			&lt;/div&gt;
			&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
		&lt;/section&gt;
		
		
		&lt;section&gt;
			&lt;div class=&#34;sectionTitle&#34;&gt;
				&lt;h1&gt;Education&lt;/h1&gt;
			&lt;/div&gt;
			
			&lt;div class=&#34;sectionContent&#34;&gt;
				&lt;article&gt;
					&lt;h2&gt;College/University&lt;/h2&gt;
					&lt;p class=&#34;subDetails&#34;&gt;Qualification&lt;/p&gt;
					&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultricies massa et erat luctus hendrerit. Curabitur non consequat enim.&lt;/p&gt;
				&lt;/article&gt;
				
				&lt;article&gt;
					&lt;h2&gt;College/University&lt;/h2&gt;
					&lt;p class=&#34;subDetails&#34;&gt;Qualification&lt;/p&gt;
					&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ultricies massa et erat luctus hendrerit. Curabitur non consequat enim.&lt;/p&gt;
				&lt;/article&gt;
			&lt;/div&gt;
			&lt;div class=&#34;clear&#34;&gt;&lt;/div&gt;
		&lt;/section&gt;
		
	&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var gaJsHost = ((&#34;https:&#34; == document.location.protocol) ? &#34;https://ssl.&#34; : &#34;http://www.&#34;);
document.write(unescape(&#34;%3Cscript src=&#39;&#34; + gaJsHost + &#34;google-analytics.com/ga.js&#39; type=&#39;text/javascript&#39;%3E%3C/script%3E&#34;));
&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var pageTracker = _gat._getTracker(&#34;UA-3753241-1&#34;);
pageTracker._initData();
pageTracker._trackPageview();
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title>Perancangan Instalasi Pengolahan Air Limbah (IPAL) Industri Kertas Halus</title>
      <link>/publication/perancangan-ipal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/publication/perancangan-ipal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/example-slides/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
