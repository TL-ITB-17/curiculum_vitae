[{"authors":["admin"],"categories":null,"content":"The author is a master\u0026rsquo;s student in Environmental Engineering, Institut Teknologi Bandung with fields of Technology and Environmental Management. Currently active writers in communities such as R Indonesia and Machine Learning ID.\nBesides being active in the community, the writer is also active in writing blogs. The theme of the blog that the author makes is related to data analytics and environmental modeling.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"The author is a master\u0026rsquo;s student in Environmental Engineering, Institut Teknologi Bandung with fields of Technology and Environmental Management. Currently active writers in communities such as R Indonesia and Machine Learning ID.\nBesides being active in the community, the writer is also active in writing blogs. The theme of the blog that the author makes is related to data analytics and environmental modeling.","tags":null,"title":"Mohammad Rosidi, S.T.","type":"author"},{"authors":null,"categories":null,"content":"\rPada section ini penulis akan menyajikan beberapa tutorial terkait analisa data dan modeling menggunakan R. Tutorial secara garis besar akan membahas:\n\rAnalisa dan modeling data menggunakan metode statistik di R\rAnalisa dan modeling lingkungan menggunakan R\rOptimasi operasi menggunakan R\r\rPembahasan juga akan meliputi analisa statistik menggunakan GUI R (R Commander) untuk menganalisa data.\n","date":1551373200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1551373200,"objectID":"fe0f055b9d498b98f202fea04c5beccd","permalink":"/tutorial/","publishdate":"2019-03-01T00:00:00+07:00","relpermalink":"/tutorial/","section":"tutorial","summary":"Pada section ini penulis akan menyajikan beberapa tutorial terkait analisa data dan modeling menggunakan R. Tutorial secara garis besar akan membahas:\n\rAnalisa dan modeling data menggunakan metode statistik di R\rAnalisa dan modeling lingkungan menggunakan R\rOptimasi operasi menggunakan R\r\rPembahasan juga akan meliputi analisa statistik menggunakan GUI R (R Commander) untuk menganalisa data.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":["R"],"content":"\rR merupakan bahasa pemrograman yang banyak digunakan untuk melakukan analisa statistik. Penggunaannya yang mudah, jumlah paket yang banyak, serta dapat digunakan oleh seluruh kalangan secara gratis membuatnya menjadi salah satu bahasa pemrograman yang paling banyak digunakan. Untuk itu sayang sekali jika kita tidak menggunakannya karena R merupakan bahasa pemrograman yang sangat powerfull.\nAlasan tersebut membuat penulis sadar bahwa pbetapa pentingnya untuk menyajikan panduan lengkap penggunaan R untuk aplikasinya dalam bidang statistik bahkan lebih jauh dapat digunakan untuk analisa lain seperti membuat model matematik dan optimasi sistem meskipun R tidak didesain untuk melakukannya.\nPenulis telah membuat tutorial langkah-langkah penggunaan R yang dapat dibaca pada section Tutorial yang akan diupdate setiap minggu. Adapun tema yang akan dibahas mengenai R antara lain penerapannya dalam bidang: 1. Statistik 2. Visualisasi Data 3. Matematik 4. Optimasi (mis: linear Programming)\n","date":1551579194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551579194,"objectID":"733152f9f49322133ba36687c628c954","permalink":"/post/mengenal-r/mengenal-lebih-jauh-r/","publishdate":"2019-03-02T21:13:14-05:00","relpermalink":"/post/mengenal-r/mengenal-lebih-jauh-r/","section":"post","summary":"R merupakan bahasa pemrograman yang banyak digunakan untuk melakukan analisa statistik. Penggunaannya yang mudah, jumlah paket yang banyak, serta dapat digunakan oleh seluruh kalangan secara gratis membuatnya menjadi salah satu bahasa pemrograman yang paling banyak digunakan. Untuk itu sayang sekali jika kita tidak menggunakannya karena R merupakan bahasa pemrograman yang sangat powerfull.\nAlasan tersebut membuat penulis sadar bahwa pbetapa pentingnya untuk menyajikan panduan lengkap penggunaan R untuk aplikasinya dalam bidang statistik bahkan lebih jauh dapat digunakan untuk analisa lain seperti membuat model matematik dan optimasi sistem meskipun R tidak didesain untuk melakukannya.","tags":["R Markdown","Tutorial"],"title":"Mengenal Lebih Jauh R Melalui Tutorial","type":"post"},{"authors":["Mohammad Rosidi, S.T."],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":null,"categories":null,"content":"\r\rDaftar Isi\r\rSejarah R\rFitur dan Karakteristik R\rKelebihan dan Kekurangan R\rRStudio\rMenginstall R dan RStudio\r\r\r1.1 Sejarah R\rR Merupakan bahasa yang digunakan dalam komputasi statistik yang pertama kali dikembangkan oleh Ross Ihaka dan Robert Gentlement di University of Auckland New Zealand yang merupakan akronim dari nama depan kedua pembuatnya. Sebelum R dikenal ada S yang dikembangkan oleh John Chambers dan rekan-rekan dari Bell Laboratories yang memiliki fungsi yang sama untuk komputasi statistik. Hal yang membedakan antara keduanya adalah R merupakan sistem komputasi yang bersifat gratis.Logo R dapat dilihat pada Figure 1.\n\rFigure 1: Logo R.\r\rR dapat dibilang merupakan aplikasi sistem statistik yang kaya. Hal ini disebabkan banyak sekali paket yang dikembangkan oleh pengembang dan komunitas untuk keperluan analisa statistik seperti linear regression, clustering, statistical test, dll. Selain itu, R juga dapat ditambahkan paket-paket lain yang dapat meningkatkan fiturnya.\nSebagai sebuah bahasa pemrograman yang banyak digunakan untuk keperluan analisa data, R dapat dioperasikan pada berbagai sistem operasi pada komputer. Adapun sistem operasi yang didukung antara lain: UNIX, Linux, Windows, dan MacOS.\n\r1.2 Fitur dan Karakteristik R\rR memiliki karakteristik yang berbeda dengan bahasa pemrograman lain seperti C++,python, dll. R memiliki aturan/sintaks yang berbeda dengan bahasa pemrograman yang lain yang membuatnya memiliki ciri khas tersendiri dibanding bahasa pemrograman yang lain.\nBeberapa ciri dan fitur pada R antara lain:\nBahasa R bersifat case sensitif. maksudnya adalah dalam proses input R huruf besar dan kecil sangat diperhatikan. Sebagai contoh kita ingin melihat apakah objek A dan B pada sintaks berikut:\r\rA \u0026lt;- \u0026quot;Andi\u0026quot;\rB \u0026lt;- \u0026quot;andi\u0026quot;\r# cek kedua objek A dan B\rA == B\r## [1] FALSE\r# Kesimpulan : Kedua objek berbeda\rSegala sesuatu yang ada pada program R akan diangap sebagai objek. konsep objek ini sama dengan bahasa pemrograma berbasis objek yang lain seperti Java, C++, python, dll.Perbedaannya adalah bahasa R relatif lebih sederhana dibandingkan bahasa pemrograman berbasis obejk yang lain.\rinterpreted language atau script. Bahasa R memungkinkan pengguna untuk melakukan kerja pada R tanpa perlu kompilasi kode program menjadi bahasa mesin.\rMendukung proses loop, decision making, dan menyediakan berbagai jenis operstor (aritmatika, logika, dll).\rMendukung export dan import berbagai format file, seperti:TXT, CSV, XLS, dll.\rMudah ditingkatkan melalui penambahan fungsi atau paket. Penambahan paket dapat dilakukan secara online melalui CRAN atau melalui sumber seperti github.\rMenyedikan berbagai fungsi untuk keperluan visualisasi data. Visualisasi data pada R dapat menggunakan paket bawaan atau paket lain seperti ggplo2,ggvis, dll.\r\r\r1.3 Kelebihan dan Kekurangan R\rSelain karena R dapat digunakan secara gratis terdapat kelebihan lain yang ditawarkan, antara lain:\nProtability. Penggunaan software dapat digunakan kapanpun tanpa terikat oleh masa berakhirnya lisensi.\rMultiplatform. R bersifat Multiplatform Operating Systems, dimana software R lebih kompatibel dibanding software statistika lainnya. Hal in berdampak pada kemudahan dalam penyesuaian jika pengguna harus berpindah sistem operasi karena R baik pada sistem operasi seperti windows akan sama pengoperasiannya dengan yang ada di Linux (paket yang digunakan sama).\rGeneral dan Cutting-edge. Berbagai metode statistik baik metode klasik maupun baru telah diprogram kedalam R. Dengan demikian software ini dapat digunakan untuk analisis statistika dengan pendekatan klasik dan pendekatan modern.\rProgramable. Pengguna dapat memprogram metode baru atau mengembangakan modifikasi dari analisis statistika yang telah ada pada sistem R.\rBerbasis analisis matriks. Bahasa R sangat baik digunakan untuk programming dengan basis matriks.\rFasiltas grafik yang lengkap.\r\rAdapun kekurangan dari R antara lain:\nPoint and Click GUI. Interaksi utama dengan R bersifat CLI (Command Line Interface), walaupun saat ini telah dikembangkan paket yang memungkinkan kita berinteraksi dengan R menggunakan GUI (Graphical User Interface) sederhana menggunakan paket R-Commander yang memiliki fungsi yang terbatas. R- Commander sendiri merupakan GUI yang diciptakan dengan tujuan untuk keperluan pengajaran sehingga analisis statistik yang disediakan adalah yang klasik. Meskipun terbatas paket ini berguna jika kita membutuhkan analisis statistik sederhana dengan cara yang simpel.\rMissing statistical function. Meskipun analisis statistika dalam R sudah cukup lengkap, namun tidak semua metode statistika telah diimplementasikan ke dalam R. Namun karena R merupakan lingua franca untuk keperluan komputasi statistika modern staan ini, dapat dikatakan ketersediaan fungsi tambahan dalam bentuk paket hanya masalah waktu saja.\r\r\r1.4 RStudio\rAplikasi R pada dasarnya berbasis teks atau command line sehingga pengguna harus mengetikkan perintah-perintah tertentu dan harus hapal perintah-perintahnya. Setidaknya jika kita ingin melakukan kegiatan analisa data menggunakan R kita harus selalu siap dengan perintah-perintah yang hendak digunakan sehingga buku manual menjadi sesuatu yang wajib adasaat berkeja dengan R.\nKondisi ini sering kali membingunkan bagi pengguna pemula maupun pengguna mahir yang sudah terbiasa dengan aplikasi statistik lain seperti SAS, SPSS, Minitab, dll. Alasan itulah yang menyebabkan pengembang R membuat berbagai frontend untuk R yang berguna untuk memudahkan dalam pengoperasian R.\nRStudio merupakan salah satu bentuk frontend R yang cukup populer dan nyaman digunakan. Selain nyaman digunakan, RStudio memungkinkan kita melakukan penulisan laporan menggunakan Rmarkdown atau RNotebook serta membuat berbagai bentuk project seperti shyni, dll. Pada R studio juga memungkinkan kita mengatur working directory tanpa perlu mengetikkan sintaks pada Commander, yang diperlukan hanya memilihnya di menu RStudio. Selain itu, kita juga dapat meng-import file berisikan data tanpa perlu mengetikkan pada Commander dengan cara memilih pada menu Environment.\n\r1.5 Menginstall R dan RStudio\rPada tutorial ini hanya akan dijelaskan bagaimana menginstal R dan RStudio pada sistem operasi windows. Sebelum memulai menginstal sebaiknya pembaca mengunduh terlebih dahulu installer R dan RStudio.\nJalankan proses pemasangan dengan meng-klik installer aplikasi R dan RStudio.\rIkuti langkah proses pemasangan aplikasi yang ditampilkan dengan klik OK atau Next.\rApabila pemasangan telah dilakukan, jalankan aplikasi yang telah terpasang untuk menguji jika aplikasi telah berjalan dengan baik.\r\rJendela aplikasi yang telah terpasang ditampilkan pada Figure 2 dan Figure 3.\n\rFigure 2: Jendela R.\r\r\rFigure 3: Jendela RStudio.\r\r\rNote:  Sebaiknya install R terlebih dahulu sebelum RStudio\n\rReferensi\nPrimartha, R. 2018. Belajar Machine Learning Teori dan Praktik. Penerbit Informatika : Bandung\rRosadi,D. 2016. Analisis Statistika dengan R. Gadjah Mada University Press: Yogyakarta\r\r\r","date":1536426000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536426000,"objectID":"6f47ca1c793632cbfe1f0e525b3f1460","permalink":"/tutorial/01_mengenal-bahasa-r/","publishdate":"2018-09-09T00:00:00+07:00","relpermalink":"/tutorial/01_mengenal-bahasa-r/","section":"tutorial","summary":"Daftar Isi\r\rSejarah R\rFitur dan Karakteristik R\rKelebihan dan Kekurangan R\rRStudio\rMenginstall R dan RStudio\r\r\r1.1 Sejarah R\rR Merupakan bahasa yang digunakan dalam komputasi statistik yang pertama kali dikembangkan oleh Ross Ihaka dan Robert Gentlement di University of Auckland New Zealand yang merupakan akronim dari nama depan kedua pembuatnya. Sebelum R dikenal ada S yang dikembangkan oleh John Chambers dan rekan-rekan dari Bell Laboratories yang memiliki fungsi yang sama untuk komputasi statistik.","tags":null,"title":"1. Mengenal Bahasa R","type":"docs"},{"authors":null,"categories":null,"content":"\r\rDaftar Isi\r\rOperator Aritmatika\rFungsi Aritmetik\rOperator Relasi\rOperator Logika\rMemasukkan Nilai Kedalam Variabel\rTipe Data\rVektor\rMatriks\rFaktor\rData Frames\rList\rLoop\r\r\r2.1 Operator Aritmatika\rProses perhitungan akan ditangani oleh fungsi khusus. R akan memahami urutannya secara benar. Kecuali kita secara eksplisit menetapkan yang lain. Sebagai contoh jalankan sintaks berikut:\n2+4*2\r## [1] 10\rBandingkan dengan sintaks berikut:\n(2+4)*2\r## [1] 12\r\rR dapat digunakan sebagai kalkulator\n\rBerdasarkan kedua hasil tersebut dapat disimpulkan bahwa ketika kita tidak menetapkan urutan perhitungan menggunakan tanda kurung, R akan secara otomatis akan menghitung terlebih dahulu perkalian atau pembangian.\nOperator aritmatika yang disediakan R adalah sebagai berikut:\nTable 1 Operator Aritmatika R\n\r\r\r\rSimbol\rKeterangan\r\r\r\r+\rAddition, untuk operasi penjumlahan\r\r-\rSubstraction, untuk operasi pengurangan\r\r*\rMultiplication, untuk operasi pembagian\r\r/\rDivision, untuk operasi pembagian\r\r^\rEksponentiation, untuk operasi pemangkatan\r\r%%\rModulus, Untuk mencari sisa pembagian\r\r%/%\rInteger, Untuk mencari bilangan bulat hasil pembagian saja dan tanpa sisa pembagian\r\r\r\rUntuk lebih memahaminya berikut contoh sintaks penerapan operator tersebut.\n# Addition\r5+3\r## [1] 8\r# Substraction\r5-3\r## [1] 2\r# Multiplication\r5*3\r## [1] 15\r# Division\r5/3\r## [1] 1.666667\r# Eksponetiation\r5^3\r## [1] 125\r# Modulus\r5%%3\r## [1] 2\r# Integer\r5%/%3\r## [1] 1\r\rNote:  Pada R tanda # berfungsi menambahkan keterangan untuk menjelaskan sebuah sintaks pada R.\n\r\r2.2 Fungsi Aritmetik\rSelain fungsi operator aritmetik, pada R juga telah tersedia fungsi aritmetik yang lain seperti logaritmik, ekponensial, trigonometri, dll.\nLogaritma dan eksponensial\r\rUntuk contoh fungsi logaritmik dan eksponensial jalankan sintaks berikut:\nlog2(8) # logaritma basis 2 untuk 8\r## [1] 3\rlog10(8) # logaritma basis 10 untuk 8\r## [1] 0.90309\rexp(8) # eksponensial 8\r## [1] 2980.958\rFungsi trigonometri\r\rfungsi trigonometri yang ditampilkan seperti sin,cos, tan, dll.\ncos(90) # cos 90\r## [1] -0.4480736\rsin(90) # Sin 90\r## [1] 0.8939967\rtan(90) # Tan 90\r## [1] -1.9952\racos(90) # arc-cos 90\r## Warning in acos(90): NaNs produced\r## [1] NaN\rasin(90) # arc-sin 90\r## Warning in asin(90): NaNs produced\r## [1] NaN\ratan(90) #arc-tan 90\r## [1] 1.559686\rFungsi matematik lainnya\r\rFungsi lainnya yang dapat digunakan adalah fungsi absolut, akar kuadrat, dll. Berikut adalah contoh sintaks penggunaan fungsi absolut dan akar kuadrat.\nabs(-2) # nilai absolut -2\r## [1] 2\rsqrt(4) # akar kuadrat 4\r## [1] 2\r\r2.3 Operator Relasi\rOperator relasi digunakan untuk membandingkan satu objek dengan objek lainnya. Operator yang disediakan R disajikan pada Table 2.\nTable 2 Operator Relasi R\n\r\rSimbol\rKeterangan\r\r\r\r“\u0026gt;”\rLebih besar dari\r\r“\u0026lt;”\rLebih Kecil dari\r\r“==”\rSama dengan\r\r“\u0026gt;=”\rLebih besar sama dengan\r\r“\u0026lt;=”\rLebih kecil sama dengan\r\r“!=”\rTidak sama dengan\r\r\r\rBerikut adalah penerapan operator pada tabel tersebut:\nx \u0026lt;- 34\ry \u0026lt;- 35\r# Operator \u0026gt;\rx \u0026gt; y\r## [1] FALSE\r# Operator \u0026lt;\rx \u0026lt; y\r## [1] TRUE\r# operator ==\rx == y\r## [1] FALSE\r# Operator \u0026gt;=\rx \u0026gt;= y\r## [1] FALSE\r# Operator \u0026lt;=\rx \u0026lt;= y\r## [1] TRUE\r# Operator !=\rx != y\r## [1] TRUE\r\r2.4 Operator Logika\rOperator logika hanya berlaku pada vektor dengan tipe logical, numeric, atau complex. Semua angka bernilai 1 akan dianggap bernilai logika TRUE. Operator logika yang disediakan R dapat dilihat pada Table 3.\nTable 3 Operator logika R\n\r\rSimbol\rKeterangan\r\r\r\r\u0026amp;\u0026amp;\rOperator logika AND\r\r\r\r\r!\rOpeartor logika NOT\r\r\u0026amp;\rOperator logika AND element wise\r\r\rOperator logika OR element wise\r\r\r\rPenerapannya terdapat pada sintaks berikut:\nv \u0026lt;- c(TRUE,TRUE, FALSE)\rt \u0026lt;- c(FALSE,FALSE,FALSE)\r# Operator \u0026amp;\u0026amp;\rprint(v\u0026amp;\u0026amp;t)\r## [1] FALSE\r# Operator ||\rprint(v||t)\r## [1] TRUE\r# Operator !\rprint(!v)\r## [1] FALSE FALSE TRUE\r# operator \u0026amp;\rprint(v\u0026amp;t)\r## [1] FALSE FALSE FALSE\r# Operator |\rprint(v|t)\r## [1] TRUE TRUE FALSE\r\rNote: \noperator \u0026amp; dan | akan mengecek logika tiap elemen pada vektor secara berpesangan (sesuai urutan dari kiri ke kanan).\nOperator %% dan || hanya mengecek dari kiri ke kanan pada observasi pertama. Misal saat menggunakan \u0026amp;\u0026amp; jika observasi pertama TRUE maka observasi pertama pada vektor lainnya akan dicek, namun jika observasi pertama FALSE maka proses akan segera dihentikan dan menghasilkan FALSE.\n\r\r2.5 Memasukkan Nilai Kedalam Variabel\rVariabel pada R dapat digunakan untuk menyimpan nilai. Sebagai contoh jalankan sintaks berikut:\n# Harga sebuah lemon adalah 500 rupiah\rlemon \u0026lt;- 500\r# Atau\r500 -\u0026gt; lemon\r# dapat juga menggunakan tanda \u0026quot;=\u0026quot;\rlemon = 500\r\rNote: \nR memungkinkan penggunaan \u0026lt;-,-\u0026gt;, atau = sebagai perintah pengisi nilai variabel\n\rR bersifat case-sensitive. Maksudnya adalah variabel Lemon tidak sama dengan lemon (Besar kecil huruf berpengaruh)\n\r\r\rUntuk mengetahui nilai dari objek lemon kita dapat menggunakan fungsi print() atau mengetikkan nama objeknya secara langsung.\n# Menggunakan fungsi print()\rprint(lemon)\r## [1] 500\r# Atau\rlemon\r## [1] 500\rR akan menyimpan variabel lemon sebagai objek pada memori. Sehingga kita dapat melakukan operasi terhadap objek tersebut seperti mengalikannya atau menjumlahkannya dengan bilangan lain. Sebagai contoh jalankan sintaks berikut:\n# Operasi perkalian terhadap objek lemon\r5*lemon\r## [1] 2500\rKita dapat juga mengubah nilai dari objek lemon dengan cara menginput nilai baru terhadap objek yang sama. R secara otomatis akan menggatikan nilai sebelumnya. Untuk lebih memahaminya jalankan sintaks berikut:\nlemon \u0026lt;- 1000\r# Print lemon\rprint(lemon)\r## [1] 1000\rUntuk lebih memahaminya berikut adalah sintaks untuk menghitung volume suatu objek.\n# Dimensi objek\rpanjang \u0026lt;- 10\rlebar \u0026lt;- 5\rtinggi \u0026lt;- 5\r# Menghitung volume\rvolume \u0026lt;- panjang*lebar*tinggi\r# Print objek volume\rprint(volume)\r## [1] 250\rUntuk mengetahui objek apa saja yang telah kita buat sepanjang artikel ini kita dapang menggunakan fungsi ls().\nls()\r## [1] \u0026quot;lebar\u0026quot; \u0026quot;lemon\u0026quot; \u0026quot;panjang\u0026quot; \u0026quot;t\u0026quot; \u0026quot;tinggi\u0026quot; \u0026quot;v\u0026quot; \u0026quot;volume\u0026quot; ## [8] \u0026quot;x\u0026quot; \u0026quot;y\u0026quot;\r\rKumpulan objek yang telah tersimpan dalam memori disebut sebagai workspace\n\rUntuk menghapus objek pada memori kita dapat menggunakan fungsi rm(). Pada sintaks berikut penulis hendak menghapus objek lemon dan volume.\n# Menghapus objek lemon dan volume\rrm(lemon, volume)\r# Tampilkan kembali objek yang tersisa\rls()\r## [1] \u0026quot;lebar\u0026quot; \u0026quot;panjang\u0026quot; \u0026quot;t\u0026quot; \u0026quot;tinggi\u0026quot; \u0026quot;v\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot;\r\rNote:  Setiap variabel atau objek yang dibuat akan menempati sejumlah memori pada komputer sehingga jika kita bekerja dengan jumlah data yang banyak pastikan kita menghapus seluruh objek pada memori sebelum memulai kerja.\n\r\r2.6 Tipe Data\rData pada R dapat dikelompokan berdasarkan beberapa tipe. Tipe data pada R disajikan pada Table 4.\nTable 4 Tipe Data R\n\r\rTipe Data\rContoh\rKeterangan\r\r\r\rLogical\rTRUE, FALSE\rNilai Boolean\r\rNumeric\r12.3, 5, 999\rSegala jenis angka\r\rInteger\r23L, 97L, 3L\rBilangan integer (bilangan bulat)\r\rComplex\r2i, 3i, 9i\rBilangan kompleks\r\rCharacter\r‘a’, “b”, “123”\rKarakter dan string\r\rRaw\rIdentik dengan “hello”\rSegala jenis data yang disimpan sebagai raw bytes\r\r\r\rSintaks berikut adalah contoh dari tipe data pada R. Untuk mengetahui tipa data suatu objek kita dapat menggunakan perintah class()\n# Logical\rapel \u0026lt;- TRUE\rclass(apel)\r## [1] \u0026quot;logical\u0026quot;\r# Numeric\rx \u0026lt;- 2.3\rclass(x)\r## [1] \u0026quot;numeric\u0026quot;\r# Integer\ry \u0026lt;- 2L\rclass(y)\r## [1] \u0026quot;integer\u0026quot;\r# Compleks\rz \u0026lt;- 5+2i\rclass(z)\r## [1] \u0026quot;complex\u0026quot;\r# string\rw \u0026lt;- \u0026quot;saya\u0026quot;\rclass(w)\r## [1] \u0026quot;character\u0026quot;\r# Raw\rxy \u0026lt;- charToRaw(\u0026quot;hello world\u0026quot;)\rclass(xy)\r## [1] \u0026quot;raw\u0026quot;\rKeenam jenis data tersebut disebut sebagai tipe data atomik. Hal ini disebabkan karena hanya dapat menangani satu tipe data saja. Misalnya hanya numeric atau hanya integer.\nSelain menggunakan fungsi class(), kita dapat pula menggunakan fungsi is_numeric(), is.character(), is.logical(), dan sebagainya berdasarkan jenis data apa yang ingin kita cek. Berbeda dengan fungsi class(), ouput yang dihasilkan pada fungsi seperti is_numeric() adalah nilai Boolean sehingga fungsi ini hanya digunakan untuk mengecek apakah jenis data pada objek sama seperti yang kita pikirkan. Sebagai contoh disajikan pada sintaks berikut:\ndata \u0026lt;- 25\r# Cek apakah objek berisi data numerik\ris.numeric(data)\r## [1] TRUE\r# Cek apakah objek adalah karakter\ris.character(data)\r## [1] FALSE\rKita juga dapat mengubah jenis data menjadi jenis lainnya seperti integer menjadi numerik atau sebaliknya. Fungsi yang digunakan adalah as.numeric() jika ingin mengubah suatu jenis data menjadi numerik. Fungsi lainnya juga dapat digunakan sesuai dengan kita ingin mengubah jenis data objek menjadi jenis data lainnya.\n# Integer\rapel \u0026lt;- 2L\r# Ubah menjadi numerik\ras.numeric(apel)\r## [1] 2\r# Cek\ris.numeric(apel)\r## [1] TRUE\r# Logical\rnangka \u0026lt;- TRUE\r# Ubah logical menjadi numeric\ras.numeric(nangka)\r## [1] 1\r# Karakter\rminum \u0026lt;- \u0026quot;minum\u0026quot;\r# ubah karakter menjadi numerik\ras.numeric(minum)\r## Warning: NAs introduced by coercion\r## [1] NA\r\rNote:  Konversi karakter menjadi numerik akan menghasilkan output NA (not available). R tidak mengetahui bagaimana cara merubah karakter menjadi bentuk numerik.\n\rBerdasarkan Tabel 2, vektor karakter dapat dibuat menggunakan tanda kurung baik double quote (“”) maupun single quote (’’).Jika pada teks yang kita tuliskan mengandung quote maka kita harus menghentikannya menggunakan tanda ( ). Sbegai contoh kita ingin menuliskan `My friend’s name is “Adi”, pada sintaks akan dituliskan:\n\u0026#39;My friend\\`s name is \u0026quot;Adi\u0026quot;\u0026#39;\r## [1] \u0026quot;My friend`s name is \\\u0026quot;Adi\\\u0026quot;\u0026quot;\r# Atau\r\u0026quot;My friend\u0026#39;s name \\\u0026quot;Adi\\\u0026quot;\u0026quot;\r## [1] \u0026quot;My friend\u0026#39;s name \\\u0026quot;Adi\\\u0026quot;\u0026quot;\r\r2.7 Vektor\rVektor merupakan kombinasi berbagai nilai (numerik, karakter, logical, dan sebagainya berdasarkan jenis input data) pada objek yang sma. Pada contoh kasus berikut, pembaca akan memiliki sesuai jenis data input yaituvektor numerik, vector karakter, vektor logical, dll.\n2.7.1 Membuat vektor\rVektor dibuat dengan menggunakan fungsi c()(concatenate) seperti yang disajikan pada sintaks berikut:\n# membuat vektor numerik\rx \u0026lt;- c(3,3.5,4,7)\rx # print vektor\r## [1] 3.0 3.5 4.0 7.0\r# membuat vektor karakter\ry \u0026lt;- c(\u0026quot;Apel\u0026quot;, \u0026quot;Jeruk\u0026quot;, \u0026quot;Rambutan\u0026quot;, \u0026quot;Salak\u0026quot;)\ry # print vektor\r## [1] \u0026quot;Apel\u0026quot; \u0026quot;Jeruk\u0026quot; \u0026quot;Rambutan\u0026quot; \u0026quot;Salak\u0026quot;\r# membuat vektor logical\rt \u0026lt;- c(\u0026quot;TRUE\u0026quot;, \u0026quot;FALSE\u0026quot;, \u0026quot;TRUE\u0026quot;)\rt # print vektor\r## [1] \u0026quot;TRUE\u0026quot; \u0026quot;FALSE\u0026quot; \u0026quot;TRUE\u0026quot;\rselain menginput nilai pada vektor, kita juga dapat memberi nama nilai setiap vektor menggunakan fungsi names().\n# Membuat vektor jumlah buah yang dibeli\rJumlah \u0026lt;- c(5,5,6,7)\rnames(Jumlah) \u0026lt;- c(\u0026quot;Apel\u0026quot;, \u0026quot;Jeruk\u0026quot;, \u0026quot;Rambutan\u0026quot;, \u0026quot;Salak\u0026quot;)\r# Atau\rJumlah \u0026lt;- c(Apel=5, Jeruk=5, Rambutan=6, Salak=7)\r# Print\rJumlah\r## Apel Jeruk Rambutan Salak ## 5 5 6 7\r\rNote:  Vektor hanya dapat memuat satu buah jenis data. Vektor hanya dapat mengandung jenis data numerik saja, karakter saja, dll.\n\rUntuk menentukan panjang sebuah vektor kita dapat menggunakan fungsi lenght().\nlength(Jumlah)\r## [1] 4\r\r2.7.2 Missing Values\rSeringkali nilai pada vektor kita tidak lengkap atau terdapat nilai yang hilang (missing value) pada vektor. Missing value pada R dilambangkan oleh NA(not available). Berikut adalah contoh vektor dengan missing value.\nJumlah \u0026lt;- c(Apel=5, Jeruk=NA, Rambutan=6, Salak=7)\rUntuk mengecek apakah dalam objek terdapat missing value dapat menggunakan fungsi is.na(). ouput dari fungsi tersebut adalah nilai Boolean. Jika terdapat Missing value, maka output yang dihasilkan akan memberikan nilai TRUE.\nis.na(Jumlah)\r## Apel Jeruk Rambutan Salak ## FALSE TRUE FALSE FALSE\r\rNote: \nSelain NA terdapat NaN (not a number) sebagai missing value8. Nilai tersebut muncul ketika fungsi matematika yang digunakan pada proses perhitungan tidak bekerja sebagaimana mestinya. Contoh: 0/0 = NaN\nis.na() juga akan menghasilkan nilai TRUE pada NaN. Untuk membedakannya dengan NA dapat digunakan fungsi is.nan().\n\r\r2.7.3 Subset Pada Vektor\rSubseting vector terdiri atas tiga jenis, yaitu: positive indexing, Negative Indexing, dan .\n\rPositive indexing: memilih elemen vektor berdasarkan posisinya (indeks) dalam kurung siku.\r\r# Subset vektor pada urutan kedua\rJumlah[2]\r## Jeruk ## NA\r# Subset vektor pada urutan 2 dan 4\rJumlah[c(2, 4)]\r## Jeruk Salak ## NA 7\rSelain melalui urutan (indeks), kita juga dapat melakukan subset berdasarkan nama elemen vektornya.\nJumlah[\u0026quot;Jeruk\u0026quot;]\r## Jeruk ## NA\r\rNote:  Indeks pada R dimulai dari 1. Sehingga kolom atau elemen pertama vektor dimulai dari [1]\n\r\rNegative indexing: mengecualikan (exclude) elemen vektor.\r\r# mengecualikan elemen vektor 2 dan 4\rJumlah[-c(2,4)]\r## Apel Rambutan ## 5 6\r# mengecualikan elemen vektor 1 sampai 3\rJumlah[-c(1:3)]\r## Salak ## 7\r\rSubset berdasarkan vektor logical: Hanya, elemen-elemen yang nilai yang bersesuaian dalam vektor pemilihan bernilai TRUE, akan disimpan dalam subset.\r\r\rNote:  panjang vektor yang digunakan untuk subset harus sama.\n\rJumlah \u0026lt;- c(Apel=5, Jeruk=NA, Rambutan=6, Salak=7)\r# selecting vector\rmerah \u0026lt;- c(TRUE, FALSE, TRUE, FALSE)\r# Subset\rJumlah[merah==TRUE]\r## Apel Rambutan ## 5 6\r# Subset untuk elemen vektor bukan missing value\rJumlah[!is.na(Jumlah)]\r## Apel Rambutan Salak ## 5 6 7\r\r2.7.4 Perhitungan Menggunakan Vektor\rJika Anda melakukan operasi dengan vektor, operasi akan diterapkan ke setiap elemen vektor. Contoh disediakan pada sintaks di bawah ini:\npendapatan \u0026lt;- c(2000, 1800, 2500, 3000)\rnames(pendapatan) \u0026lt;- c(\u0026quot;Andi\u0026quot;, \u0026quot;Joni\u0026quot;, \u0026quot;Lina\u0026quot;, \u0026quot;Rani\u0026quot;)\rpendapatan\r## Andi Joni Lina Rani ## 2000 1800 2500 3000\r# Kalikan pendapatan dengan 3\rpendapatan*3\r## Andi Joni Lina Rani ## 6000 5400 7500 9000\rSeperti yang dapat dilihat, R mengalikan setiap elemen dengan bilangan pengali.\nKita juga dapat mengalikan vektor dengan vektor lainnya.Contohnya disajikan pada sintaks berikut:\n# membuat vektor dengan panjang sama dengan dengan vektor pendapatan\rcoefs \u0026lt;- c(2, 1.5, 1, 3)\r# Mengalikan pendapatan dengan vektor coefs\rpendapatan*coefs\r## Andi Joni Lina Rani ## 4000 2700 2500 9000\rBerdasarkan sintaks tersebut dapat terlihat bahwa operasi matematik terhadap masing-masing vektor dapat berlangsung jika panjang vektornya sama.\nBerikut adalah fungsi lain yang dapat digunakan pada operasi matematika vektor.\nmax(x) # memperoleh nilai maksimum x\rmin(x) # memperoleh nilai minimum x\rrange(x) # memperoleh range vektor x\rlength(x) # memperoleh jumlah elemen vektor x\rsum(x) # memperoleh total penjumlahan elemen vektor x\rprod(x) # memeperoleh produk elemen vektor x\rmean(x) # memperoleh nilai rata-rata seluruh elemen vektor x\rsd(x) # standar deviasi vektor x\rvar(x) # varian vektor x\rsort(x) # mengurutkan elemen vektor x dari yang terbesar\rContoh penggunaan fungsi tersebut disajikan beberapa pada sintaks berikut:\n# Menghitung range pendapatan\rrange(pendapatan)\r## [1] 1800 3000\r# menghitung rata-rata dan standar deviasi pendapatan\rmean(pendapatan)\r## [1] 2325\rsd(pendapatan)\r## [1] 537.7422\r\r\r2.8 Matriks\rMatriks seperti Excel sheet yang berisi banyak baris dan kolom (kumpulan bebrapa vektor). Matriks digunakan untuk menggabungkan vektor dengan tipe yang sama, yang bisa berupa numerik, karakter, atau logis. Matriks digunakan untuk menyimpan tabel data dalam R. Baris-baris matriks pada umumnya adalah individu / pengamatan dan kolom adalah variabel.\n2.8.1 Membuat matriks\rUntuk membuat matriks kita dapat menggunakan fungsi cbind() atau rbind(). Berikut adalah contoh sintaks untuk membuat matriks.\n# membuat vektor numerik\rcol1 \u0026lt;- c(5, 6, 7, 8, 9)\rcol2 \u0026lt;- c(2, 4, 5, 9, 8)\rcol3 \u0026lt;- c(7, 3, 4, 8, 7)\r# menggabungkan vektor berdasarkan kolom\rmy_data \u0026lt;- cbind(col1, col2, col3)\rmy_data\r## col1 col2 col3\r## [1,] 5 2 7\r## [2,] 6 4 3\r## [3,] 7 5 4\r## [4,] 8 9 8\r## [5,] 9 8 7\r# Mengubah atau menambahkan nama baris\rrownames(my_data) \u0026lt;- c(\u0026quot;row1\u0026quot;, \u0026quot;row2\u0026quot;, \u0026quot;row3\u0026quot;, \u0026quot;row4\u0026quot;, \u0026quot;row5\u0026quot;)\rmy_data\r## col1 col2 col3\r## row1 5 2 7\r## row2 6 4 3\r## row3 7 5 4\r## row4 8 9 8\r## row5 9 8 7\r\rNote: \n\rcbind(): menggabungkan objek R berdasarkan kolom\rrbind(): menggabungkan objek R berdasarkan baris\rrownames(): mengambil atau menetapkan nama-nama baris dari objek seperti-matriks\rcolnames(): mengambil atau menetapkan nama-nama kolom dari objek seperti-matriks\r\r\rKita dapat melakukan tranpose (merotasi matriks sehingga kolom menjadi baris dan sebaliknya) menggunakan fungsi t(). Berikut adalah contoh penerapannya:\nt(my_data)\r## row1 row2 row3 row4 row5\r## col1 5 6 7 8 9\r## col2 2 4 5 9 8\r## col3 7 3 4 8 7\rSelain melalui pembentukan sejumlah objek vektor, kita juga dapat membuat matriks menggunakan fungsi matrix(). Secara sederhana fungsi tersebut dapat dituliskan sebagai berikut:\nmatrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,\rdimnames = NULL)\r\rNote: \n\rdata: vektor data opsional\rnrow, ncol: jumlah baris dan kolom yang diinginkan, masing-masing.\rbyrow: nilai logis. Jika FALSE (default) matriks diisi oleh kolom, jika tidak, matriks diisi oleh baris.\rdimnames: Daftar dua vektor yang memberikan nama baris dan kolom masing-masing.\r\r\rDalam kode R di bawah ini, data input memiliki panjang 6. Kita ingin membuat matriks dengan dua kolom. Kita tidak perlu menentukan jumlah baris (di sini nrow = 3). R akan menyimpulkan ini secara otomatis. Matriks diisi kolom demi kolom saat argumen byrow = FALSE. Jika kita ingin mengisi matriks dengan baris, gunakan byrow = TRUE. Berikut adalah contoh pembuatan matriks menggunakan fungsi matrix().\ndata \u0026lt;- matrix(\rdata = c(1,2,3, 11,12,13), nrow = 2, byrow = TRUE,\rdimnames = list(c(\u0026quot;row1\u0026quot;, \u0026quot;row2\u0026quot;), c(\u0026quot;C.1\u0026quot;, \u0026quot;C.2\u0026quot;, \u0026quot;C.3\u0026quot;))\r)\rdata\r## C.1 C.2 C.3\r## row1 1 2 3\r## row2 11 12 13\rUntuk mengetahui dimensi dari suatu matriks, kita dapat menggunakan fungsi ncol() untuk mengetahui jumlah kolom matriks dan nrow() untuk mengetahui jumlah baris pada matriks. Berikut adalah contoh penerapannya:\n# mengetahui jumlah kolom\rncol(my_data)\r## [1] 3\r# mengetahui jumlah baris\rnrow(my_data)\r## [1] 5\rJika ingin memperoleh ringkasan terkait dimensi matriks kita juga dapat mengunakan fungsi dim() untuk mengetahui jumlah baris dan kolom matriks. Berikut adalah contoh penerapannya:\ndim(my_data) # jumlah baris dan kolom\r## [1] 5 3\r\r2.8.2 Subset Pada Matriks\rSama dengan vektor, subset juga dapat dilakukan pada matriks. Bedanya subset dilakukan berdasarkan baris dan kolom pada matriks.\n\rMemilih baris/kolom berdasarkan pengindeksan positif\r\rbaris atau kolom dapat diseleksi menggunakan format data[row, col]. Cara selesi ini sama dengan vektor, bedanya kita harus menetukan baris dan kolom dari data yang akan kita pilih. Berikut adalah contoh penerapannya:\n# Pilih baris ke-2\rmy_data[2,]\r## col1 col2 col3 ## 6 4 3\r# Pilih baris 2 sampai 4\rmy_data[2:4,]\r## col1 col2 col3\r## row2 6 4 3\r## row3 7 5 4\r## row4 8 9 8\r# Pilih baris 2 dan 4\rmy_data[c(2,4),]\r## col1 col2 col3\r## row2 6 4 3\r## row4 8 9 8\r# Pilih baris 2 dan kolom 3\rmy_data[2, 3]\r## [1] 3\r\rPilih berdasarkan nama baris/kolom\r\rBerikut adalah contoh subset berdasarkan nama baris atau kolom.\n# Pilih baris 1 dan kolom 3\rmy_data[\u0026quot;row1\u0026quot;,\u0026quot;col3\u0026quot;]\r## [1] 7\r# Pilih baris 1 sampai 4 dan kolom 3\rbaris \u0026lt;- c(\u0026quot;row1\u0026quot;,\u0026quot;row2\u0026quot;,\u0026quot;row3\u0026quot;)\rmy_data[baris, \u0026quot;col3\u0026quot;]\r## row1 row2 row3 ## 7 3 4\r\rKecualikan baris/kolom dengan pengindeksan negatif\r\rSama seperti vektor pengecualian data dapat dilakukan di matriks menggunakan pengindeksan negatif. Berikut cara melakukannya:\n# Kecualikan baris 2 dan 3 serta kolom 3\rmy_data[-c(2,3), -3]\r## col1 col2\r## row1 5 2\r## row4 8 9\r## row5 9 8\r\rPilihan dengan logika\r\rDalam kode R di bawah ini, misalkan kita ingin hanya menyimpan baris di mana col3\u0026gt; = 4:\ncol3 \u0026lt;- my_data[, \u0026quot;col3\u0026quot;]\rmy_data[col3 \u0026gt;= 4, ]\r## col1 col2 col3\r## row1 5 2 7\r## row3 7 5 4\r## row4 8 9 8\r## row5 9 8 7\r\r2.8.3 Perhitungan Menggunakan Matriks\r_ Kita juga dapat melakukan operasi matematika pada matriks. Pada operasi matematika pada matriks proses yang terjadi bisa lebih kompleks dibanding pada vektor, dimana kita dapat melakukan operasi untuk memperoleh gambaran data pada tiap kolom atau baris.\nBerikut adalah contoh operasi matematika sederhana pada matriks:\n# mengalikan masing-masing elemen matriks dengan 2\rmy_data*2\r## col1 col2 col3\r## row1 10 4 14\r## row2 12 8 6\r## row3 14 10 8\r## row4 16 18 16\r## row5 18 16 14\r# memperoleh nilai log basis 2 pada masing-masing elemen matriks\rlog2(my_data)\r## col1 col2 col3\r## row1 2.321928 1.000000 2.807355\r## row2 2.584963 2.000000 1.584963\r## row3 2.807355 2.321928 2.000000\r## row4 3.000000 3.169925 3.000000\r## row5 3.169925 3.000000 2.807355\rSeperti yang telah penulis jelaskan sebelumnya, kita juga dapat melakukan operasi matematika untuk memperoleh hasil penjumlahan elemen pada tiap baris atau kolom dengan menggunakan fungsi rowSums() untuk baris dan colSums() untuk kolom.\n# Total pada tiap kolom\rcolSums(my_data)\r## col1 col2 col3 ## 35 28 29\r# Total pada tiap baris\rrowSums(my_data)\r## row1 row2 row3 row4 row5 ## 14 13 16 25 24\rJika kita tertarik untuk mencari nilai rata-rata tiap baris arau kolom kita juga dapat menggunakan fungsi rowMeans() atau colMeans(). Berikut adalah contoh penerapannya:\n# Rata-rata tiap baris\rrowMeans(my_data)\r## row1 row2 row3 row4 row5 ## 4.666667 4.333333 5.333333 8.333333 8.000000\r# Rata-rata tiap kolom\rcolMeans(my_data)\r## col1 col2 col3 ## 7.0 5.6 5.8\rKita juga dapat melakukan perhitungan statistika lainnya menggunakan fungsi apply(). Berikut adalah format sederhananya:\napply(x, MARGIN, FUN)\r\rNote: \n\rx : data matriks\rMARGIN : Nilai yang dapat digunakan adalah 1 (untuk operasi pada baris) dan 2 (untuk operasi pada kolom)\rFUN : fungsi yang diterapkan pada baris atau kolom\r\r\runtuk mengetahui fungsi (FUN) apa saja yang dapat diterapkan pada fungsi apply() jalankan sintaks bantuan berikut:\nhelp(apply)\rBerikut adalah contoh penerapannya:\n# Rata-rata pada tiap baris\rapply(my_data, 1, mean)\r## row1 row2 row3 row4 row5 ## 4.666667 4.333333 5.333333 8.333333 8.000000\r# Median pada tiap kolom\rapply(my_data, 2, median)\r## col1 col2 col3 ## 7 5 7\r\r\r2.9 Faktor\rDalam bahasa R , faktor merupakan verktor dengan level. Level disimpan sebagai R Character. Jika kita menggunakan SPSS maka factor ini akan sama dengan jenis data numerik atau ordinal.\nFaktor merepresentasikan kategori atau grup pada data. Untuk membuat faktor pada R, kita dapat menggunakan fungsi factor().\n2.9.1 Membuat Variabel Faktor\rBerikut adalah contoh sintaks pembuatan variabel faktor.\n# membuat variabel faktor\rfaktor \u0026lt;- factor(c(1,2,1,2))\rfaktor\r## [1] 1 2 1 2\r## Levels: 1 2\rPada sintaks tersebut objek faktor terdiri atas dua buah kategori atau pada R disebut sebagai factor levels. Kita dapat mengecek factor levels menggunakan fungsi levels().\nlevels(faktor)\r## [1] \u0026quot;1\u0026quot; \u0026quot;2\u0026quot;\rKita juga dapat memberikan label atau mengubah level pada faktor. Berikut adalah contoh bagaimana kita melakukannya:\n# Ubah level\rlevels(faktor) \u0026lt;- c(\u0026quot;baik\u0026quot;,\u0026quot;tidak_baik\u0026quot;)\rfaktor\r## [1] baik tidak_baik baik tidak_baik\r## Levels: baik tidak_baik\r# Ubah urutan level\rfaktor \u0026lt;- factor(faktor,\rlevels = c(\u0026quot;tidak_baik\u0026quot;,\u0026quot;baik\u0026quot;))\rfaktor\r## [1] baik tidak_baik baik tidak_baik\r## Levels: tidak_baik baik\r\rNote: \n\rFungsi is.factor() dapat digunakan untuk mengecek apakah sebuah variabel adalah faktor. Hasil yang dimunculkan dapat berupa TRUE (jika faktor) atau FALSE (jika bukan)\rFungsi as.factor() dapat digunakan untuk merubah sebuah variabel menjadi faktor.\r\r\r# Cek jika objek faktor adalah faktor\ris.factor(faktor)\r## [1] TRUE\r# Cek jika objek Jumlah adalah faktor\ris.factor(Jumlah)\r## [1] FALSE\r# Ubah objek Jumlah menjadi faktor\ras.factor(Jumlah)\r## Apel Jeruk Rambutan Salak ## 5 \u0026lt;NA\u0026gt; 6 7 ## Levels: 5 6 7\r\r2.9.2 Perhitungan Menggunakan Faktor\rJika kita ingin mengetahui jumlah masing-masing observasi pada masing-masing faktor, kita dapat menggunakan fungsi summary(). Berikut adalah contoh penerapannya:\nsummary(faktor)\r## tidak_baik baik ## 2 2\rPada contoh perhitungan menggunakan vektor kita telah membuat objek pendapatan. Pada objek tersebut kita ingin menghitung nilai rata-rata pendapatan berdasarkan objek faktor. Untuk melakukannya kita dapat menggunakan fungsi tapply().\npendapatan\r## Andi Joni Lina Rani ## 2000 1800 2500 3000\rfaktor\r## [1] baik tidak_baik baik tidak_baik\r## Levels: tidak_baik baik\r# Rata-rata pendapatan dan simpan sebagai objek dengan nama:\r# mean_pendapatan\rmean_pendapatan \u0026lt;- tapply(pendapatan, faktor, mean)\rmean_pendapatan\r## tidak_baik baik ## 2400 2250\r# Hitung ukuran/panjang masing-masing grup\rtapply(pendapatan, faktor, length)\r## tidak_baik baik ## 2 2\rUntuk mengetahui jumlah masing-masing observasi masing-masing factor levels kita juga dapat menggunakan fungsi table(). Fungsi tersebut akan membuat frekuensi tabel pada masing-masing factor levels atau yang dikenal sebagai contingency table.\ntable(faktor)\r## faktor\r## tidak_baik baik ## 2 2\r# Cross-tabulation antara\r# faktor dan pendapatan\rtable(pendapatan, faktor)\r## faktor\r## pendapatan tidak_baik baik\r## 1800 1 0\r## 2000 0 1\r## 2500 0 1\r## 3000 1 0\r\r\r2.10 Data Frames\rData frame merupakan kumpulan vektor dengan panjang sama atau dapat pula dikatan sebagai matriks yang memiliki kolom dengan jenis data yang berbeda-beda (numerik, karakter, logical). Pada data frame terdapat baris dan kolom. Baris disebut sebagai observasi, sedangkan kolom disebut sebagai variabel. Sehingga dapat dikatakan bahwa setiap observasi akan memiliki satu atau beberapa variabel.\n2.10.1 Membuat Data Frame\rData frame dapat dibuat menggunakan fungsi data.frame(). Berikut adalah contoh cara membuat data frame:\n# Membuat data frame\rnama \u0026lt;- c(\u0026quot;Andi\u0026quot;,\u0026quot;Rizal\u0026quot;,\u0026quot;Ani\u0026quot;,\u0026quot;Ina\u0026quot;)\rpendapatan \u0026lt;- c(1000, 2000, 3500, 500)\rtinggi \u0026lt;- c(160, 155, 170, 146)\rusia \u0026lt;- c(35, 40, 25, 27)\rmenikah \u0026lt;- c(TRUE, FALSE, TRUE, TRUE)\rdata_teman \u0026lt;- data.frame(nama = nama,\rgaji = pendapatan,\rtinggi = tinggi,\rmenikah = menikah)\rdata_teman\r## nama gaji tinggi menikah\r## 1 Andi 1000 160 TRUE\r## 2 Rizal 2000 155 FALSE\r## 3 Ani 3500 170 TRUE\r## 4 Ina 500 146 TRUE\rUntuk mengecek apakah objek data_teman merupakan data frame, kita dapat menggunakan fungsi is.data.frame(). Jika hasilnya TRUE, maka objek tersebut adalah data frame. Berikut adalah contoh penerapannya:\nis.data.frame(data_teman)\r## [1] TRUE\r\rNote:  untuk konversi objek menjadi data frame, kita dapat menjalankan fungsi as.data.frame().\n\r\r2.10.2 Subset Pada Data Frame\rSubset pada data frame sebenarnya tidak berbeda dengan subset pada matriks. Bedanya adalah kita juga bisa melakukan subset langsung terhadap nama variabel menggunakan dollar sign. Untuk lebih memahaminya berikut adalah jenis subset pada data frame.\n\rPengindeksan positif menggunakan nama dan lokasi.\r\r# Subset menggunakan dollar sign\rdata_teman$nama\r## [1] Andi Rizal Ani Ina ## Levels: Andi Ani Ina Rizal\r# atau data_teman[, \u0026quot;nama\u0026quot;]\r## [1] Andi Rizal Ani Ina ## Levels: Andi Ani Ina Rizal\r# subset baris 1 sampai 3 serta kolom 1 dan 3\rdata_teman[1:3, c(1,3)]\r## nama tinggi\r## 1 Andi 160\r## 2 Rizal 155\r## 3 Ani 170\r\rPengindeksan negatif\r\r# Kecualikan kolom nama\rdata_teman[,-1]\r## gaji tinggi menikah\r## 1 1000 160 TRUE\r## 2 2000 155 FALSE\r## 3 3500 170 TRUE\r## 4 500 146 TRUE\r\rPengideksan berdasarkan karakteristik\r\rKita ingin memilih data dengan kriteria teman yang telah menikah\ndata_teman[data_teman$menikah==TRUE, ]\r## nama gaji tinggi menikah\r## 1 Andi 1000 160 TRUE\r## 3 Ani 3500 170 TRUE\r## 4 Ina 500 146 TRUE\r# Tampilkan hanya kolom nama dan gaji untuk yang telah menikah\rdata_teman[data_teman$menikah==TRUE, 1:2]\r## nama gaji\r## 1 Andi 1000\r## 3 Ani 3500\r## 4 Ina 500\rkita juga dapat menggunakan fungsi subset() agar lebih mudah. Berikut adalah contoh penerapannya:\n# subset terhadap teman yang berusia \u0026gt;=30 tahun\rsubset(data_teman, usia\u0026gt;=30)\r## nama gaji tinggi menikah\r## 1 Andi 1000 160 TRUE\r## 2 Rizal 2000 155 FALSE\rOpsi lain adalah menggunakan fungsi attach() dan detach(). Fungsi attach() mengambil data frame dan membuat kolomnya dapat diakses hanya dengan memberikan nama mereka.\n# attach data frame\rattach(data_teman)\r## The following objects are masked _by_ .GlobalEnv:\r## ## menikah, nama, tinggi\r# ==== memulai data manipulation ====\rdata_teman[usia\u0026gt;=30]\r## nama gaji\r## 1 Andi 1000\r## 2 Rizal 2000\r## 3 Ani 3500\r## 4 Ina 500\r# ==== mengakhiri data manipulation ====\r# detach data frame\rdetach(data_teman)\r\r2.10.3 Memperluas Data Frame\rKita dapat juga memperluas data frame dengan cara menambahkan variabel atau kolombaru pada data frame. Pada contoh kali ini penulis akan menambahkan kolom pendidikan terakhir pada objek data_teman. Berikut adalah sintaks yang digunakan.\n# membuat vektor pendidikan\rpendidikan \u0026lt;- c(\u0026quot;S1\u0026quot;,\u0026quot;S2\u0026quot;,\u0026quot;D3\u0026quot;,\u0026quot;D1\u0026quot;)\r# menambahkan variabel pendidikan pada data frame\rdata_teman$pendidikan \u0026lt;- pendidikan\r# atau\rcbind(data_teman, pendidikan=pendidikan)\r\r2.10.4 Perhitungan Pada Data Frame\rPerhitungan pada variabel numerik data frame pada dasarnya sama dengan perhitungan pada matriks. kita dapat menggunakan fungsi rowSums(), colSums(), rowMeans() dan apply(). Proses perhitungan dan manipulasi pada data frame akan dibahas pada sesi yang lain secara lebih detail.\n\r\r2.11 List\rList adalah kumpulan objek yang diurutkan, yang dapat berupa vektor, matriks, data frame, dll. Dengan kata lain, daftar dapat berisi semua jenis objek R.\n2.11.1 Membuat List\rList dapat dibuat menggunakan fungsi list(). Berikut disajikan contoh sebuah list sebuah keluarga:\n# Membuat list keluarga\rkeluarga \u0026lt;- list(\rayah = \u0026quot;Budi\u0026quot;,\rusia_ayah = 48,\ribu = \u0026quot;Ani\u0026quot;,\rusia_ibu = \u0026quot;47\u0026quot;,\ranak = c(\u0026quot;Andi\u0026quot;, \u0026quot;Adi\u0026quot;),\rusia_anak = c(15,10)\r)\r# Print\rkeluarga\r## $ayah\r## [1] \u0026quot;Budi\u0026quot;\r## ## $usia_ayah\r## [1] 48\r## ## $ibu\r## [1] \u0026quot;Ani\u0026quot;\r## ## $usia_ibu\r## [1] \u0026quot;47\u0026quot;\r## ## $anak\r## [1] \u0026quot;Andi\u0026quot; \u0026quot;Adi\u0026quot; ## ## $usia_anak\r## [1] 15 10\r# Nama elemen dalam list\rnames(keluarga)\r## [1] \u0026quot;ayah\u0026quot; \u0026quot;usia_ayah\u0026quot; \u0026quot;ibu\u0026quot; \u0026quot;usia_ibu\u0026quot; \u0026quot;anak\u0026quot; \u0026quot;usia_anak\u0026quot;\r# Jumlah elemen pada list\rlength(keluarga)\r## [1] 6\r\r2.11.2 Subset List\rKita dapat memilih sebuah elemen pada list dengan menggunakan nama elemen atau indeks dari elemen tersebut. Berikut adalah contoh penerapannya:\n# Subset berdasarkan nama\r# mengambil elemen usia_ayah\rkeluarga$usia_ayah\r## [1] 48\r# Atau\rkeluarga[[\u0026quot;usia_ayah\u0026quot;]]\r## [1] 48\r# Subset berdasarkan indeks\rkeluarga[[2]]\r## [1] 48\r# subset elemen pertama pada keluarga[[5]]\rkeluarga[[5]][1]\r## [1] \u0026quot;Andi\u0026quot;\r\r2.11.3 Memperluas List\rKita juga dapat menambahkan elemen pada list yang telah kita buat. Pada contoh list sebelumnya penulis akan menambahkan elemen keluarga yang lain seperti berikut:\n# Menambahkan kakek dan nenek pada list\rkeluarga$kakek \u0026lt;- \u0026quot;Suprapto\u0026quot;\rkeluarga$nenek \u0026lt;- \u0026quot;Sri\u0026quot;\r# Print\rkeluarga\r## $ayah\r## [1] \u0026quot;Budi\u0026quot;\r## ## $usia_ayah\r## [1] 48\r## ## $ibu\r## [1] \u0026quot;Ani\u0026quot;\r## ## $usia_ibu\r## [1] \u0026quot;47\u0026quot;\r## ## $anak\r## [1] \u0026quot;Andi\u0026quot; \u0026quot;Adi\u0026quot; ## ## $usia_anak\r## [1] 15 10\r## ## $kakek\r## [1] \u0026quot;Suprapto\u0026quot;\r## ## $nenek\r## [1] \u0026quot;Sri\u0026quot;\rKita juga dapat menggabungkan beberapa list menjadi satu. Berikut adalah format sederhana bagaimana cara menggabungkan beberapa list menjadi satu:\nlist_baru \u0026lt;- c(list_a, list_b, list_c, ...)\r\r\r2.12 Loop\rLoop merupakan kode program yang berulang-ulang. Loop berguna saat kita ingin melakukan sebuah perintah yang perlu dijalankan berulang-ulang seperti melakukan perhitungan maupaun melakukan visualisasi terhadap banyak variabel secara serentak. Hal ini tentu saja membantu kita karena kita tidak perlu menulis sejumlah sintaks yang berulang-ulang. Kita hanya perlu mengatur statement berdasarkan hasil yang kita harapkan.\nPada R bentuk loop dapat bermacam-macam (“for loop”,“while loop”, dll). R menyederhanakan bentuk loop ini dengan menyediakan sejumlah fungsi seperti apply(),tapply(), dll. Sehingga loop jarang sekali muncul dalam kode R. Sehingga R sering disebut sebagai loopless loop.\nMeski loop jarang muncul bukan berarti kita tidak akan melakukannya. Terkadang saat kita melakukan komputasi statistik atau matematik dan belum terdapat paket yang mendukung proses tersebut, sering kali kita akan membuat sintaks sendiri berdasarkan algoritma metode tersebut. Pada algoritma tersebut sering pula terdapat loop yang diperlukan selama proses perhitungan. Secara sederhana diagram umum loop ditampilkan pada Figure 1\n\rFigure 1: Diagram umum loop (sumber: Primartha, 2018).\r\r\r","date":1536426000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536426000,"objectID":"04b73e5721338a9dc2554955dc4acf7e","permalink":"/tutorial/02_sintaks-bahasa-r/","publishdate":"2018-09-09T00:00:00+07:00","relpermalink":"/tutorial/02_sintaks-bahasa-r/","section":"tutorial","summary":"Daftar Isi\r\rOperator Aritmatika\rFungsi Aritmetik\rOperator Relasi\rOperator Logika\rMemasukkan Nilai Kedalam Variabel\rTipe Data\rVektor\rMatriks\rFaktor\rData Frames\rList\rLoop\r\r\r2.1 Operator Aritmatika\rProses perhitungan akan ditangani oleh fungsi khusus. R akan memahami urutannya secara benar. Kecuali kita secara eksplisit menetapkan yang lain. Sebagai contoh jalankan sintaks berikut:\n2+4*2\r## [1] 10\rBandingkan dengan sintaks berikut:\n(2+4)*2\r## [1] 12\r\rR dapat digunakan sebagai kalkulator","tags":null,"title":"2. Sintaks Bahasa R","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.\n  Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483203600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483203600,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00+07:00","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"This project is a website in the form of a collection of topics related to data analysis and modeling in the environmental field. This website is structured in such a way as to contain a number of material related to statistics, advanced mathematics, environmental engineering modeling, and operations research in the field of environmental engineering.\nThe website is updated every week where each author update will share on the author\u0026rsquo;s social media account. Readers can continue to follow the writing on the website by visiting the site environmental learning.wordpress.com.\n","date":1461690000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461690000,"objectID":"a0e4c49a97de4c62f04b541c8d10b613","permalink":"/project/environmental-learning-website/","publishdate":"2016-04-27T00:00:00+07:00","relpermalink":"/project/environmental-learning-website/","section":"project","summary":"This project is a website in the form of a collection of topics related to data analysis and modeling in the environmental field. This website is structured in such a way as to contain a number of material related to statistics, advanced mathematics, environmental engineering modeling, and operations research in the field of environmental engineering.\nThe website is updated every week where each author update will share on the author\u0026rsquo;s social media account.","tags":["R","Statistics"],"title":"Environmental Learning Website Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461690000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461690000,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00+07:00","relpermalink":"/project/external-project/","section":"project","summary":"Author repository collection on `Github`.","tags":["R"],"title":"External Project","type":"project"},{"authors":["Mohammad Rosidi, S.T."],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you\u0026rsquo;ll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461085200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515776400,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00+07:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":"\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u0026lt;- lm(dist ~ speed, data = cars)\rfit\r## ## Call:\r## lm(formula = dist ~ speed, data = cars)\r## ## Coefficients:\r## (Intercept) speed ## -17.579 3.932\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;),\rcol = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["Mohammad Rosidi","Mohammad Razif"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"98a16eebf121a69c91ade830fd98e0bc","permalink":"/publication/perancangan-ipal/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/publication/perancangan-ipal/","section":"publication","summary":"The paper industry is an industry that produces large amounts of liquid waste. In addition, the content of pollutant parameters in the paper coloring process is very high. Based on East Java Governor no. 72 of 2013 there are 5 quality standards for wastewater that must be met before being discharged into water bodies. The parameters that need to be processed are pH, COD, BOD, TSS, and Pb. In the design used primary data in the form of debit data and waste characteristics taken from the fine paper industry of PT. Sido Sidoarjo. Waste treated comes from the paper coloring process. Characteristics of treated waste have a value of TSS41000 mg / l, COD 45384 mg / l, BOD 8300 mg / l, Pb 0.56 mg / l and pH 7.7. The planned WWTP unit consists of precedimentation, equalization tanks, fast stirring tanks , slow stirrer, sedimentation 2, and ABR-ABF. Calculation of BOQ and RAB using HSPK Surabaya City 2015 and obtained a figure of Rp217,650,760 for the construction of all units of WWTP.","tags":[],"title":"Perancangan Instalasi Pengolahan Air Limbah (IPAL) Industri Kertas Halus","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]